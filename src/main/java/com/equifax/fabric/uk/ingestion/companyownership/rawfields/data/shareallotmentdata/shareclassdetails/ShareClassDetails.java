/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ShareClassDetails extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ShareClassDetails\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails\",\"fields\":[{\"name\":\"currency\",\"type\":[\"null\",\"string\"],\"doc\":\"Currency\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"shareType\",\"type\":[\"null\",\"string\"],\"doc\":\"Share Type\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"numberAllotted\",\"type\":[\"null\",\"string\"],\"doc\":\"Shares Alloted Numbers\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"nominalPerShare\",\"type\":[\"null\",\"string\"],\"doc\":\"Nominal per share\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"paidPerShare\",\"type\":[\"null\",\"string\"],\"doc\":\"Paid per share\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"percentTreated\",\"type\":[\"null\",\"string\"],\"doc\":\"Percent Treated\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"percentCash\",\"type\":[\"null\",\"string\"],\"doc\":\"Percent Cash\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"consideration\",\"type\":[\"null\",\"string\"],\"doc\":\"Shares Considerations\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dateProcessed\",\"type\":[\"null\",\"string\"],\"doc\":\"Shares date processed\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"deleteFlag\",\"type\":[\"null\",\"string\"],\"doc\":\"Shares delete flag\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"freeLoadSN\",\"type\":[\"null\",\"string\"],\"doc\":\"Shares Free loan SN\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"classOfShares\",\"type\":[\"null\",\"string\"],\"doc\":\"Class of shares\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"sharesIssued\",\"type\":[\"null\",\"string\"],\"doc\":\"Shares issued\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"aggregatedNominalValue\",\"type\":[\"null\",\"string\"],\"doc\":\"Aggregated nominal value\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"shareValue\",\"type\":[\"null\",\"string\"],\"doc\":\"Share value\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"badTotalFlag\",\"type\":[\"null\",\"string\"],\"doc\":\"Bad Total Flag\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"stdClassOfShares\",\"type\":[\"null\",\"string\"],\"doc\":\"Share allotment data - Class of shares\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Currency */
  @Deprecated public java.lang.CharSequence currency;
  /** Share Type */
  @Deprecated public java.lang.CharSequence shareType;
  /** Shares Alloted Numbers */
  @Deprecated public java.lang.CharSequence numberAllotted;
  /** Nominal per share */
  @Deprecated public java.lang.CharSequence nominalPerShare;
  /** Paid per share */
  @Deprecated public java.lang.CharSequence paidPerShare;
  /** Percent Treated */
  @Deprecated public java.lang.CharSequence percentTreated;
  /** Percent Cash */
  @Deprecated public java.lang.CharSequence percentCash;
  /** Shares Considerations */
  @Deprecated public java.lang.CharSequence consideration;
  /** Shares date processed */
  @Deprecated public java.lang.CharSequence dateProcessed;
  /** Shares delete flag */
  @Deprecated public java.lang.CharSequence deleteFlag;
  /** Shares Free loan SN */
  @Deprecated public java.lang.CharSequence freeLoadSN;
  /** Class of shares */
  @Deprecated public java.lang.CharSequence classOfShares;
  /** Shares issued */
  @Deprecated public java.lang.CharSequence sharesIssued;
  /** Aggregated nominal value */
  @Deprecated public java.lang.CharSequence aggregatedNominalValue;
  /** Share value */
  @Deprecated public java.lang.CharSequence shareValue;
  /** Bad Total Flag */
  @Deprecated public java.lang.CharSequence badTotalFlag;
  /** Share allotment data - Class of shares */
  @Deprecated public java.lang.CharSequence stdClassOfShares;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ShareClassDetails() {}

  /**
   * All-args constructor.
   */
  public ShareClassDetails(java.lang.CharSequence currency, java.lang.CharSequence shareType, java.lang.CharSequence numberAllotted, java.lang.CharSequence nominalPerShare, java.lang.CharSequence paidPerShare, java.lang.CharSequence percentTreated, java.lang.CharSequence percentCash, java.lang.CharSequence consideration, java.lang.CharSequence dateProcessed, java.lang.CharSequence deleteFlag, java.lang.CharSequence freeLoadSN, java.lang.CharSequence classOfShares, java.lang.CharSequence sharesIssued, java.lang.CharSequence aggregatedNominalValue, java.lang.CharSequence shareValue, java.lang.CharSequence badTotalFlag, java.lang.CharSequence stdClassOfShares) {
    this.currency = currency;
    this.shareType = shareType;
    this.numberAllotted = numberAllotted;
    this.nominalPerShare = nominalPerShare;
    this.paidPerShare = paidPerShare;
    this.percentTreated = percentTreated;
    this.percentCash = percentCash;
    this.consideration = consideration;
    this.dateProcessed = dateProcessed;
    this.deleteFlag = deleteFlag;
    this.freeLoadSN = freeLoadSN;
    this.classOfShares = classOfShares;
    this.sharesIssued = sharesIssued;
    this.aggregatedNominalValue = aggregatedNominalValue;
    this.shareValue = shareValue;
    this.badTotalFlag = badTotalFlag;
    this.stdClassOfShares = stdClassOfShares;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return currency;
    case 1: return shareType;
    case 2: return numberAllotted;
    case 3: return nominalPerShare;
    case 4: return paidPerShare;
    case 5: return percentTreated;
    case 6: return percentCash;
    case 7: return consideration;
    case 8: return dateProcessed;
    case 9: return deleteFlag;
    case 10: return freeLoadSN;
    case 11: return classOfShares;
    case 12: return sharesIssued;
    case 13: return aggregatedNominalValue;
    case 14: return shareValue;
    case 15: return badTotalFlag;
    case 16: return stdClassOfShares;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: currency = (java.lang.CharSequence)value$; break;
    case 1: shareType = (java.lang.CharSequence)value$; break;
    case 2: numberAllotted = (java.lang.CharSequence)value$; break;
    case 3: nominalPerShare = (java.lang.CharSequence)value$; break;
    case 4: paidPerShare = (java.lang.CharSequence)value$; break;
    case 5: percentTreated = (java.lang.CharSequence)value$; break;
    case 6: percentCash = (java.lang.CharSequence)value$; break;
    case 7: consideration = (java.lang.CharSequence)value$; break;
    case 8: dateProcessed = (java.lang.CharSequence)value$; break;
    case 9: deleteFlag = (java.lang.CharSequence)value$; break;
    case 10: freeLoadSN = (java.lang.CharSequence)value$; break;
    case 11: classOfShares = (java.lang.CharSequence)value$; break;
    case 12: sharesIssued = (java.lang.CharSequence)value$; break;
    case 13: aggregatedNominalValue = (java.lang.CharSequence)value$; break;
    case 14: shareValue = (java.lang.CharSequence)value$; break;
    case 15: badTotalFlag = (java.lang.CharSequence)value$; break;
    case 16: stdClassOfShares = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'currency' field.
   * Currency   */
  public java.lang.CharSequence getCurrency() {
    return currency;
  }

  /**
   * Sets the value of the 'currency' field.
   * Currency   * @param value the value to set.
   */
  public void setCurrency(java.lang.CharSequence value) {
    this.currency = value;
  }

  /**
   * Gets the value of the 'shareType' field.
   * Share Type   */
  public java.lang.CharSequence getShareType() {
    return shareType;
  }

  /**
   * Sets the value of the 'shareType' field.
   * Share Type   * @param value the value to set.
   */
  public void setShareType(java.lang.CharSequence value) {
    this.shareType = value;
  }

  /**
   * Gets the value of the 'numberAllotted' field.
   * Shares Alloted Numbers   */
  public java.lang.CharSequence getNumberAllotted() {
    return numberAllotted;
  }

  /**
   * Sets the value of the 'numberAllotted' field.
   * Shares Alloted Numbers   * @param value the value to set.
   */
  public void setNumberAllotted(java.lang.CharSequence value) {
    this.numberAllotted = value;
  }

  /**
   * Gets the value of the 'nominalPerShare' field.
   * Nominal per share   */
  public java.lang.CharSequence getNominalPerShare() {
    return nominalPerShare;
  }

  /**
   * Sets the value of the 'nominalPerShare' field.
   * Nominal per share   * @param value the value to set.
   */
  public void setNominalPerShare(java.lang.CharSequence value) {
    this.nominalPerShare = value;
  }

  /**
   * Gets the value of the 'paidPerShare' field.
   * Paid per share   */
  public java.lang.CharSequence getPaidPerShare() {
    return paidPerShare;
  }

  /**
   * Sets the value of the 'paidPerShare' field.
   * Paid per share   * @param value the value to set.
   */
  public void setPaidPerShare(java.lang.CharSequence value) {
    this.paidPerShare = value;
  }

  /**
   * Gets the value of the 'percentTreated' field.
   * Percent Treated   */
  public java.lang.CharSequence getPercentTreated() {
    return percentTreated;
  }

  /**
   * Sets the value of the 'percentTreated' field.
   * Percent Treated   * @param value the value to set.
   */
  public void setPercentTreated(java.lang.CharSequence value) {
    this.percentTreated = value;
  }

  /**
   * Gets the value of the 'percentCash' field.
   * Percent Cash   */
  public java.lang.CharSequence getPercentCash() {
    return percentCash;
  }

  /**
   * Sets the value of the 'percentCash' field.
   * Percent Cash   * @param value the value to set.
   */
  public void setPercentCash(java.lang.CharSequence value) {
    this.percentCash = value;
  }

  /**
   * Gets the value of the 'consideration' field.
   * Shares Considerations   */
  public java.lang.CharSequence getConsideration() {
    return consideration;
  }

  /**
   * Sets the value of the 'consideration' field.
   * Shares Considerations   * @param value the value to set.
   */
  public void setConsideration(java.lang.CharSequence value) {
    this.consideration = value;
  }

  /**
   * Gets the value of the 'dateProcessed' field.
   * Shares date processed   */
  public java.lang.CharSequence getDateProcessed() {
    return dateProcessed;
  }

  /**
   * Sets the value of the 'dateProcessed' field.
   * Shares date processed   * @param value the value to set.
   */
  public void setDateProcessed(java.lang.CharSequence value) {
    this.dateProcessed = value;
  }

  /**
   * Gets the value of the 'deleteFlag' field.
   * Shares delete flag   */
  public java.lang.CharSequence getDeleteFlag() {
    return deleteFlag;
  }

  /**
   * Sets the value of the 'deleteFlag' field.
   * Shares delete flag   * @param value the value to set.
   */
  public void setDeleteFlag(java.lang.CharSequence value) {
    this.deleteFlag = value;
  }

  /**
   * Gets the value of the 'freeLoadSN' field.
   * Shares Free loan SN   */
  public java.lang.CharSequence getFreeLoadSN() {
    return freeLoadSN;
  }

  /**
   * Sets the value of the 'freeLoadSN' field.
   * Shares Free loan SN   * @param value the value to set.
   */
  public void setFreeLoadSN(java.lang.CharSequence value) {
    this.freeLoadSN = value;
  }

  /**
   * Gets the value of the 'classOfShares' field.
   * Class of shares   */
  public java.lang.CharSequence getClassOfShares() {
    return classOfShares;
  }

  /**
   * Sets the value of the 'classOfShares' field.
   * Class of shares   * @param value the value to set.
   */
  public void setClassOfShares(java.lang.CharSequence value) {
    this.classOfShares = value;
  }

  /**
   * Gets the value of the 'sharesIssued' field.
   * Shares issued   */
  public java.lang.CharSequence getSharesIssued() {
    return sharesIssued;
  }

  /**
   * Sets the value of the 'sharesIssued' field.
   * Shares issued   * @param value the value to set.
   */
  public void setSharesIssued(java.lang.CharSequence value) {
    this.sharesIssued = value;
  }

  /**
   * Gets the value of the 'aggregatedNominalValue' field.
   * Aggregated nominal value   */
  public java.lang.CharSequence getAggregatedNominalValue() {
    return aggregatedNominalValue;
  }

  /**
   * Sets the value of the 'aggregatedNominalValue' field.
   * Aggregated nominal value   * @param value the value to set.
   */
  public void setAggregatedNominalValue(java.lang.CharSequence value) {
    this.aggregatedNominalValue = value;
  }

  /**
   * Gets the value of the 'shareValue' field.
   * Share value   */
  public java.lang.CharSequence getShareValue() {
    return shareValue;
  }

  /**
   * Sets the value of the 'shareValue' field.
   * Share value   * @param value the value to set.
   */
  public void setShareValue(java.lang.CharSequence value) {
    this.shareValue = value;
  }

  /**
   * Gets the value of the 'badTotalFlag' field.
   * Bad Total Flag   */
  public java.lang.CharSequence getBadTotalFlag() {
    return badTotalFlag;
  }

  /**
   * Sets the value of the 'badTotalFlag' field.
   * Bad Total Flag   * @param value the value to set.
   */
  public void setBadTotalFlag(java.lang.CharSequence value) {
    this.badTotalFlag = value;
  }

  /**
   * Gets the value of the 'stdClassOfShares' field.
   * Share allotment data - Class of shares   */
  public java.lang.CharSequence getStdClassOfShares() {
    return stdClassOfShares;
  }

  /**
   * Sets the value of the 'stdClassOfShares' field.
   * Share allotment data - Class of shares   * @param value the value to set.
   */
  public void setStdClassOfShares(java.lang.CharSequence value) {
    this.stdClassOfShares = value;
  }

  /** Creates a new ShareClassDetails RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder();
  }
  
  /** Creates a new ShareClassDetails RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder other) {
    return new com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder(other);
  }
  
  /** Creates a new ShareClassDetails RecordBuilder by copying an existing ShareClassDetails instance */
  public static com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails other) {
    return new com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder(other);
  }
  
  /**
   * RecordBuilder for ShareClassDetails instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ShareClassDetails>
    implements org.apache.avro.data.RecordBuilder<ShareClassDetails> {

    private java.lang.CharSequence currency;
    private java.lang.CharSequence shareType;
    private java.lang.CharSequence numberAllotted;
    private java.lang.CharSequence nominalPerShare;
    private java.lang.CharSequence paidPerShare;
    private java.lang.CharSequence percentTreated;
    private java.lang.CharSequence percentCash;
    private java.lang.CharSequence consideration;
    private java.lang.CharSequence dateProcessed;
    private java.lang.CharSequence deleteFlag;
    private java.lang.CharSequence freeLoadSN;
    private java.lang.CharSequence classOfShares;
    private java.lang.CharSequence sharesIssued;
    private java.lang.CharSequence aggregatedNominalValue;
    private java.lang.CharSequence shareValue;
    private java.lang.CharSequence badTotalFlag;
    private java.lang.CharSequence stdClassOfShares;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.currency)) {
        this.currency = data().deepCopy(fields()[0].schema(), other.currency);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.shareType)) {
        this.shareType = data().deepCopy(fields()[1].schema(), other.shareType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.numberAllotted)) {
        this.numberAllotted = data().deepCopy(fields()[2].schema(), other.numberAllotted);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.nominalPerShare)) {
        this.nominalPerShare = data().deepCopy(fields()[3].schema(), other.nominalPerShare);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.paidPerShare)) {
        this.paidPerShare = data().deepCopy(fields()[4].schema(), other.paidPerShare);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.percentTreated)) {
        this.percentTreated = data().deepCopy(fields()[5].schema(), other.percentTreated);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.percentCash)) {
        this.percentCash = data().deepCopy(fields()[6].schema(), other.percentCash);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.consideration)) {
        this.consideration = data().deepCopy(fields()[7].schema(), other.consideration);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.dateProcessed)) {
        this.dateProcessed = data().deepCopy(fields()[8].schema(), other.dateProcessed);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.deleteFlag)) {
        this.deleteFlag = data().deepCopy(fields()[9].schema(), other.deleteFlag);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.freeLoadSN)) {
        this.freeLoadSN = data().deepCopy(fields()[10].schema(), other.freeLoadSN);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.classOfShares)) {
        this.classOfShares = data().deepCopy(fields()[11].schema(), other.classOfShares);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.sharesIssued)) {
        this.sharesIssued = data().deepCopy(fields()[12].schema(), other.sharesIssued);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.aggregatedNominalValue)) {
        this.aggregatedNominalValue = data().deepCopy(fields()[13].schema(), other.aggregatedNominalValue);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.shareValue)) {
        this.shareValue = data().deepCopy(fields()[14].schema(), other.shareValue);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.badTotalFlag)) {
        this.badTotalFlag = data().deepCopy(fields()[15].schema(), other.badTotalFlag);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.stdClassOfShares)) {
        this.stdClassOfShares = data().deepCopy(fields()[16].schema(), other.stdClassOfShares);
        fieldSetFlags()[16] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ShareClassDetails instance */
    private Builder(com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails other) {
            super(com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.SCHEMA$);
      if (isValidValue(fields()[0], other.currency)) {
        this.currency = data().deepCopy(fields()[0].schema(), other.currency);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.shareType)) {
        this.shareType = data().deepCopy(fields()[1].schema(), other.shareType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.numberAllotted)) {
        this.numberAllotted = data().deepCopy(fields()[2].schema(), other.numberAllotted);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.nominalPerShare)) {
        this.nominalPerShare = data().deepCopy(fields()[3].schema(), other.nominalPerShare);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.paidPerShare)) {
        this.paidPerShare = data().deepCopy(fields()[4].schema(), other.paidPerShare);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.percentTreated)) {
        this.percentTreated = data().deepCopy(fields()[5].schema(), other.percentTreated);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.percentCash)) {
        this.percentCash = data().deepCopy(fields()[6].schema(), other.percentCash);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.consideration)) {
        this.consideration = data().deepCopy(fields()[7].schema(), other.consideration);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.dateProcessed)) {
        this.dateProcessed = data().deepCopy(fields()[8].schema(), other.dateProcessed);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.deleteFlag)) {
        this.deleteFlag = data().deepCopy(fields()[9].schema(), other.deleteFlag);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.freeLoadSN)) {
        this.freeLoadSN = data().deepCopy(fields()[10].schema(), other.freeLoadSN);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.classOfShares)) {
        this.classOfShares = data().deepCopy(fields()[11].schema(), other.classOfShares);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.sharesIssued)) {
        this.sharesIssued = data().deepCopy(fields()[12].schema(), other.sharesIssued);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.aggregatedNominalValue)) {
        this.aggregatedNominalValue = data().deepCopy(fields()[13].schema(), other.aggregatedNominalValue);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.shareValue)) {
        this.shareValue = data().deepCopy(fields()[14].schema(), other.shareValue);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.badTotalFlag)) {
        this.badTotalFlag = data().deepCopy(fields()[15].schema(), other.badTotalFlag);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.stdClassOfShares)) {
        this.stdClassOfShares = data().deepCopy(fields()[16].schema(), other.stdClassOfShares);
        fieldSetFlags()[16] = true;
      }
    }

    /** Gets the value of the 'currency' field */
    public java.lang.CharSequence getCurrency() {
      return currency;
    }
    
    /** Sets the value of the 'currency' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder setCurrency(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.currency = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'currency' field has been set */
    public boolean hasCurrency() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'currency' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder clearCurrency() {
      currency = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'shareType' field */
    public java.lang.CharSequence getShareType() {
      return shareType;
    }
    
    /** Sets the value of the 'shareType' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder setShareType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.shareType = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'shareType' field has been set */
    public boolean hasShareType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'shareType' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder clearShareType() {
      shareType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'numberAllotted' field */
    public java.lang.CharSequence getNumberAllotted() {
      return numberAllotted;
    }
    
    /** Sets the value of the 'numberAllotted' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder setNumberAllotted(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.numberAllotted = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'numberAllotted' field has been set */
    public boolean hasNumberAllotted() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'numberAllotted' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder clearNumberAllotted() {
      numberAllotted = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'nominalPerShare' field */
    public java.lang.CharSequence getNominalPerShare() {
      return nominalPerShare;
    }
    
    /** Sets the value of the 'nominalPerShare' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder setNominalPerShare(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.nominalPerShare = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'nominalPerShare' field has been set */
    public boolean hasNominalPerShare() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'nominalPerShare' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder clearNominalPerShare() {
      nominalPerShare = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'paidPerShare' field */
    public java.lang.CharSequence getPaidPerShare() {
      return paidPerShare;
    }
    
    /** Sets the value of the 'paidPerShare' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder setPaidPerShare(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.paidPerShare = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'paidPerShare' field has been set */
    public boolean hasPaidPerShare() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'paidPerShare' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder clearPaidPerShare() {
      paidPerShare = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'percentTreated' field */
    public java.lang.CharSequence getPercentTreated() {
      return percentTreated;
    }
    
    /** Sets the value of the 'percentTreated' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder setPercentTreated(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.percentTreated = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'percentTreated' field has been set */
    public boolean hasPercentTreated() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'percentTreated' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder clearPercentTreated() {
      percentTreated = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'percentCash' field */
    public java.lang.CharSequence getPercentCash() {
      return percentCash;
    }
    
    /** Sets the value of the 'percentCash' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder setPercentCash(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.percentCash = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'percentCash' field has been set */
    public boolean hasPercentCash() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'percentCash' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder clearPercentCash() {
      percentCash = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'consideration' field */
    public java.lang.CharSequence getConsideration() {
      return consideration;
    }
    
    /** Sets the value of the 'consideration' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder setConsideration(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.consideration = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'consideration' field has been set */
    public boolean hasConsideration() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'consideration' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder clearConsideration() {
      consideration = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'dateProcessed' field */
    public java.lang.CharSequence getDateProcessed() {
      return dateProcessed;
    }
    
    /** Sets the value of the 'dateProcessed' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder setDateProcessed(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.dateProcessed = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'dateProcessed' field has been set */
    public boolean hasDateProcessed() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'dateProcessed' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder clearDateProcessed() {
      dateProcessed = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'deleteFlag' field */
    public java.lang.CharSequence getDeleteFlag() {
      return deleteFlag;
    }
    
    /** Sets the value of the 'deleteFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder setDeleteFlag(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.deleteFlag = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'deleteFlag' field has been set */
    public boolean hasDeleteFlag() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'deleteFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder clearDeleteFlag() {
      deleteFlag = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'freeLoadSN' field */
    public java.lang.CharSequence getFreeLoadSN() {
      return freeLoadSN;
    }
    
    /** Sets the value of the 'freeLoadSN' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder setFreeLoadSN(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.freeLoadSN = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'freeLoadSN' field has been set */
    public boolean hasFreeLoadSN() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'freeLoadSN' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder clearFreeLoadSN() {
      freeLoadSN = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'classOfShares' field */
    public java.lang.CharSequence getClassOfShares() {
      return classOfShares;
    }
    
    /** Sets the value of the 'classOfShares' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder setClassOfShares(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.classOfShares = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'classOfShares' field has been set */
    public boolean hasClassOfShares() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'classOfShares' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder clearClassOfShares() {
      classOfShares = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'sharesIssued' field */
    public java.lang.CharSequence getSharesIssued() {
      return sharesIssued;
    }
    
    /** Sets the value of the 'sharesIssued' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder setSharesIssued(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.sharesIssued = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'sharesIssued' field has been set */
    public boolean hasSharesIssued() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'sharesIssued' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder clearSharesIssued() {
      sharesIssued = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'aggregatedNominalValue' field */
    public java.lang.CharSequence getAggregatedNominalValue() {
      return aggregatedNominalValue;
    }
    
    /** Sets the value of the 'aggregatedNominalValue' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder setAggregatedNominalValue(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.aggregatedNominalValue = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'aggregatedNominalValue' field has been set */
    public boolean hasAggregatedNominalValue() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'aggregatedNominalValue' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder clearAggregatedNominalValue() {
      aggregatedNominalValue = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'shareValue' field */
    public java.lang.CharSequence getShareValue() {
      return shareValue;
    }
    
    /** Sets the value of the 'shareValue' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder setShareValue(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.shareValue = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'shareValue' field has been set */
    public boolean hasShareValue() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'shareValue' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder clearShareValue() {
      shareValue = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'badTotalFlag' field */
    public java.lang.CharSequence getBadTotalFlag() {
      return badTotalFlag;
    }
    
    /** Sets the value of the 'badTotalFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder setBadTotalFlag(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.badTotalFlag = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'badTotalFlag' field has been set */
    public boolean hasBadTotalFlag() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'badTotalFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder clearBadTotalFlag() {
      badTotalFlag = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'stdClassOfShares' field */
    public java.lang.CharSequence getStdClassOfShares() {
      return stdClassOfShares;
    }
    
    /** Sets the value of the 'stdClassOfShares' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder setStdClassOfShares(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.stdClassOfShares = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'stdClassOfShares' field has been set */
    public boolean hasStdClassOfShares() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'stdClassOfShares' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails.Builder clearStdClassOfShares() {
      stdClassOfShares = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    @Override
    public ShareClassDetails build() {
      try {
        ShareClassDetails record = new ShareClassDetails();
        record.currency = fieldSetFlags()[0] ? this.currency : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.shareType = fieldSetFlags()[1] ? this.shareType : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.numberAllotted = fieldSetFlags()[2] ? this.numberAllotted : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.nominalPerShare = fieldSetFlags()[3] ? this.nominalPerShare : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.paidPerShare = fieldSetFlags()[4] ? this.paidPerShare : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.percentTreated = fieldSetFlags()[5] ? this.percentTreated : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.percentCash = fieldSetFlags()[6] ? this.percentCash : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.consideration = fieldSetFlags()[7] ? this.consideration : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.dateProcessed = fieldSetFlags()[8] ? this.dateProcessed : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.deleteFlag = fieldSetFlags()[9] ? this.deleteFlag : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.freeLoadSN = fieldSetFlags()[10] ? this.freeLoadSN : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.classOfShares = fieldSetFlags()[11] ? this.classOfShares : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.sharesIssued = fieldSetFlags()[12] ? this.sharesIssued : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.aggregatedNominalValue = fieldSetFlags()[13] ? this.aggregatedNominalValue : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.shareValue = fieldSetFlags()[14] ? this.shareValue : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.badTotalFlag = fieldSetFlags()[15] ? this.badTotalFlag : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.stdClassOfShares = fieldSetFlags()[16] ? this.stdClassOfShares : (java.lang.CharSequence) defaultValue(fields()[16]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
