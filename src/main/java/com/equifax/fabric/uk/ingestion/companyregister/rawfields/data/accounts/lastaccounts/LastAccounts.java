/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.companyregister.rawfields.data.accounts.lastaccounts;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class LastAccounts extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LastAccounts\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyregister.rawfields.data.accounts.lastaccounts\",\"fields\":[{\"name\":\"made_up_to\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the last company accounts were made up to.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"doc\":\"Account Type\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The date the last company accounts were made up to. */
  @Deprecated public java.lang.CharSequence made_up_to;
  /** Account Type */
  @Deprecated public java.lang.CharSequence type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public LastAccounts() {}

  /**
   * All-args constructor.
   */
  public LastAccounts(java.lang.CharSequence made_up_to, java.lang.CharSequence type) {
    this.made_up_to = made_up_to;
    this.type = type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return made_up_to;
    case 1: return type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: made_up_to = (java.lang.CharSequence)value$; break;
    case 1: type = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'made_up_to' field.
   * The date the last company accounts were made up to.   */
  public java.lang.CharSequence getMadeUpTo() {
    return made_up_to;
  }

  /**
   * Sets the value of the 'made_up_to' field.
   * The date the last company accounts were made up to.   * @param value the value to set.
   */
  public void setMadeUpTo(java.lang.CharSequence value) {
    this.made_up_to = value;
  }

  /**
   * Gets the value of the 'type' field.
   * Account Type   */
  public java.lang.CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * Account Type   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /** Creates a new LastAccounts RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.companyregister.rawfields.data.accounts.lastaccounts.LastAccounts.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.companyregister.rawfields.data.accounts.lastaccounts.LastAccounts.Builder();
  }
  
  /** Creates a new LastAccounts RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.companyregister.rawfields.data.accounts.lastaccounts.LastAccounts.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyregister.rawfields.data.accounts.lastaccounts.LastAccounts.Builder other) {
    return new com.equifax.fabric.uk.ingestion.companyregister.rawfields.data.accounts.lastaccounts.LastAccounts.Builder(other);
  }
  
  /** Creates a new LastAccounts RecordBuilder by copying an existing LastAccounts instance */
  public static com.equifax.fabric.uk.ingestion.companyregister.rawfields.data.accounts.lastaccounts.LastAccounts.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyregister.rawfields.data.accounts.lastaccounts.LastAccounts other) {
    return new com.equifax.fabric.uk.ingestion.companyregister.rawfields.data.accounts.lastaccounts.LastAccounts.Builder(other);
  }
  
  /**
   * RecordBuilder for LastAccounts instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LastAccounts>
    implements org.apache.avro.data.RecordBuilder<LastAccounts> {

    private java.lang.CharSequence made_up_to;
    private java.lang.CharSequence type;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.companyregister.rawfields.data.accounts.lastaccounts.LastAccounts.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.companyregister.rawfields.data.accounts.lastaccounts.LastAccounts.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.made_up_to)) {
        this.made_up_to = data().deepCopy(fields()[0].schema(), other.made_up_to);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing LastAccounts instance */
    private Builder(com.equifax.fabric.uk.ingestion.companyregister.rawfields.data.accounts.lastaccounts.LastAccounts other) {
            super(com.equifax.fabric.uk.ingestion.companyregister.rawfields.data.accounts.lastaccounts.LastAccounts.SCHEMA$);
      if (isValidValue(fields()[0], other.made_up_to)) {
        this.made_up_to = data().deepCopy(fields()[0].schema(), other.made_up_to);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'made_up_to' field */
    public java.lang.CharSequence getMadeUpTo() {
      return made_up_to;
    }
    
    /** Sets the value of the 'made_up_to' field */
    public com.equifax.fabric.uk.ingestion.companyregister.rawfields.data.accounts.lastaccounts.LastAccounts.Builder setMadeUpTo(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.made_up_to = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'made_up_to' field has been set */
    public boolean hasMadeUpTo() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'made_up_to' field */
    public com.equifax.fabric.uk.ingestion.companyregister.rawfields.data.accounts.lastaccounts.LastAccounts.Builder clearMadeUpTo() {
      made_up_to = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public java.lang.CharSequence getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.equifax.fabric.uk.ingestion.companyregister.rawfields.data.accounts.lastaccounts.LastAccounts.Builder setType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.type = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'type' field */
    public com.equifax.fabric.uk.ingestion.companyregister.rawfields.data.accounts.lastaccounts.LastAccounts.Builder clearType() {
      type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public LastAccounts build() {
      try {
        LastAccounts record = new LastAccounts();
        record.made_up_to = fieldSetFlags()[0] ? this.made_up_to : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.type = fieldSetFlags()[1] ? this.type : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
