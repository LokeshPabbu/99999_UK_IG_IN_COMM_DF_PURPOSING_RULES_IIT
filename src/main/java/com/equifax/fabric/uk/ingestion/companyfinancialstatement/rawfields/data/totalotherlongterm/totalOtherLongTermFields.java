/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class totalOtherLongTermFields extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"totalOtherLongTermFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm\",\"fields\":[{\"name\":\"owedToGroupCompanies\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Other Long Term - Owed To Group Companies\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"longTermDirectorsLoan\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Other Long Term - Long Term Directors Loan\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"otherLongTermLiabilities\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Other Long Term - Other Long Term Liabilities\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Total Other Long Term - Owed To Group Companies */
  @Deprecated public java.lang.CharSequence owedToGroupCompanies;
  /** Total Other Long Term - Long Term Directors Loan */
  @Deprecated public java.lang.CharSequence longTermDirectorsLoan;
  /** Total Other Long Term - Other Long Term Liabilities */
  @Deprecated public java.lang.CharSequence otherLongTermLiabilities;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public totalOtherLongTermFields() {}

  /**
   * All-args constructor.
   */
  public totalOtherLongTermFields(java.lang.CharSequence owedToGroupCompanies, java.lang.CharSequence longTermDirectorsLoan, java.lang.CharSequence otherLongTermLiabilities) {
    this.owedToGroupCompanies = owedToGroupCompanies;
    this.longTermDirectorsLoan = longTermDirectorsLoan;
    this.otherLongTermLiabilities = otherLongTermLiabilities;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return owedToGroupCompanies;
    case 1: return longTermDirectorsLoan;
    case 2: return otherLongTermLiabilities;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: owedToGroupCompanies = (java.lang.CharSequence)value$; break;
    case 1: longTermDirectorsLoan = (java.lang.CharSequence)value$; break;
    case 2: otherLongTermLiabilities = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'owedToGroupCompanies' field.
   * Total Other Long Term - Owed To Group Companies   */
  public java.lang.CharSequence getOwedToGroupCompanies() {
    return owedToGroupCompanies;
  }

  /**
   * Sets the value of the 'owedToGroupCompanies' field.
   * Total Other Long Term - Owed To Group Companies   * @param value the value to set.
   */
  public void setOwedToGroupCompanies(java.lang.CharSequence value) {
    this.owedToGroupCompanies = value;
  }

  /**
   * Gets the value of the 'longTermDirectorsLoan' field.
   * Total Other Long Term - Long Term Directors Loan   */
  public java.lang.CharSequence getLongTermDirectorsLoan() {
    return longTermDirectorsLoan;
  }

  /**
   * Sets the value of the 'longTermDirectorsLoan' field.
   * Total Other Long Term - Long Term Directors Loan   * @param value the value to set.
   */
  public void setLongTermDirectorsLoan(java.lang.CharSequence value) {
    this.longTermDirectorsLoan = value;
  }

  /**
   * Gets the value of the 'otherLongTermLiabilities' field.
   * Total Other Long Term - Other Long Term Liabilities   */
  public java.lang.CharSequence getOtherLongTermLiabilities() {
    return otherLongTermLiabilities;
  }

  /**
   * Sets the value of the 'otherLongTermLiabilities' field.
   * Total Other Long Term - Other Long Term Liabilities   * @param value the value to set.
   */
  public void setOtherLongTermLiabilities(java.lang.CharSequence value) {
    this.otherLongTermLiabilities = value;
  }

  /** Creates a new totalOtherLongTermFields RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm.totalOtherLongTermFields.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm.totalOtherLongTermFields.Builder();
  }
  
  /** Creates a new totalOtherLongTermFields RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm.totalOtherLongTermFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm.totalOtherLongTermFields.Builder other) {
    return new com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm.totalOtherLongTermFields.Builder(other);
  }
  
  /** Creates a new totalOtherLongTermFields RecordBuilder by copying an existing totalOtherLongTermFields instance */
  public static com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm.totalOtherLongTermFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm.totalOtherLongTermFields other) {
    return new com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm.totalOtherLongTermFields.Builder(other);
  }
  
  /**
   * RecordBuilder for totalOtherLongTermFields instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<totalOtherLongTermFields>
    implements org.apache.avro.data.RecordBuilder<totalOtherLongTermFields> {

    private java.lang.CharSequence owedToGroupCompanies;
    private java.lang.CharSequence longTermDirectorsLoan;
    private java.lang.CharSequence otherLongTermLiabilities;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm.totalOtherLongTermFields.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm.totalOtherLongTermFields.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.owedToGroupCompanies)) {
        this.owedToGroupCompanies = data().deepCopy(fields()[0].schema(), other.owedToGroupCompanies);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.longTermDirectorsLoan)) {
        this.longTermDirectorsLoan = data().deepCopy(fields()[1].schema(), other.longTermDirectorsLoan);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.otherLongTermLiabilities)) {
        this.otherLongTermLiabilities = data().deepCopy(fields()[2].schema(), other.otherLongTermLiabilities);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing totalOtherLongTermFields instance */
    private Builder(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm.totalOtherLongTermFields other) {
            super(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm.totalOtherLongTermFields.SCHEMA$);
      if (isValidValue(fields()[0], other.owedToGroupCompanies)) {
        this.owedToGroupCompanies = data().deepCopy(fields()[0].schema(), other.owedToGroupCompanies);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.longTermDirectorsLoan)) {
        this.longTermDirectorsLoan = data().deepCopy(fields()[1].schema(), other.longTermDirectorsLoan);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.otherLongTermLiabilities)) {
        this.otherLongTermLiabilities = data().deepCopy(fields()[2].schema(), other.otherLongTermLiabilities);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'owedToGroupCompanies' field */
    public java.lang.CharSequence getOwedToGroupCompanies() {
      return owedToGroupCompanies;
    }
    
    /** Sets the value of the 'owedToGroupCompanies' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm.totalOtherLongTermFields.Builder setOwedToGroupCompanies(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.owedToGroupCompanies = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'owedToGroupCompanies' field has been set */
    public boolean hasOwedToGroupCompanies() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'owedToGroupCompanies' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm.totalOtherLongTermFields.Builder clearOwedToGroupCompanies() {
      owedToGroupCompanies = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'longTermDirectorsLoan' field */
    public java.lang.CharSequence getLongTermDirectorsLoan() {
      return longTermDirectorsLoan;
    }
    
    /** Sets the value of the 'longTermDirectorsLoan' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm.totalOtherLongTermFields.Builder setLongTermDirectorsLoan(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.longTermDirectorsLoan = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'longTermDirectorsLoan' field has been set */
    public boolean hasLongTermDirectorsLoan() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'longTermDirectorsLoan' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm.totalOtherLongTermFields.Builder clearLongTermDirectorsLoan() {
      longTermDirectorsLoan = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'otherLongTermLiabilities' field */
    public java.lang.CharSequence getOtherLongTermLiabilities() {
      return otherLongTermLiabilities;
    }
    
    /** Sets the value of the 'otherLongTermLiabilities' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm.totalOtherLongTermFields.Builder setOtherLongTermLiabilities(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.otherLongTermLiabilities = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'otherLongTermLiabilities' field has been set */
    public boolean hasOtherLongTermLiabilities() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'otherLongTermLiabilities' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm.totalOtherLongTermFields.Builder clearOtherLongTermLiabilities() {
      otherLongTermLiabilities = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public totalOtherLongTermFields build() {
      try {
        totalOtherLongTermFields record = new totalOtherLongTermFields();
        record.owedToGroupCompanies = fieldSetFlags()[0] ? this.owedToGroupCompanies : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.longTermDirectorsLoan = fieldSetFlags()[1] ? this.longTermDirectorsLoan : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.otherLongTermLiabilities = fieldSetFlags()[2] ? this.otherLongTermLiabilities : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
