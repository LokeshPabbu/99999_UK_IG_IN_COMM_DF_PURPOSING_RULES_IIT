/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class StandardisedFields extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StandardisedFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields\",\"fields\":[{\"name\":\"companyRegisteredNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Company Number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"formatOfSupply\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates format of supplied file\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"migrationFlag\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"turnoverScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Turnover value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"grossProfitScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Gross Profit value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"exceptionalIncomeScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Exceptional Income value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"exceptionalChargesScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Exceptional Charges value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"preTaxProfitScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Pre Tax Profit value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"postTaxProfitScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Post Tax Profit value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dividendsScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Dividends value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"tangibleFixedAssetsScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Tangible Fixed Assets value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"intangibleFixedAssetsScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Intangible Fixed Assets value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"fixedAssetInvestmentScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Fixed Asset Investment value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"totalStockScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Stock value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"totalCashScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Cash value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"totalCurrentAssetsScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Current Assets value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"currentLiabilitiesScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Current Liabilities value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"workingCapitalScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Working Capital value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"calledUpShareCapitalScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Called Up Share Capital value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"profitAndLossAccountScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Profit And Loss Account value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"sharePremiumAccountScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Share Premium Account value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"revaluationReserveScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Revaluation Reserve value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"capitalReserveScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Capital Reserve value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"capitalRedemptionReserveScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Capital Redemption Reserve value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"otherReservesScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Other Reserves value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"goodwillReservesScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Goodwill Reserves value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"netWorthScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Net Worth value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"netCashInflowScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Net Cash Inflow value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"increaseInCashScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Increase In Cash value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"exportSalesScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Export Sales value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"totalStaffCostsScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Staff Costs value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"directorsEmolumentScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Directors Emolument value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"externalInterestReceivableScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"External Interest Receivable value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"externalInterestPayableScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"External Interest Payable value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"tradeDebtorsScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Trade Debtors value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dueFromGroupCompaniesScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Due From Group Companies value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"tradeCreditorsScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Trade Creditors value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dueToGroupCompaniesScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Due to Group Companies value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"directorsLoanScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Directors Loan value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"bankOverdraftsScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Bank Overdrafts value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"bankLoanShortTermScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Bank Loan short term value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"bankLoansOverdraftsScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Bank Loans Overdrafts value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"f","inanceAndHirePurchaseScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Finance And Hire Purchase value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"hirePurchaseScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Hire Purchase value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"financeLeaseScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Finance Lease value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"otherShortTermBorrowingsScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Other ShortTerm Borrowing value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"bankLoansScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Bank Loans value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"financeLeaseAndHirePurchaseScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Finance Lease and Hire Purchase value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"hirePurchaseLoanScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Hire Purchase Loan value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"financeLeaseObligationScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Finance Lease Obligation value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"otherLongTermBorrowingScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Other Long Term Borrowing value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"owedToGroupCompaniesScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Owed To Group Companies value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"longTermDirectorsLoanScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Long Term Directors Loan value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"otherLongTermLiabilitiesScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Other Long Term Liabilities value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"shortTermUnspecifiedSecuredScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Short Term Unspecified Secured value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"longTermUnspecifiedSecuredScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Long Term Unspecified Secured value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"unknownPeriodSecuredScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Unknown Period Secured value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"unspecifiedBankLoansScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Unspecified Bank Loans value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"depreciationScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Depreciation value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"operatingProfitScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Operating Profit value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"netCashFlowFromRoiAndServicingOfFinanceScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Net Cashflow From RoI and Servicing of Finance value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"netCashFlowBeforeFinancingScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Net Cashflow Before Financing value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"netCashFlowFromFinancingScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Net Cashflow From Financing value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"contingentLiabilityScaled\",\"type\":[\"null\",\"string\"],\"doc\":\"Contingent Liability value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"processingDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date on which data loaded on Data Fabric\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"currency\",\"type\":[\"null\",\"string\"],\"doc\":\"Currency\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"UHCAlphaName\",\"type\":[\"null\",\"string\"],\"doc\":\"Ultimate holding company alpha key\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"entity\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"entityFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.entity\",\"fields\":[{\"name\":\"commercial\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"commercialFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.entity.commercial\",\"fields\":[{\"name\":\"legacyIds\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"legacyIdFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.entity.commercial.legacyids\",\"fields\":[{\"name\":\"LEGACY_ID_COMPANY_REGISTERED_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Company Number\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"identifiers\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"identifierFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.entity.commercial.identifiers\",\"fields\":[{\"name\":\"NAME_BUSINESS_COMPANY_TYPE\",\"type\":[\"null\",\"string\"],\"doc\":\"Type of company - L for Limited\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_BUSINESS_VAT\",\"type\":[\"null\",\"string\"],\"doc\":\"VAT number field\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_BUSINESS_EMAIL\",\"type\":[\"null\",\"string\"],\"doc\":\"EMAIL ID field\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_DISSOLVED_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Dissolution Date field\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_INCORPORATION_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Date of incorporation in CCYYMMDD format\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_UPDATE_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"This is load date and will be a system date \",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_DATA_SOURCE\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates source of data\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"website\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Supplied Websites\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"phones\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Supplied Phone number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"names\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Standardised Company Names as per Keying & Linking inputs\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"addresses\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Standardised postcode as per Keying & Linking inputs\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"discoveryData\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"discoveryDataFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.entity.commercial.discoverydata\",\"fields\":[{\"name\":\"DISCOVERY_CLIENT_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Client Number for INSIGHT_ACCOUNT and CCDS_ACCOUNT asset\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_FACILITY_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Facility Number for CCDS_ACCOUNT\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_DEFENDENT_ID\",\"type\":[\"null\",\"string\"],\"doc\":\"Defendent ID for COURT_JUDGMENT\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_DRC_ID\",\"type\":[\"null\",\"string\"],\"doc\":\"DRC_ID for NONLIMITE","D_REGISTER\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_URN\",\"type\":[\"null\",\"string\"],\"doc\":\"Unique reference number of COMPANY_CIFAS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_CASE_ID\",\"type\":[\"null\",\"string\"],\"doc\":\"Case ID of COMPANY_CIFAS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_CLN_BUSINESS_NAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Cleansed business name\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_ACCOUNT_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Account Number for INSIGHT_ACCOUNT\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null}]}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Company Number */
  @Deprecated public java.lang.CharSequence companyRegisteredNumber;
  /** Indicates format of supplied file */
  @Deprecated public java.lang.CharSequence formatOfSupply;
  /** Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live */
  @Deprecated public java.lang.CharSequence migrationFlag;
  /** Turnover value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence turnoverScaled;
  /** Gross Profit value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence grossProfitScaled;
  /** Exceptional Income value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence exceptionalIncomeScaled;
  /** Exceptional Charges value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence exceptionalChargesScaled;
  /** Pre Tax Profit value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence preTaxProfitScaled;
  /** Post Tax Profit value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence postTaxProfitScaled;
  /** Dividends value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence dividendsScaled;
  /** Tangible Fixed Assets value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence tangibleFixedAssetsScaled;
  /** Intangible Fixed Assets value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence intangibleFixedAssetsScaled;
  /** Fixed Asset Investment value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence fixedAssetInvestmentScaled;
  /** Total Stock value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence totalStockScaled;
  /** Total Cash value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence totalCashScaled;
  /** Total Current Assets value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence totalCurrentAssetsScaled;
  /** Current Liabilities value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence currentLiabilitiesScaled;
  /** Working Capital value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence workingCapitalScaled;
  /** Called Up Share Capital value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence calledUpShareCapitalScaled;
  /** Profit And Loss Account value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence profitAndLossAccountScaled;
  /** Share Premium Account value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence sharePremiumAccountScaled;
  /** Revaluation Reserve value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence revaluationReserveScaled;
  /** Capital Reserve value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence capitalReserveScaled;
  /** Capital Redemption Reserve value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence capitalRedemptionReserveScaled;
  /** Other Reserves value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence otherReservesScaled;
  /** Goodwill Reserves value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence goodwillReservesScaled;
  /** Net Worth value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence netWorthScaled;
  /** Net Cash Inflow value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence netCashInflowScaled;
  /** Increase In Cash value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence increaseInCashScaled;
  /** Export Sales value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence exportSalesScaled;
  /** Total Staff Costs value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence totalStaffCostsScaled;
  /** Directors Emolument value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence directorsEmolumentScaled;
  /** External Interest Receivable value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence externalInterestReceivableScaled;
  /** External Interest Payable value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence externalInterestPayableScaled;
  /** Trade Debtors value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence tradeDebtorsScaled;
  /** Due From Group Companies value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence dueFromGroupCompaniesScaled;
  /** Trade Creditors value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence tradeCreditorsScaled;
  /** Due to Group Companies value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence dueToGroupCompaniesScaled;
  /** Directors Loan value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence directorsLoanScaled;
  /** Bank Overdrafts value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence bankOverdraftsScaled;
  /** Bank Loan short term value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence bankLoanShortTermScaled;
  /** Bank Loans Overdrafts value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence bankLoansOverdraftsScaled;
  /** Finance And Hire Purchase value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence financeAndHirePurchaseScaled;
  /** Hire Purchase value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence hirePurchaseScaled;
  /** Finance Lease value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence financeLeaseScaled;
  /** Other ShortTerm Borrowing value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence otherShortTermBorrowingsScaled;
  /** Bank Loans value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence bankLoansScaled;
  /** Finance Lease and Hire Purchase value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence financeLeaseAndHirePurchaseScaled;
  /** Hire Purchase Loan value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence hirePurchaseLoanScaled;
  /** Finance Lease Obligation value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence financeLeaseObligationScaled;
  /** Other Long Term Borrowing value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence otherLongTermBorrowingScaled;
  /** Owed To Group Companies value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence owedToGroupCompaniesScaled;
  /** Long Term Directors Loan value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence longTermDirectorsLoanScaled;
  /** Other Long Term Liabilities value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence otherLongTermLiabilitiesScaled;
  /** Short Term Unspecified Secured value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence shortTermUnspecifiedSecuredScaled;
  /** Long Term Unspecified Secured value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence longTermUnspecifiedSecuredScaled;
  /** Unknown Period Secured value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence unknownPeriodSecuredScaled;
  /** Unspecified Bank Loans value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence unspecifiedBankLoansScaled;
  /** Depreciation value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence depreciationScaled;
  /** Operating Profit value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence operatingProfitScaled;
  /** Net Cashflow From RoI and Servicing of Finance value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence netCashFlowFromRoiAndServicingOfFinanceScaled;
  /** Net Cashflow Before Financing value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence netCashFlowBeforeFinancingScaled;
  /** Net Cashflow From Financing value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence netCashFlowFromFinancingScaled;
  /** Contingent Liability value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS */
  @Deprecated public java.lang.CharSequence contingentLiabilityScaled;
  /** Date on which data loaded on Data Fabric */
  @Deprecated public java.lang.CharSequence processingDate;
  /** Currency */
  @Deprecated public java.lang.CharSequence currency;
  /** Ultimate holding company alpha key */
  @Deprecated public java.lang.CharSequence UHCAlphaName;
  @Deprecated public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.entity.entityFields entity;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public StandardisedFields() {}

  /**
   * All-args constructor.
   */
  public StandardisedFields(java.lang.CharSequence companyRegisteredNumber, java.lang.CharSequence formatOfSupply, java.lang.CharSequence migrationFlag, java.lang.CharSequence turnoverScaled, java.lang.CharSequence grossProfitScaled, java.lang.CharSequence exceptionalIncomeScaled, java.lang.CharSequence exceptionalChargesScaled, java.lang.CharSequence preTaxProfitScaled, java.lang.CharSequence postTaxProfitScaled, java.lang.CharSequence dividendsScaled, java.lang.CharSequence tangibleFixedAssetsScaled, java.lang.CharSequence intangibleFixedAssetsScaled, java.lang.CharSequence fixedAssetInvestmentScaled, java.lang.CharSequence totalStockScaled, java.lang.CharSequence totalCashScaled, java.lang.CharSequence totalCurrentAssetsScaled, java.lang.CharSequence currentLiabilitiesScaled, java.lang.CharSequence workingCapitalScaled, java.lang.CharSequence calledUpShareCapitalScaled, java.lang.CharSequence profitAndLossAccountScaled, java.lang.CharSequence sharePremiumAccountScaled, java.lang.CharSequence revaluationReserveScaled, java.lang.CharSequence capitalReserveScaled, java.lang.CharSequence capitalRedemptionReserveScaled, java.lang.CharSequence otherReservesScaled, java.lang.CharSequence goodwillReservesScaled, java.lang.CharSequence netWorthScaled, java.lang.CharSequence netCashInflowScaled, java.lang.CharSequence increaseInCashScaled, java.lang.CharSequence exportSalesScaled, java.lang.CharSequence totalStaffCostsScaled, java.lang.CharSequence directorsEmolumentScaled, java.lang.CharSequence externalInterestReceivableScaled, java.lang.CharSequence externalInterestPayableScaled, java.lang.CharSequence tradeDebtorsScaled, java.lang.CharSequence dueFromGroupCompaniesScaled, java.lang.CharSequence tradeCreditorsScaled, java.lang.CharSequence dueToGroupCompaniesScaled, java.lang.CharSequence directorsLoanScaled, java.lang.CharSequence bankOverdraftsScaled, java.lang.CharSequence bankLoanShortTermScaled, java.lang.CharSequence bankLoansOverdraftsScaled, java.lang.CharSequence financeAndHirePurchaseScaled, java.lang.CharSequence hirePurchaseScaled, java.lang.CharSequence financeLeaseScaled, java.lang.CharSequence otherShortTermBorrowingsScaled, java.lang.CharSequence bankLoansScaled, java.lang.CharSequence financeLeaseAndHirePurchaseScaled, java.lang.CharSequence hirePurchaseLoanScaled, java.lang.CharSequence financeLeaseObligationScaled, java.lang.CharSequence otherLongTermBorrowingScaled, java.lang.CharSequence owedToGroupCompaniesScaled, java.lang.CharSequence longTermDirectorsLoanScaled, java.lang.CharSequence otherLongTermLiabilitiesScaled, java.lang.CharSequence shortTermUnspecifiedSecuredScaled, java.lang.CharSequence longTermUnspecifiedSecuredScaled, java.lang.CharSequence unknownPeriodSecuredScaled, java.lang.CharSequence unspecifiedBankLoansScaled, java.lang.CharSequence depreciationScaled, java.lang.CharSequence operatingProfitScaled, java.lang.CharSequence netCashFlowFromRoiAndServicingOfFinanceScaled, java.lang.CharSequence netCashFlowBeforeFinancingScaled, java.lang.CharSequence netCashFlowFromFinancingScaled, java.lang.CharSequence contingentLiabilityScaled, java.lang.CharSequence processingDate, java.lang.CharSequence currency, java.lang.CharSequence UHCAlphaName, com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.entity.entityFields entity) {
    this.companyRegisteredNumber = companyRegisteredNumber;
    this.formatOfSupply = formatOfSupply;
    this.migrationFlag = migrationFlag;
    this.turnoverScaled = turnoverScaled;
    this.grossProfitScaled = grossProfitScaled;
    this.exceptionalIncomeScaled = exceptionalIncomeScaled;
    this.exceptionalChargesScaled = exceptionalChargesScaled;
    this.preTaxProfitScaled = preTaxProfitScaled;
    this.postTaxProfitScaled = postTaxProfitScaled;
    this.dividendsScaled = dividendsScaled;
    this.tangibleFixedAssetsScaled = tangibleFixedAssetsScaled;
    this.intangibleFixedAssetsScaled = intangibleFixedAssetsScaled;
    this.fixedAssetInvestmentScaled = fixedAssetInvestmentScaled;
    this.totalStockScaled = totalStockScaled;
    this.totalCashScaled = totalCashScaled;
    this.totalCurrentAssetsScaled = totalCurrentAssetsScaled;
    this.currentLiabilitiesScaled = currentLiabilitiesScaled;
    this.workingCapitalScaled = workingCapitalScaled;
    this.calledUpShareCapitalScaled = calledUpShareCapitalScaled;
    this.profitAndLossAccountScaled = profitAndLossAccountScaled;
    this.sharePremiumAccountScaled = sharePremiumAccountScaled;
    this.revaluationReserveScaled = revaluationReserveScaled;
    this.capitalReserveScaled = capitalReserveScaled;
    this.capitalRedemptionReserveScaled = capitalRedemptionReserveScaled;
    this.otherReservesScaled = otherReservesScaled;
    this.goodwillReservesScaled = goodwillReservesScaled;
    this.netWorthScaled = netWorthScaled;
    this.netCashInflowScaled = netCashInflowScaled;
    this.increaseInCashScaled = increaseInCashScaled;
    this.exportSalesScaled = exportSalesScaled;
    this.totalStaffCostsScaled = totalStaffCostsScaled;
    this.directorsEmolumentScaled = directorsEmolumentScaled;
    this.externalInterestReceivableScaled = externalInterestReceivableScaled;
    this.externalInterestPayableScaled = externalInterestPayableScaled;
    this.tradeDebtorsScaled = tradeDebtorsScaled;
    this.dueFromGroupCompaniesScaled = dueFromGroupCompaniesScaled;
    this.tradeCreditorsScaled = tradeCreditorsScaled;
    this.dueToGroupCompaniesScaled = dueToGroupCompaniesScaled;
    this.directorsLoanScaled = directorsLoanScaled;
    this.bankOverdraftsScaled = bankOverdraftsScaled;
    this.bankLoanShortTermScaled = bankLoanShortTermScaled;
    this.bankLoansOverdraftsScaled = bankLoansOverdraftsScaled;
    this.financeAndHirePurchaseScaled = financeAndHirePurchaseScaled;
    this.hirePurchaseScaled = hirePurchaseScaled;
    this.financeLeaseScaled = financeLeaseScaled;
    this.otherShortTermBorrowingsScaled = otherShortTermBorrowingsScaled;
    this.bankLoansScaled = bankLoansScaled;
    this.financeLeaseAndHirePurchaseScaled = financeLeaseAndHirePurchaseScaled;
    this.hirePurchaseLoanScaled = hirePurchaseLoanScaled;
    this.financeLeaseObligationScaled = financeLeaseObligationScaled;
    this.otherLongTermBorrowingScaled = otherLongTermBorrowingScaled;
    this.owedToGroupCompaniesScaled = owedToGroupCompaniesScaled;
    this.longTermDirectorsLoanScaled = longTermDirectorsLoanScaled;
    this.otherLongTermLiabilitiesScaled = otherLongTermLiabilitiesScaled;
    this.shortTermUnspecifiedSecuredScaled = shortTermUnspecifiedSecuredScaled;
    this.longTermUnspecifiedSecuredScaled = longTermUnspecifiedSecuredScaled;
    this.unknownPeriodSecuredScaled = unknownPeriodSecuredScaled;
    this.unspecifiedBankLoansScaled = unspecifiedBankLoansScaled;
    this.depreciationScaled = depreciationScaled;
    this.operatingProfitScaled = operatingProfitScaled;
    this.netCashFlowFromRoiAndServicingOfFinanceScaled = netCashFlowFromRoiAndServicingOfFinanceScaled;
    this.netCashFlowBeforeFinancingScaled = netCashFlowBeforeFinancingScaled;
    this.netCashFlowFromFinancingScaled = netCashFlowFromFinancingScaled;
    this.contingentLiabilityScaled = contingentLiabilityScaled;
    this.processingDate = processingDate;
    this.currency = currency;
    this.UHCAlphaName = UHCAlphaName;
    this.entity = entity;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return companyRegisteredNumber;
    case 1: return formatOfSupply;
    case 2: return migrationFlag;
    case 3: return turnoverScaled;
    case 4: return grossProfitScaled;
    case 5: return exceptionalIncomeScaled;
    case 6: return exceptionalChargesScaled;
    case 7: return preTaxProfitScaled;
    case 8: return postTaxProfitScaled;
    case 9: return dividendsScaled;
    case 10: return tangibleFixedAssetsScaled;
    case 11: return intangibleFixedAssetsScaled;
    case 12: return fixedAssetInvestmentScaled;
    case 13: return totalStockScaled;
    case 14: return totalCashScaled;
    case 15: return totalCurrentAssetsScaled;
    case 16: return currentLiabilitiesScaled;
    case 17: return workingCapitalScaled;
    case 18: return calledUpShareCapitalScaled;
    case 19: return profitAndLossAccountScaled;
    case 20: return sharePremiumAccountScaled;
    case 21: return revaluationReserveScaled;
    case 22: return capitalReserveScaled;
    case 23: return capitalRedemptionReserveScaled;
    case 24: return otherReservesScaled;
    case 25: return goodwillReservesScaled;
    case 26: return netWorthScaled;
    case 27: return netCashInflowScaled;
    case 28: return increaseInCashScaled;
    case 29: return exportSalesScaled;
    case 30: return totalStaffCostsScaled;
    case 31: return directorsEmolumentScaled;
    case 32: return externalInterestReceivableScaled;
    case 33: return externalInterestPayableScaled;
    case 34: return tradeDebtorsScaled;
    case 35: return dueFromGroupCompaniesScaled;
    case 36: return tradeCreditorsScaled;
    case 37: return dueToGroupCompaniesScaled;
    case 38: return directorsLoanScaled;
    case 39: return bankOverdraftsScaled;
    case 40: return bankLoanShortTermScaled;
    case 41: return bankLoansOverdraftsScaled;
    case 42: return financeAndHirePurchaseScaled;
    case 43: return hirePurchaseScaled;
    case 44: return financeLeaseScaled;
    case 45: return otherShortTermBorrowingsScaled;
    case 46: return bankLoansScaled;
    case 47: return financeLeaseAndHirePurchaseScaled;
    case 48: return hirePurchaseLoanScaled;
    case 49: return financeLeaseObligationScaled;
    case 50: return otherLongTermBorrowingScaled;
    case 51: return owedToGroupCompaniesScaled;
    case 52: return longTermDirectorsLoanScaled;
    case 53: return otherLongTermLiabilitiesScaled;
    case 54: return shortTermUnspecifiedSecuredScaled;
    case 55: return longTermUnspecifiedSecuredScaled;
    case 56: return unknownPeriodSecuredScaled;
    case 57: return unspecifiedBankLoansScaled;
    case 58: return depreciationScaled;
    case 59: return operatingProfitScaled;
    case 60: return netCashFlowFromRoiAndServicingOfFinanceScaled;
    case 61: return netCashFlowBeforeFinancingScaled;
    case 62: return netCashFlowFromFinancingScaled;
    case 63: return contingentLiabilityScaled;
    case 64: return processingDate;
    case 65: return currency;
    case 66: return UHCAlphaName;
    case 67: return entity;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: companyRegisteredNumber = (java.lang.CharSequence)value$; break;
    case 1: formatOfSupply = (java.lang.CharSequence)value$; break;
    case 2: migrationFlag = (java.lang.CharSequence)value$; break;
    case 3: turnoverScaled = (java.lang.CharSequence)value$; break;
    case 4: grossProfitScaled = (java.lang.CharSequence)value$; break;
    case 5: exceptionalIncomeScaled = (java.lang.CharSequence)value$; break;
    case 6: exceptionalChargesScaled = (java.lang.CharSequence)value$; break;
    case 7: preTaxProfitScaled = (java.lang.CharSequence)value$; break;
    case 8: postTaxProfitScaled = (java.lang.CharSequence)value$; break;
    case 9: dividendsScaled = (java.lang.CharSequence)value$; break;
    case 10: tangibleFixedAssetsScaled = (java.lang.CharSequence)value$; break;
    case 11: intangibleFixedAssetsScaled = (java.lang.CharSequence)value$; break;
    case 12: fixedAssetInvestmentScaled = (java.lang.CharSequence)value$; break;
    case 13: totalStockScaled = (java.lang.CharSequence)value$; break;
    case 14: totalCashScaled = (java.lang.CharSequence)value$; break;
    case 15: totalCurrentAssetsScaled = (java.lang.CharSequence)value$; break;
    case 16: currentLiabilitiesScaled = (java.lang.CharSequence)value$; break;
    case 17: workingCapitalScaled = (java.lang.CharSequence)value$; break;
    case 18: calledUpShareCapitalScaled = (java.lang.CharSequence)value$; break;
    case 19: profitAndLossAccountScaled = (java.lang.CharSequence)value$; break;
    case 20: sharePremiumAccountScaled = (java.lang.CharSequence)value$; break;
    case 21: revaluationReserveScaled = (java.lang.CharSequence)value$; break;
    case 22: capitalReserveScaled = (java.lang.CharSequence)value$; break;
    case 23: capitalRedemptionReserveScaled = (java.lang.CharSequence)value$; break;
    case 24: otherReservesScaled = (java.lang.CharSequence)value$; break;
    case 25: goodwillReservesScaled = (java.lang.CharSequence)value$; break;
    case 26: netWorthScaled = (java.lang.CharSequence)value$; break;
    case 27: netCashInflowScaled = (java.lang.CharSequence)value$; break;
    case 28: increaseInCashScaled = (java.lang.CharSequence)value$; break;
    case 29: exportSalesScaled = (java.lang.CharSequence)value$; break;
    case 30: totalStaffCostsScaled = (java.lang.CharSequence)value$; break;
    case 31: directorsEmolumentScaled = (java.lang.CharSequence)value$; break;
    case 32: externalInterestReceivableScaled = (java.lang.CharSequence)value$; break;
    case 33: externalInterestPayableScaled = (java.lang.CharSequence)value$; break;
    case 34: tradeDebtorsScaled = (java.lang.CharSequence)value$; break;
    case 35: dueFromGroupCompaniesScaled = (java.lang.CharSequence)value$; break;
    case 36: tradeCreditorsScaled = (java.lang.CharSequence)value$; break;
    case 37: dueToGroupCompaniesScaled = (java.lang.CharSequence)value$; break;
    case 38: directorsLoanScaled = (java.lang.CharSequence)value$; break;
    case 39: bankOverdraftsScaled = (java.lang.CharSequence)value$; break;
    case 40: bankLoanShortTermScaled = (java.lang.CharSequence)value$; break;
    case 41: bankLoansOverdraftsScaled = (java.lang.CharSequence)value$; break;
    case 42: financeAndHirePurchaseScaled = (java.lang.CharSequence)value$; break;
    case 43: hirePurchaseScaled = (java.lang.CharSequence)value$; break;
    case 44: financeLeaseScaled = (java.lang.CharSequence)value$; break;
    case 45: otherShortTermBorrowingsScaled = (java.lang.CharSequence)value$; break;
    case 46: bankLoansScaled = (java.lang.CharSequence)value$; break;
    case 47: financeLeaseAndHirePurchaseScaled = (java.lang.CharSequence)value$; break;
    case 48: hirePurchaseLoanScaled = (java.lang.CharSequence)value$; break;
    case 49: financeLeaseObligationScaled = (java.lang.CharSequence)value$; break;
    case 50: otherLongTermBorrowingScaled = (java.lang.CharSequence)value$; break;
    case 51: owedToGroupCompaniesScaled = (java.lang.CharSequence)value$; break;
    case 52: longTermDirectorsLoanScaled = (java.lang.CharSequence)value$; break;
    case 53: otherLongTermLiabilitiesScaled = (java.lang.CharSequence)value$; break;
    case 54: shortTermUnspecifiedSecuredScaled = (java.lang.CharSequence)value$; break;
    case 55: longTermUnspecifiedSecuredScaled = (java.lang.CharSequence)value$; break;
    case 56: unknownPeriodSecuredScaled = (java.lang.CharSequence)value$; break;
    case 57: unspecifiedBankLoansScaled = (java.lang.CharSequence)value$; break;
    case 58: depreciationScaled = (java.lang.CharSequence)value$; break;
    case 59: operatingProfitScaled = (java.lang.CharSequence)value$; break;
    case 60: netCashFlowFromRoiAndServicingOfFinanceScaled = (java.lang.CharSequence)value$; break;
    case 61: netCashFlowBeforeFinancingScaled = (java.lang.CharSequence)value$; break;
    case 62: netCashFlowFromFinancingScaled = (java.lang.CharSequence)value$; break;
    case 63: contingentLiabilityScaled = (java.lang.CharSequence)value$; break;
    case 64: processingDate = (java.lang.CharSequence)value$; break;
    case 65: currency = (java.lang.CharSequence)value$; break;
    case 66: UHCAlphaName = (java.lang.CharSequence)value$; break;
    case 67: entity = (com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.entity.entityFields)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'companyRegisteredNumber' field.
   * Company Number   */
  public java.lang.CharSequence getCompanyRegisteredNumber() {
    return companyRegisteredNumber;
  }

  /**
   * Sets the value of the 'companyRegisteredNumber' field.
   * Company Number   * @param value the value to set.
   */
  public void setCompanyRegisteredNumber(java.lang.CharSequence value) {
    this.companyRegisteredNumber = value;
  }

  /**
   * Gets the value of the 'formatOfSupply' field.
   * Indicates format of supplied file   */
  public java.lang.CharSequence getFormatOfSupply() {
    return formatOfSupply;
  }

  /**
   * Sets the value of the 'formatOfSupply' field.
   * Indicates format of supplied file   * @param value the value to set.
   */
  public void setFormatOfSupply(java.lang.CharSequence value) {
    this.formatOfSupply = value;
  }

  /**
   * Gets the value of the 'migrationFlag' field.
   * Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live   */
  public java.lang.CharSequence getMigrationFlag() {
    return migrationFlag;
  }

  /**
   * Sets the value of the 'migrationFlag' field.
   * Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live   * @param value the value to set.
   */
  public void setMigrationFlag(java.lang.CharSequence value) {
    this.migrationFlag = value;
  }

  /**
   * Gets the value of the 'turnoverScaled' field.
   * Turnover value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getTurnoverScaled() {
    return turnoverScaled;
  }

  /**
   * Sets the value of the 'turnoverScaled' field.
   * Turnover value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setTurnoverScaled(java.lang.CharSequence value) {
    this.turnoverScaled = value;
  }

  /**
   * Gets the value of the 'grossProfitScaled' field.
   * Gross Profit value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getGrossProfitScaled() {
    return grossProfitScaled;
  }

  /**
   * Sets the value of the 'grossProfitScaled' field.
   * Gross Profit value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setGrossProfitScaled(java.lang.CharSequence value) {
    this.grossProfitScaled = value;
  }

  /**
   * Gets the value of the 'exceptionalIncomeScaled' field.
   * Exceptional Income value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getExceptionalIncomeScaled() {
    return exceptionalIncomeScaled;
  }

  /**
   * Sets the value of the 'exceptionalIncomeScaled' field.
   * Exceptional Income value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setExceptionalIncomeScaled(java.lang.CharSequence value) {
    this.exceptionalIncomeScaled = value;
  }

  /**
   * Gets the value of the 'exceptionalChargesScaled' field.
   * Exceptional Charges value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getExceptionalChargesScaled() {
    return exceptionalChargesScaled;
  }

  /**
   * Sets the value of the 'exceptionalChargesScaled' field.
   * Exceptional Charges value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setExceptionalChargesScaled(java.lang.CharSequence value) {
    this.exceptionalChargesScaled = value;
  }

  /**
   * Gets the value of the 'preTaxProfitScaled' field.
   * Pre Tax Profit value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getPreTaxProfitScaled() {
    return preTaxProfitScaled;
  }

  /**
   * Sets the value of the 'preTaxProfitScaled' field.
   * Pre Tax Profit value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setPreTaxProfitScaled(java.lang.CharSequence value) {
    this.preTaxProfitScaled = value;
  }

  /**
   * Gets the value of the 'postTaxProfitScaled' field.
   * Post Tax Profit value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getPostTaxProfitScaled() {
    return postTaxProfitScaled;
  }

  /**
   * Sets the value of the 'postTaxProfitScaled' field.
   * Post Tax Profit value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setPostTaxProfitScaled(java.lang.CharSequence value) {
    this.postTaxProfitScaled = value;
  }

  /**
   * Gets the value of the 'dividendsScaled' field.
   * Dividends value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getDividendsScaled() {
    return dividendsScaled;
  }

  /**
   * Sets the value of the 'dividendsScaled' field.
   * Dividends value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setDividendsScaled(java.lang.CharSequence value) {
    this.dividendsScaled = value;
  }

  /**
   * Gets the value of the 'tangibleFixedAssetsScaled' field.
   * Tangible Fixed Assets value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getTangibleFixedAssetsScaled() {
    return tangibleFixedAssetsScaled;
  }

  /**
   * Sets the value of the 'tangibleFixedAssetsScaled' field.
   * Tangible Fixed Assets value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setTangibleFixedAssetsScaled(java.lang.CharSequence value) {
    this.tangibleFixedAssetsScaled = value;
  }

  /**
   * Gets the value of the 'intangibleFixedAssetsScaled' field.
   * Intangible Fixed Assets value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getIntangibleFixedAssetsScaled() {
    return intangibleFixedAssetsScaled;
  }

  /**
   * Sets the value of the 'intangibleFixedAssetsScaled' field.
   * Intangible Fixed Assets value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setIntangibleFixedAssetsScaled(java.lang.CharSequence value) {
    this.intangibleFixedAssetsScaled = value;
  }

  /**
   * Gets the value of the 'fixedAssetInvestmentScaled' field.
   * Fixed Asset Investment value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getFixedAssetInvestmentScaled() {
    return fixedAssetInvestmentScaled;
  }

  /**
   * Sets the value of the 'fixedAssetInvestmentScaled' field.
   * Fixed Asset Investment value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setFixedAssetInvestmentScaled(java.lang.CharSequence value) {
    this.fixedAssetInvestmentScaled = value;
  }

  /**
   * Gets the value of the 'totalStockScaled' field.
   * Total Stock value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getTotalStockScaled() {
    return totalStockScaled;
  }

  /**
   * Sets the value of the 'totalStockScaled' field.
   * Total Stock value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setTotalStockScaled(java.lang.CharSequence value) {
    this.totalStockScaled = value;
  }

  /**
   * Gets the value of the 'totalCashScaled' field.
   * Total Cash value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getTotalCashScaled() {
    return totalCashScaled;
  }

  /**
   * Sets the value of the 'totalCashScaled' field.
   * Total Cash value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setTotalCashScaled(java.lang.CharSequence value) {
    this.totalCashScaled = value;
  }

  /**
   * Gets the value of the 'totalCurrentAssetsScaled' field.
   * Total Current Assets value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getTotalCurrentAssetsScaled() {
    return totalCurrentAssetsScaled;
  }

  /**
   * Sets the value of the 'totalCurrentAssetsScaled' field.
   * Total Current Assets value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setTotalCurrentAssetsScaled(java.lang.CharSequence value) {
    this.totalCurrentAssetsScaled = value;
  }

  /**
   * Gets the value of the 'currentLiabilitiesScaled' field.
   * Current Liabilities value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getCurrentLiabilitiesScaled() {
    return currentLiabilitiesScaled;
  }

  /**
   * Sets the value of the 'currentLiabilitiesScaled' field.
   * Current Liabilities value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setCurrentLiabilitiesScaled(java.lang.CharSequence value) {
    this.currentLiabilitiesScaled = value;
  }

  /**
   * Gets the value of the 'workingCapitalScaled' field.
   * Working Capital value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getWorkingCapitalScaled() {
    return workingCapitalScaled;
  }

  /**
   * Sets the value of the 'workingCapitalScaled' field.
   * Working Capital value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setWorkingCapitalScaled(java.lang.CharSequence value) {
    this.workingCapitalScaled = value;
  }

  /**
   * Gets the value of the 'calledUpShareCapitalScaled' field.
   * Called Up Share Capital value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getCalledUpShareCapitalScaled() {
    return calledUpShareCapitalScaled;
  }

  /**
   * Sets the value of the 'calledUpShareCapitalScaled' field.
   * Called Up Share Capital value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setCalledUpShareCapitalScaled(java.lang.CharSequence value) {
    this.calledUpShareCapitalScaled = value;
  }

  /**
   * Gets the value of the 'profitAndLossAccountScaled' field.
   * Profit And Loss Account value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getProfitAndLossAccountScaled() {
    return profitAndLossAccountScaled;
  }

  /**
   * Sets the value of the 'profitAndLossAccountScaled' field.
   * Profit And Loss Account value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setProfitAndLossAccountScaled(java.lang.CharSequence value) {
    this.profitAndLossAccountScaled = value;
  }

  /**
   * Gets the value of the 'sharePremiumAccountScaled' field.
   * Share Premium Account value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getSharePremiumAccountScaled() {
    return sharePremiumAccountScaled;
  }

  /**
   * Sets the value of the 'sharePremiumAccountScaled' field.
   * Share Premium Account value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setSharePremiumAccountScaled(java.lang.CharSequence value) {
    this.sharePremiumAccountScaled = value;
  }

  /**
   * Gets the value of the 'revaluationReserveScaled' field.
   * Revaluation Reserve value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getRevaluationReserveScaled() {
    return revaluationReserveScaled;
  }

  /**
   * Sets the value of the 'revaluationReserveScaled' field.
   * Revaluation Reserve value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setRevaluationReserveScaled(java.lang.CharSequence value) {
    this.revaluationReserveScaled = value;
  }

  /**
   * Gets the value of the 'capitalReserveScaled' field.
   * Capital Reserve value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getCapitalReserveScaled() {
    return capitalReserveScaled;
  }

  /**
   * Sets the value of the 'capitalReserveScaled' field.
   * Capital Reserve value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setCapitalReserveScaled(java.lang.CharSequence value) {
    this.capitalReserveScaled = value;
  }

  /**
   * Gets the value of the 'capitalRedemptionReserveScaled' field.
   * Capital Redemption Reserve value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getCapitalRedemptionReserveScaled() {
    return capitalRedemptionReserveScaled;
  }

  /**
   * Sets the value of the 'capitalRedemptionReserveScaled' field.
   * Capital Redemption Reserve value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setCapitalRedemptionReserveScaled(java.lang.CharSequence value) {
    this.capitalRedemptionReserveScaled = value;
  }

  /**
   * Gets the value of the 'otherReservesScaled' field.
   * Other Reserves value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getOtherReservesScaled() {
    return otherReservesScaled;
  }

  /**
   * Sets the value of the 'otherReservesScaled' field.
   * Other Reserves value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setOtherReservesScaled(java.lang.CharSequence value) {
    this.otherReservesScaled = value;
  }

  /**
   * Gets the value of the 'goodwillReservesScaled' field.
   * Goodwill Reserves value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getGoodwillReservesScaled() {
    return goodwillReservesScaled;
  }

  /**
   * Sets the value of the 'goodwillReservesScaled' field.
   * Goodwill Reserves value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setGoodwillReservesScaled(java.lang.CharSequence value) {
    this.goodwillReservesScaled = value;
  }

  /**
   * Gets the value of the 'netWorthScaled' field.
   * Net Worth value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getNetWorthScaled() {
    return netWorthScaled;
  }

  /**
   * Sets the value of the 'netWorthScaled' field.
   * Net Worth value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setNetWorthScaled(java.lang.CharSequence value) {
    this.netWorthScaled = value;
  }

  /**
   * Gets the value of the 'netCashInflowScaled' field.
   * Net Cash Inflow value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getNetCashInflowScaled() {
    return netCashInflowScaled;
  }

  /**
   * Sets the value of the 'netCashInflowScaled' field.
   * Net Cash Inflow value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setNetCashInflowScaled(java.lang.CharSequence value) {
    this.netCashInflowScaled = value;
  }

  /**
   * Gets the value of the 'increaseInCashScaled' field.
   * Increase In Cash value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getIncreaseInCashScaled() {
    return increaseInCashScaled;
  }

  /**
   * Sets the value of the 'increaseInCashScaled' field.
   * Increase In Cash value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setIncreaseInCashScaled(java.lang.CharSequence value) {
    this.increaseInCashScaled = value;
  }

  /**
   * Gets the value of the 'exportSalesScaled' field.
   * Export Sales value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getExportSalesScaled() {
    return exportSalesScaled;
  }

  /**
   * Sets the value of the 'exportSalesScaled' field.
   * Export Sales value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setExportSalesScaled(java.lang.CharSequence value) {
    this.exportSalesScaled = value;
  }

  /**
   * Gets the value of the 'totalStaffCostsScaled' field.
   * Total Staff Costs value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getTotalStaffCostsScaled() {
    return totalStaffCostsScaled;
  }

  /**
   * Sets the value of the 'totalStaffCostsScaled' field.
   * Total Staff Costs value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setTotalStaffCostsScaled(java.lang.CharSequence value) {
    this.totalStaffCostsScaled = value;
  }

  /**
   * Gets the value of the 'directorsEmolumentScaled' field.
   * Directors Emolument value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getDirectorsEmolumentScaled() {
    return directorsEmolumentScaled;
  }

  /**
   * Sets the value of the 'directorsEmolumentScaled' field.
   * Directors Emolument value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setDirectorsEmolumentScaled(java.lang.CharSequence value) {
    this.directorsEmolumentScaled = value;
  }

  /**
   * Gets the value of the 'externalInterestReceivableScaled' field.
   * External Interest Receivable value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getExternalInterestReceivableScaled() {
    return externalInterestReceivableScaled;
  }

  /**
   * Sets the value of the 'externalInterestReceivableScaled' field.
   * External Interest Receivable value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setExternalInterestReceivableScaled(java.lang.CharSequence value) {
    this.externalInterestReceivableScaled = value;
  }

  /**
   * Gets the value of the 'externalInterestPayableScaled' field.
   * External Interest Payable value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getExternalInterestPayableScaled() {
    return externalInterestPayableScaled;
  }

  /**
   * Sets the value of the 'externalInterestPayableScaled' field.
   * External Interest Payable value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setExternalInterestPayableScaled(java.lang.CharSequence value) {
    this.externalInterestPayableScaled = value;
  }

  /**
   * Gets the value of the 'tradeDebtorsScaled' field.
   * Trade Debtors value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getTradeDebtorsScaled() {
    return tradeDebtorsScaled;
  }

  /**
   * Sets the value of the 'tradeDebtorsScaled' field.
   * Trade Debtors value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setTradeDebtorsScaled(java.lang.CharSequence value) {
    this.tradeDebtorsScaled = value;
  }

  /**
   * Gets the value of the 'dueFromGroupCompaniesScaled' field.
   * Due From Group Companies value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getDueFromGroupCompaniesScaled() {
    return dueFromGroupCompaniesScaled;
  }

  /**
   * Sets the value of the 'dueFromGroupCompaniesScaled' field.
   * Due From Group Companies value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setDueFromGroupCompaniesScaled(java.lang.CharSequence value) {
    this.dueFromGroupCompaniesScaled = value;
  }

  /**
   * Gets the value of the 'tradeCreditorsScaled' field.
   * Trade Creditors value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getTradeCreditorsScaled() {
    return tradeCreditorsScaled;
  }

  /**
   * Sets the value of the 'tradeCreditorsScaled' field.
   * Trade Creditors value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setTradeCreditorsScaled(java.lang.CharSequence value) {
    this.tradeCreditorsScaled = value;
  }

  /**
   * Gets the value of the 'dueToGroupCompaniesScaled' field.
   * Due to Group Companies value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getDueToGroupCompaniesScaled() {
    return dueToGroupCompaniesScaled;
  }

  /**
   * Sets the value of the 'dueToGroupCompaniesScaled' field.
   * Due to Group Companies value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setDueToGroupCompaniesScaled(java.lang.CharSequence value) {
    this.dueToGroupCompaniesScaled = value;
  }

  /**
   * Gets the value of the 'directorsLoanScaled' field.
   * Directors Loan value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getDirectorsLoanScaled() {
    return directorsLoanScaled;
  }

  /**
   * Sets the value of the 'directorsLoanScaled' field.
   * Directors Loan value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setDirectorsLoanScaled(java.lang.CharSequence value) {
    this.directorsLoanScaled = value;
  }

  /**
   * Gets the value of the 'bankOverdraftsScaled' field.
   * Bank Overdrafts value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getBankOverdraftsScaled() {
    return bankOverdraftsScaled;
  }

  /**
   * Sets the value of the 'bankOverdraftsScaled' field.
   * Bank Overdrafts value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setBankOverdraftsScaled(java.lang.CharSequence value) {
    this.bankOverdraftsScaled = value;
  }

  /**
   * Gets the value of the 'bankLoanShortTermScaled' field.
   * Bank Loan short term value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getBankLoanShortTermScaled() {
    return bankLoanShortTermScaled;
  }

  /**
   * Sets the value of the 'bankLoanShortTermScaled' field.
   * Bank Loan short term value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setBankLoanShortTermScaled(java.lang.CharSequence value) {
    this.bankLoanShortTermScaled = value;
  }

  /**
   * Gets the value of the 'bankLoansOverdraftsScaled' field.
   * Bank Loans Overdrafts value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getBankLoansOverdraftsScaled() {
    return bankLoansOverdraftsScaled;
  }

  /**
   * Sets the value of the 'bankLoansOverdraftsScaled' field.
   * Bank Loans Overdrafts value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setBankLoansOverdraftsScaled(java.lang.CharSequence value) {
    this.bankLoansOverdraftsScaled = value;
  }

  /**
   * Gets the value of the 'financeAndHirePurchaseScaled' field.
   * Finance And Hire Purchase value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getFinanceAndHirePurchaseScaled() {
    return financeAndHirePurchaseScaled;
  }

  /**
   * Sets the value of the 'financeAndHirePurchaseScaled' field.
   * Finance And Hire Purchase value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setFinanceAndHirePurchaseScaled(java.lang.CharSequence value) {
    this.financeAndHirePurchaseScaled = value;
  }

  /**
   * Gets the value of the 'hirePurchaseScaled' field.
   * Hire Purchase value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getHirePurchaseScaled() {
    return hirePurchaseScaled;
  }

  /**
   * Sets the value of the 'hirePurchaseScaled' field.
   * Hire Purchase value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setHirePurchaseScaled(java.lang.CharSequence value) {
    this.hirePurchaseScaled = value;
  }

  /**
   * Gets the value of the 'financeLeaseScaled' field.
   * Finance Lease value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getFinanceLeaseScaled() {
    return financeLeaseScaled;
  }

  /**
   * Sets the value of the 'financeLeaseScaled' field.
   * Finance Lease value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setFinanceLeaseScaled(java.lang.CharSequence value) {
    this.financeLeaseScaled = value;
  }

  /**
   * Gets the value of the 'otherShortTermBorrowingsScaled' field.
   * Other ShortTerm Borrowing value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getOtherShortTermBorrowingsScaled() {
    return otherShortTermBorrowingsScaled;
  }

  /**
   * Sets the value of the 'otherShortTermBorrowingsScaled' field.
   * Other ShortTerm Borrowing value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setOtherShortTermBorrowingsScaled(java.lang.CharSequence value) {
    this.otherShortTermBorrowingsScaled = value;
  }

  /**
   * Gets the value of the 'bankLoansScaled' field.
   * Bank Loans value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getBankLoansScaled() {
    return bankLoansScaled;
  }

  /**
   * Sets the value of the 'bankLoansScaled' field.
   * Bank Loans value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setBankLoansScaled(java.lang.CharSequence value) {
    this.bankLoansScaled = value;
  }

  /**
   * Gets the value of the 'financeLeaseAndHirePurchaseScaled' field.
   * Finance Lease and Hire Purchase value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getFinanceLeaseAndHirePurchaseScaled() {
    return financeLeaseAndHirePurchaseScaled;
  }

  /**
   * Sets the value of the 'financeLeaseAndHirePurchaseScaled' field.
   * Finance Lease and Hire Purchase value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setFinanceLeaseAndHirePurchaseScaled(java.lang.CharSequence value) {
    this.financeLeaseAndHirePurchaseScaled = value;
  }

  /**
   * Gets the value of the 'hirePurchaseLoanScaled' field.
   * Hire Purchase Loan value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getHirePurchaseLoanScaled() {
    return hirePurchaseLoanScaled;
  }

  /**
   * Sets the value of the 'hirePurchaseLoanScaled' field.
   * Hire Purchase Loan value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setHirePurchaseLoanScaled(java.lang.CharSequence value) {
    this.hirePurchaseLoanScaled = value;
  }

  /**
   * Gets the value of the 'financeLeaseObligationScaled' field.
   * Finance Lease Obligation value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getFinanceLeaseObligationScaled() {
    return financeLeaseObligationScaled;
  }

  /**
   * Sets the value of the 'financeLeaseObligationScaled' field.
   * Finance Lease Obligation value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setFinanceLeaseObligationScaled(java.lang.CharSequence value) {
    this.financeLeaseObligationScaled = value;
  }

  /**
   * Gets the value of the 'otherLongTermBorrowingScaled' field.
   * Other Long Term Borrowing value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getOtherLongTermBorrowingScaled() {
    return otherLongTermBorrowingScaled;
  }

  /**
   * Sets the value of the 'otherLongTermBorrowingScaled' field.
   * Other Long Term Borrowing value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setOtherLongTermBorrowingScaled(java.lang.CharSequence value) {
    this.otherLongTermBorrowingScaled = value;
  }

  /**
   * Gets the value of the 'owedToGroupCompaniesScaled' field.
   * Owed To Group Companies value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getOwedToGroupCompaniesScaled() {
    return owedToGroupCompaniesScaled;
  }

  /**
   * Sets the value of the 'owedToGroupCompaniesScaled' field.
   * Owed To Group Companies value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setOwedToGroupCompaniesScaled(java.lang.CharSequence value) {
    this.owedToGroupCompaniesScaled = value;
  }

  /**
   * Gets the value of the 'longTermDirectorsLoanScaled' field.
   * Long Term Directors Loan value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getLongTermDirectorsLoanScaled() {
    return longTermDirectorsLoanScaled;
  }

  /**
   * Sets the value of the 'longTermDirectorsLoanScaled' field.
   * Long Term Directors Loan value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setLongTermDirectorsLoanScaled(java.lang.CharSequence value) {
    this.longTermDirectorsLoanScaled = value;
  }

  /**
   * Gets the value of the 'otherLongTermLiabilitiesScaled' field.
   * Other Long Term Liabilities value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getOtherLongTermLiabilitiesScaled() {
    return otherLongTermLiabilitiesScaled;
  }

  /**
   * Sets the value of the 'otherLongTermLiabilitiesScaled' field.
   * Other Long Term Liabilities value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setOtherLongTermLiabilitiesScaled(java.lang.CharSequence value) {
    this.otherLongTermLiabilitiesScaled = value;
  }

  /**
   * Gets the value of the 'shortTermUnspecifiedSecuredScaled' field.
   * Short Term Unspecified Secured value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getShortTermUnspecifiedSecuredScaled() {
    return shortTermUnspecifiedSecuredScaled;
  }

  /**
   * Sets the value of the 'shortTermUnspecifiedSecuredScaled' field.
   * Short Term Unspecified Secured value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setShortTermUnspecifiedSecuredScaled(java.lang.CharSequence value) {
    this.shortTermUnspecifiedSecuredScaled = value;
  }

  /**
   * Gets the value of the 'longTermUnspecifiedSecuredScaled' field.
   * Long Term Unspecified Secured value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getLongTermUnspecifiedSecuredScaled() {
    return longTermUnspecifiedSecuredScaled;
  }

  /**
   * Sets the value of the 'longTermUnspecifiedSecuredScaled' field.
   * Long Term Unspecified Secured value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setLongTermUnspecifiedSecuredScaled(java.lang.CharSequence value) {
    this.longTermUnspecifiedSecuredScaled = value;
  }

  /**
   * Gets the value of the 'unknownPeriodSecuredScaled' field.
   * Unknown Period Secured value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getUnknownPeriodSecuredScaled() {
    return unknownPeriodSecuredScaled;
  }

  /**
   * Sets the value of the 'unknownPeriodSecuredScaled' field.
   * Unknown Period Secured value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setUnknownPeriodSecuredScaled(java.lang.CharSequence value) {
    this.unknownPeriodSecuredScaled = value;
  }

  /**
   * Gets the value of the 'unspecifiedBankLoansScaled' field.
   * Unspecified Bank Loans value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getUnspecifiedBankLoansScaled() {
    return unspecifiedBankLoansScaled;
  }

  /**
   * Sets the value of the 'unspecifiedBankLoansScaled' field.
   * Unspecified Bank Loans value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setUnspecifiedBankLoansScaled(java.lang.CharSequence value) {
    this.unspecifiedBankLoansScaled = value;
  }

  /**
   * Gets the value of the 'depreciationScaled' field.
   * Depreciation value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getDepreciationScaled() {
    return depreciationScaled;
  }

  /**
   * Sets the value of the 'depreciationScaled' field.
   * Depreciation value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setDepreciationScaled(java.lang.CharSequence value) {
    this.depreciationScaled = value;
  }

  /**
   * Gets the value of the 'operatingProfitScaled' field.
   * Operating Profit value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getOperatingProfitScaled() {
    return operatingProfitScaled;
  }

  /**
   * Sets the value of the 'operatingProfitScaled' field.
   * Operating Profit value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setOperatingProfitScaled(java.lang.CharSequence value) {
    this.operatingProfitScaled = value;
  }

  /**
   * Gets the value of the 'netCashFlowFromRoiAndServicingOfFinanceScaled' field.
   * Net Cashflow From RoI and Servicing of Finance value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getNetCashFlowFromRoiAndServicingOfFinanceScaled() {
    return netCashFlowFromRoiAndServicingOfFinanceScaled;
  }

  /**
   * Sets the value of the 'netCashFlowFromRoiAndServicingOfFinanceScaled' field.
   * Net Cashflow From RoI and Servicing of Finance value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setNetCashFlowFromRoiAndServicingOfFinanceScaled(java.lang.CharSequence value) {
    this.netCashFlowFromRoiAndServicingOfFinanceScaled = value;
  }

  /**
   * Gets the value of the 'netCashFlowBeforeFinancingScaled' field.
   * Net Cashflow Before Financing value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getNetCashFlowBeforeFinancingScaled() {
    return netCashFlowBeforeFinancingScaled;
  }

  /**
   * Sets the value of the 'netCashFlowBeforeFinancingScaled' field.
   * Net Cashflow Before Financing value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setNetCashFlowBeforeFinancingScaled(java.lang.CharSequence value) {
    this.netCashFlowBeforeFinancingScaled = value;
  }

  /**
   * Gets the value of the 'netCashFlowFromFinancingScaled' field.
   * Net Cashflow From Financing value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getNetCashFlowFromFinancingScaled() {
    return netCashFlowFromFinancingScaled;
  }

  /**
   * Sets the value of the 'netCashFlowFromFinancingScaled' field.
   * Net Cashflow From Financing value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setNetCashFlowFromFinancingScaled(java.lang.CharSequence value) {
    this.netCashFlowFromFinancingScaled = value;
  }

  /**
   * Gets the value of the 'contingentLiabilityScaled' field.
   * Contingent Liability value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   */
  public java.lang.CharSequence getContingentLiabilityScaled() {
    return contingentLiabilityScaled;
  }

  /**
   * Sets the value of the 'contingentLiabilityScaled' field.
   * Contingent Liability value with scale applied like BILLIONS, MILLIONS, THOUSANDS or UNITS   * @param value the value to set.
   */
  public void setContingentLiabilityScaled(java.lang.CharSequence value) {
    this.contingentLiabilityScaled = value;
  }

  /**
   * Gets the value of the 'processingDate' field.
   * Date on which data loaded on Data Fabric   */
  public java.lang.CharSequence getProcessingDate() {
    return processingDate;
  }

  /**
   * Sets the value of the 'processingDate' field.
   * Date on which data loaded on Data Fabric   * @param value the value to set.
   */
  public void setProcessingDate(java.lang.CharSequence value) {
    this.processingDate = value;
  }

  /**
   * Gets the value of the 'currency' field.
   * Currency   */
  public java.lang.CharSequence getCurrency() {
    return currency;
  }

  /**
   * Sets the value of the 'currency' field.
   * Currency   * @param value the value to set.
   */
  public void setCurrency(java.lang.CharSequence value) {
    this.currency = value;
  }

  /**
   * Gets the value of the 'UHCAlphaName' field.
   * Ultimate holding company alpha key   */
  public java.lang.CharSequence getUHCAlphaName() {
    return UHCAlphaName;
  }

  /**
   * Sets the value of the 'UHCAlphaName' field.
   * Ultimate holding company alpha key   * @param value the value to set.
   */
  public void setUHCAlphaName(java.lang.CharSequence value) {
    this.UHCAlphaName = value;
  }

  /**
   * Gets the value of the 'entity' field.
   */
  public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.entity.entityFields getEntity() {
    return entity;
  }

  /**
   * Sets the value of the 'entity' field.
   * @param value the value to set.
   */
  public void setEntity(com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.entity.entityFields value) {
    this.entity = value;
  }

  /** Creates a new StandardisedFields RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder();
  }
  
  /** Creates a new StandardisedFields RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder other) {
    return new com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder(other);
  }
  
  /** Creates a new StandardisedFields RecordBuilder by copying an existing StandardisedFields instance */
  public static com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields other) {
    return new com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder(other);
  }
  
  /**
   * RecordBuilder for StandardisedFields instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StandardisedFields>
    implements org.apache.avro.data.RecordBuilder<StandardisedFields> {

    private java.lang.CharSequence companyRegisteredNumber;
    private java.lang.CharSequence formatOfSupply;
    private java.lang.CharSequence migrationFlag;
    private java.lang.CharSequence turnoverScaled;
    private java.lang.CharSequence grossProfitScaled;
    private java.lang.CharSequence exceptionalIncomeScaled;
    private java.lang.CharSequence exceptionalChargesScaled;
    private java.lang.CharSequence preTaxProfitScaled;
    private java.lang.CharSequence postTaxProfitScaled;
    private java.lang.CharSequence dividendsScaled;
    private java.lang.CharSequence tangibleFixedAssetsScaled;
    private java.lang.CharSequence intangibleFixedAssetsScaled;
    private java.lang.CharSequence fixedAssetInvestmentScaled;
    private java.lang.CharSequence totalStockScaled;
    private java.lang.CharSequence totalCashScaled;
    private java.lang.CharSequence totalCurrentAssetsScaled;
    private java.lang.CharSequence currentLiabilitiesScaled;
    private java.lang.CharSequence workingCapitalScaled;
    private java.lang.CharSequence calledUpShareCapitalScaled;
    private java.lang.CharSequence profitAndLossAccountScaled;
    private java.lang.CharSequence sharePremiumAccountScaled;
    private java.lang.CharSequence revaluationReserveScaled;
    private java.lang.CharSequence capitalReserveScaled;
    private java.lang.CharSequence capitalRedemptionReserveScaled;
    private java.lang.CharSequence otherReservesScaled;
    private java.lang.CharSequence goodwillReservesScaled;
    private java.lang.CharSequence netWorthScaled;
    private java.lang.CharSequence netCashInflowScaled;
    private java.lang.CharSequence increaseInCashScaled;
    private java.lang.CharSequence exportSalesScaled;
    private java.lang.CharSequence totalStaffCostsScaled;
    private java.lang.CharSequence directorsEmolumentScaled;
    private java.lang.CharSequence externalInterestReceivableScaled;
    private java.lang.CharSequence externalInterestPayableScaled;
    private java.lang.CharSequence tradeDebtorsScaled;
    private java.lang.CharSequence dueFromGroupCompaniesScaled;
    private java.lang.CharSequence tradeCreditorsScaled;
    private java.lang.CharSequence dueToGroupCompaniesScaled;
    private java.lang.CharSequence directorsLoanScaled;
    private java.lang.CharSequence bankOverdraftsScaled;
    private java.lang.CharSequence bankLoanShortTermScaled;
    private java.lang.CharSequence bankLoansOverdraftsScaled;
    private java.lang.CharSequence financeAndHirePurchaseScaled;
    private java.lang.CharSequence hirePurchaseScaled;
    private java.lang.CharSequence financeLeaseScaled;
    private java.lang.CharSequence otherShortTermBorrowingsScaled;
    private java.lang.CharSequence bankLoansScaled;
    private java.lang.CharSequence financeLeaseAndHirePurchaseScaled;
    private java.lang.CharSequence hirePurchaseLoanScaled;
    private java.lang.CharSequence financeLeaseObligationScaled;
    private java.lang.CharSequence otherLongTermBorrowingScaled;
    private java.lang.CharSequence owedToGroupCompaniesScaled;
    private java.lang.CharSequence longTermDirectorsLoanScaled;
    private java.lang.CharSequence otherLongTermLiabilitiesScaled;
    private java.lang.CharSequence shortTermUnspecifiedSecuredScaled;
    private java.lang.CharSequence longTermUnspecifiedSecuredScaled;
    private java.lang.CharSequence unknownPeriodSecuredScaled;
    private java.lang.CharSequence unspecifiedBankLoansScaled;
    private java.lang.CharSequence depreciationScaled;
    private java.lang.CharSequence operatingProfitScaled;
    private java.lang.CharSequence netCashFlowFromRoiAndServicingOfFinanceScaled;
    private java.lang.CharSequence netCashFlowBeforeFinancingScaled;
    private java.lang.CharSequence netCashFlowFromFinancingScaled;
    private java.lang.CharSequence contingentLiabilityScaled;
    private java.lang.CharSequence processingDate;
    private java.lang.CharSequence currency;
    private java.lang.CharSequence UHCAlphaName;
    private com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.entity.entityFields entity;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.companyRegisteredNumber)) {
        this.companyRegisteredNumber = data().deepCopy(fields()[0].schema(), other.companyRegisteredNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.formatOfSupply)) {
        this.formatOfSupply = data().deepCopy(fields()[1].schema(), other.formatOfSupply);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.migrationFlag)) {
        this.migrationFlag = data().deepCopy(fields()[2].schema(), other.migrationFlag);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.turnoverScaled)) {
        this.turnoverScaled = data().deepCopy(fields()[3].schema(), other.turnoverScaled);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.grossProfitScaled)) {
        this.grossProfitScaled = data().deepCopy(fields()[4].schema(), other.grossProfitScaled);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.exceptionalIncomeScaled)) {
        this.exceptionalIncomeScaled = data().deepCopy(fields()[5].schema(), other.exceptionalIncomeScaled);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.exceptionalChargesScaled)) {
        this.exceptionalChargesScaled = data().deepCopy(fields()[6].schema(), other.exceptionalChargesScaled);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.preTaxProfitScaled)) {
        this.preTaxProfitScaled = data().deepCopy(fields()[7].schema(), other.preTaxProfitScaled);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.postTaxProfitScaled)) {
        this.postTaxProfitScaled = data().deepCopy(fields()[8].schema(), other.postTaxProfitScaled);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.dividendsScaled)) {
        this.dividendsScaled = data().deepCopy(fields()[9].schema(), other.dividendsScaled);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.tangibleFixedAssetsScaled)) {
        this.tangibleFixedAssetsScaled = data().deepCopy(fields()[10].schema(), other.tangibleFixedAssetsScaled);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.intangibleFixedAssetsScaled)) {
        this.intangibleFixedAssetsScaled = data().deepCopy(fields()[11].schema(), other.intangibleFixedAssetsScaled);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.fixedAssetInvestmentScaled)) {
        this.fixedAssetInvestmentScaled = data().deepCopy(fields()[12].schema(), other.fixedAssetInvestmentScaled);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.totalStockScaled)) {
        this.totalStockScaled = data().deepCopy(fields()[13].schema(), other.totalStockScaled);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.totalCashScaled)) {
        this.totalCashScaled = data().deepCopy(fields()[14].schema(), other.totalCashScaled);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.totalCurrentAssetsScaled)) {
        this.totalCurrentAssetsScaled = data().deepCopy(fields()[15].schema(), other.totalCurrentAssetsScaled);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.currentLiabilitiesScaled)) {
        this.currentLiabilitiesScaled = data().deepCopy(fields()[16].schema(), other.currentLiabilitiesScaled);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.workingCapitalScaled)) {
        this.workingCapitalScaled = data().deepCopy(fields()[17].schema(), other.workingCapitalScaled);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.calledUpShareCapitalScaled)) {
        this.calledUpShareCapitalScaled = data().deepCopy(fields()[18].schema(), other.calledUpShareCapitalScaled);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.profitAndLossAccountScaled)) {
        this.profitAndLossAccountScaled = data().deepCopy(fields()[19].schema(), other.profitAndLossAccountScaled);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.sharePremiumAccountScaled)) {
        this.sharePremiumAccountScaled = data().deepCopy(fields()[20].schema(), other.sharePremiumAccountScaled);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.revaluationReserveScaled)) {
        this.revaluationReserveScaled = data().deepCopy(fields()[21].schema(), other.revaluationReserveScaled);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.capitalReserveScaled)) {
        this.capitalReserveScaled = data().deepCopy(fields()[22].schema(), other.capitalReserveScaled);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.capitalRedemptionReserveScaled)) {
        this.capitalRedemptionReserveScaled = data().deepCopy(fields()[23].schema(), other.capitalRedemptionReserveScaled);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.otherReservesScaled)) {
        this.otherReservesScaled = data().deepCopy(fields()[24].schema(), other.otherReservesScaled);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.goodwillReservesScaled)) {
        this.goodwillReservesScaled = data().deepCopy(fields()[25].schema(), other.goodwillReservesScaled);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.netWorthScaled)) {
        this.netWorthScaled = data().deepCopy(fields()[26].schema(), other.netWorthScaled);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.netCashInflowScaled)) {
        this.netCashInflowScaled = data().deepCopy(fields()[27].schema(), other.netCashInflowScaled);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.increaseInCashScaled)) {
        this.increaseInCashScaled = data().deepCopy(fields()[28].schema(), other.increaseInCashScaled);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.exportSalesScaled)) {
        this.exportSalesScaled = data().deepCopy(fields()[29].schema(), other.exportSalesScaled);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.totalStaffCostsScaled)) {
        this.totalStaffCostsScaled = data().deepCopy(fields()[30].schema(), other.totalStaffCostsScaled);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.directorsEmolumentScaled)) {
        this.directorsEmolumentScaled = data().deepCopy(fields()[31].schema(), other.directorsEmolumentScaled);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.externalInterestReceivableScaled)) {
        this.externalInterestReceivableScaled = data().deepCopy(fields()[32].schema(), other.externalInterestReceivableScaled);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.externalInterestPayableScaled)) {
        this.externalInterestPayableScaled = data().deepCopy(fields()[33].schema(), other.externalInterestPayableScaled);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.tradeDebtorsScaled)) {
        this.tradeDebtorsScaled = data().deepCopy(fields()[34].schema(), other.tradeDebtorsScaled);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.dueFromGroupCompaniesScaled)) {
        this.dueFromGroupCompaniesScaled = data().deepCopy(fields()[35].schema(), other.dueFromGroupCompaniesScaled);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.tradeCreditorsScaled)) {
        this.tradeCreditorsScaled = data().deepCopy(fields()[36].schema(), other.tradeCreditorsScaled);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.dueToGroupCompaniesScaled)) {
        this.dueToGroupCompaniesScaled = data().deepCopy(fields()[37].schema(), other.dueToGroupCompaniesScaled);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.directorsLoanScaled)) {
        this.directorsLoanScaled = data().deepCopy(fields()[38].schema(), other.directorsLoanScaled);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.bankOverdraftsScaled)) {
        this.bankOverdraftsScaled = data().deepCopy(fields()[39].schema(), other.bankOverdraftsScaled);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.bankLoanShortTermScaled)) {
        this.bankLoanShortTermScaled = data().deepCopy(fields()[40].schema(), other.bankLoanShortTermScaled);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.bankLoansOverdraftsScaled)) {
        this.bankLoansOverdraftsScaled = data().deepCopy(fields()[41].schema(), other.bankLoansOverdraftsScaled);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.financeAndHirePurchaseScaled)) {
        this.financeAndHirePurchaseScaled = data().deepCopy(fields()[42].schema(), other.financeAndHirePurchaseScaled);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.hirePurchaseScaled)) {
        this.hirePurchaseScaled = data().deepCopy(fields()[43].schema(), other.hirePurchaseScaled);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.financeLeaseScaled)) {
        this.financeLeaseScaled = data().deepCopy(fields()[44].schema(), other.financeLeaseScaled);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.otherShortTermBorrowingsScaled)) {
        this.otherShortTermBorrowingsScaled = data().deepCopy(fields()[45].schema(), other.otherShortTermBorrowingsScaled);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.bankLoansScaled)) {
        this.bankLoansScaled = data().deepCopy(fields()[46].schema(), other.bankLoansScaled);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.financeLeaseAndHirePurchaseScaled)) {
        this.financeLeaseAndHirePurchaseScaled = data().deepCopy(fields()[47].schema(), other.financeLeaseAndHirePurchaseScaled);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.hirePurchaseLoanScaled)) {
        this.hirePurchaseLoanScaled = data().deepCopy(fields()[48].schema(), other.hirePurchaseLoanScaled);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.financeLeaseObligationScaled)) {
        this.financeLeaseObligationScaled = data().deepCopy(fields()[49].schema(), other.financeLeaseObligationScaled);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.otherLongTermBorrowingScaled)) {
        this.otherLongTermBorrowingScaled = data().deepCopy(fields()[50].schema(), other.otherLongTermBorrowingScaled);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.owedToGroupCompaniesScaled)) {
        this.owedToGroupCompaniesScaled = data().deepCopy(fields()[51].schema(), other.owedToGroupCompaniesScaled);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.longTermDirectorsLoanScaled)) {
        this.longTermDirectorsLoanScaled = data().deepCopy(fields()[52].schema(), other.longTermDirectorsLoanScaled);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.otherLongTermLiabilitiesScaled)) {
        this.otherLongTermLiabilitiesScaled = data().deepCopy(fields()[53].schema(), other.otherLongTermLiabilitiesScaled);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.shortTermUnspecifiedSecuredScaled)) {
        this.shortTermUnspecifiedSecuredScaled = data().deepCopy(fields()[54].schema(), other.shortTermUnspecifiedSecuredScaled);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.longTermUnspecifiedSecuredScaled)) {
        this.longTermUnspecifiedSecuredScaled = data().deepCopy(fields()[55].schema(), other.longTermUnspecifiedSecuredScaled);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.unknownPeriodSecuredScaled)) {
        this.unknownPeriodSecuredScaled = data().deepCopy(fields()[56].schema(), other.unknownPeriodSecuredScaled);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.unspecifiedBankLoansScaled)) {
        this.unspecifiedBankLoansScaled = data().deepCopy(fields()[57].schema(), other.unspecifiedBankLoansScaled);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.depreciationScaled)) {
        this.depreciationScaled = data().deepCopy(fields()[58].schema(), other.depreciationScaled);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.operatingProfitScaled)) {
        this.operatingProfitScaled = data().deepCopy(fields()[59].schema(), other.operatingProfitScaled);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.netCashFlowFromRoiAndServicingOfFinanceScaled)) {
        this.netCashFlowFromRoiAndServicingOfFinanceScaled = data().deepCopy(fields()[60].schema(), other.netCashFlowFromRoiAndServicingOfFinanceScaled);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other.netCashFlowBeforeFinancingScaled)) {
        this.netCashFlowBeforeFinancingScaled = data().deepCopy(fields()[61].schema(), other.netCashFlowBeforeFinancingScaled);
        fieldSetFlags()[61] = true;
      }
      if (isValidValue(fields()[62], other.netCashFlowFromFinancingScaled)) {
        this.netCashFlowFromFinancingScaled = data().deepCopy(fields()[62].schema(), other.netCashFlowFromFinancingScaled);
        fieldSetFlags()[62] = true;
      }
      if (isValidValue(fields()[63], other.contingentLiabilityScaled)) {
        this.contingentLiabilityScaled = data().deepCopy(fields()[63].schema(), other.contingentLiabilityScaled);
        fieldSetFlags()[63] = true;
      }
      if (isValidValue(fields()[64], other.processingDate)) {
        this.processingDate = data().deepCopy(fields()[64].schema(), other.processingDate);
        fieldSetFlags()[64] = true;
      }
      if (isValidValue(fields()[65], other.currency)) {
        this.currency = data().deepCopy(fields()[65].schema(), other.currency);
        fieldSetFlags()[65] = true;
      }
      if (isValidValue(fields()[66], other.UHCAlphaName)) {
        this.UHCAlphaName = data().deepCopy(fields()[66].schema(), other.UHCAlphaName);
        fieldSetFlags()[66] = true;
      }
      if (isValidValue(fields()[67], other.entity)) {
        this.entity = data().deepCopy(fields()[67].schema(), other.entity);
        fieldSetFlags()[67] = true;
      }
    }
    
    /** Creates a Builder by copying an existing StandardisedFields instance */
    private Builder(com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields other) {
            super(com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.SCHEMA$);
      if (isValidValue(fields()[0], other.companyRegisteredNumber)) {
        this.companyRegisteredNumber = data().deepCopy(fields()[0].schema(), other.companyRegisteredNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.formatOfSupply)) {
        this.formatOfSupply = data().deepCopy(fields()[1].schema(), other.formatOfSupply);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.migrationFlag)) {
        this.migrationFlag = data().deepCopy(fields()[2].schema(), other.migrationFlag);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.turnoverScaled)) {
        this.turnoverScaled = data().deepCopy(fields()[3].schema(), other.turnoverScaled);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.grossProfitScaled)) {
        this.grossProfitScaled = data().deepCopy(fields()[4].schema(), other.grossProfitScaled);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.exceptionalIncomeScaled)) {
        this.exceptionalIncomeScaled = data().deepCopy(fields()[5].schema(), other.exceptionalIncomeScaled);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.exceptionalChargesScaled)) {
        this.exceptionalChargesScaled = data().deepCopy(fields()[6].schema(), other.exceptionalChargesScaled);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.preTaxProfitScaled)) {
        this.preTaxProfitScaled = data().deepCopy(fields()[7].schema(), other.preTaxProfitScaled);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.postTaxProfitScaled)) {
        this.postTaxProfitScaled = data().deepCopy(fields()[8].schema(), other.postTaxProfitScaled);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.dividendsScaled)) {
        this.dividendsScaled = data().deepCopy(fields()[9].schema(), other.dividendsScaled);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.tangibleFixedAssetsScaled)) {
        this.tangibleFixedAssetsScaled = data().deepCopy(fields()[10].schema(), other.tangibleFixedAssetsScaled);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.intangibleFixedAssetsScaled)) {
        this.intangibleFixedAssetsScaled = data().deepCopy(fields()[11].schema(), other.intangibleFixedAssetsScaled);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.fixedAssetInvestmentScaled)) {
        this.fixedAssetInvestmentScaled = data().deepCopy(fields()[12].schema(), other.fixedAssetInvestmentScaled);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.totalStockScaled)) {
        this.totalStockScaled = data().deepCopy(fields()[13].schema(), other.totalStockScaled);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.totalCashScaled)) {
        this.totalCashScaled = data().deepCopy(fields()[14].schema(), other.totalCashScaled);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.totalCurrentAssetsScaled)) {
        this.totalCurrentAssetsScaled = data().deepCopy(fields()[15].schema(), other.totalCurrentAssetsScaled);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.currentLiabilitiesScaled)) {
        this.currentLiabilitiesScaled = data().deepCopy(fields()[16].schema(), other.currentLiabilitiesScaled);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.workingCapitalScaled)) {
        this.workingCapitalScaled = data().deepCopy(fields()[17].schema(), other.workingCapitalScaled);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.calledUpShareCapitalScaled)) {
        this.calledUpShareCapitalScaled = data().deepCopy(fields()[18].schema(), other.calledUpShareCapitalScaled);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.profitAndLossAccountScaled)) {
        this.profitAndLossAccountScaled = data().deepCopy(fields()[19].schema(), other.profitAndLossAccountScaled);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.sharePremiumAccountScaled)) {
        this.sharePremiumAccountScaled = data().deepCopy(fields()[20].schema(), other.sharePremiumAccountScaled);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.revaluationReserveScaled)) {
        this.revaluationReserveScaled = data().deepCopy(fields()[21].schema(), other.revaluationReserveScaled);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.capitalReserveScaled)) {
        this.capitalReserveScaled = data().deepCopy(fields()[22].schema(), other.capitalReserveScaled);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.capitalRedemptionReserveScaled)) {
        this.capitalRedemptionReserveScaled = data().deepCopy(fields()[23].schema(), other.capitalRedemptionReserveScaled);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.otherReservesScaled)) {
        this.otherReservesScaled = data().deepCopy(fields()[24].schema(), other.otherReservesScaled);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.goodwillReservesScaled)) {
        this.goodwillReservesScaled = data().deepCopy(fields()[25].schema(), other.goodwillReservesScaled);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.netWorthScaled)) {
        this.netWorthScaled = data().deepCopy(fields()[26].schema(), other.netWorthScaled);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.netCashInflowScaled)) {
        this.netCashInflowScaled = data().deepCopy(fields()[27].schema(), other.netCashInflowScaled);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.increaseInCashScaled)) {
        this.increaseInCashScaled = data().deepCopy(fields()[28].schema(), other.increaseInCashScaled);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.exportSalesScaled)) {
        this.exportSalesScaled = data().deepCopy(fields()[29].schema(), other.exportSalesScaled);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.totalStaffCostsScaled)) {
        this.totalStaffCostsScaled = data().deepCopy(fields()[30].schema(), other.totalStaffCostsScaled);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.directorsEmolumentScaled)) {
        this.directorsEmolumentScaled = data().deepCopy(fields()[31].schema(), other.directorsEmolumentScaled);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.externalInterestReceivableScaled)) {
        this.externalInterestReceivableScaled = data().deepCopy(fields()[32].schema(), other.externalInterestReceivableScaled);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.externalInterestPayableScaled)) {
        this.externalInterestPayableScaled = data().deepCopy(fields()[33].schema(), other.externalInterestPayableScaled);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.tradeDebtorsScaled)) {
        this.tradeDebtorsScaled = data().deepCopy(fields()[34].schema(), other.tradeDebtorsScaled);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.dueFromGroupCompaniesScaled)) {
        this.dueFromGroupCompaniesScaled = data().deepCopy(fields()[35].schema(), other.dueFromGroupCompaniesScaled);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.tradeCreditorsScaled)) {
        this.tradeCreditorsScaled = data().deepCopy(fields()[36].schema(), other.tradeCreditorsScaled);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.dueToGroupCompaniesScaled)) {
        this.dueToGroupCompaniesScaled = data().deepCopy(fields()[37].schema(), other.dueToGroupCompaniesScaled);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.directorsLoanScaled)) {
        this.directorsLoanScaled = data().deepCopy(fields()[38].schema(), other.directorsLoanScaled);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.bankOverdraftsScaled)) {
        this.bankOverdraftsScaled = data().deepCopy(fields()[39].schema(), other.bankOverdraftsScaled);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.bankLoanShortTermScaled)) {
        this.bankLoanShortTermScaled = data().deepCopy(fields()[40].schema(), other.bankLoanShortTermScaled);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.bankLoansOverdraftsScaled)) {
        this.bankLoansOverdraftsScaled = data().deepCopy(fields()[41].schema(), other.bankLoansOverdraftsScaled);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.financeAndHirePurchaseScaled)) {
        this.financeAndHirePurchaseScaled = data().deepCopy(fields()[42].schema(), other.financeAndHirePurchaseScaled);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.hirePurchaseScaled)) {
        this.hirePurchaseScaled = data().deepCopy(fields()[43].schema(), other.hirePurchaseScaled);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.financeLeaseScaled)) {
        this.financeLeaseScaled = data().deepCopy(fields()[44].schema(), other.financeLeaseScaled);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.otherShortTermBorrowingsScaled)) {
        this.otherShortTermBorrowingsScaled = data().deepCopy(fields()[45].schema(), other.otherShortTermBorrowingsScaled);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.bankLoansScaled)) {
        this.bankLoansScaled = data().deepCopy(fields()[46].schema(), other.bankLoansScaled);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.financeLeaseAndHirePurchaseScaled)) {
        this.financeLeaseAndHirePurchaseScaled = data().deepCopy(fields()[47].schema(), other.financeLeaseAndHirePurchaseScaled);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.hirePurchaseLoanScaled)) {
        this.hirePurchaseLoanScaled = data().deepCopy(fields()[48].schema(), other.hirePurchaseLoanScaled);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.financeLeaseObligationScaled)) {
        this.financeLeaseObligationScaled = data().deepCopy(fields()[49].schema(), other.financeLeaseObligationScaled);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.otherLongTermBorrowingScaled)) {
        this.otherLongTermBorrowingScaled = data().deepCopy(fields()[50].schema(), other.otherLongTermBorrowingScaled);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.owedToGroupCompaniesScaled)) {
        this.owedToGroupCompaniesScaled = data().deepCopy(fields()[51].schema(), other.owedToGroupCompaniesScaled);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.longTermDirectorsLoanScaled)) {
        this.longTermDirectorsLoanScaled = data().deepCopy(fields()[52].schema(), other.longTermDirectorsLoanScaled);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.otherLongTermLiabilitiesScaled)) {
        this.otherLongTermLiabilitiesScaled = data().deepCopy(fields()[53].schema(), other.otherLongTermLiabilitiesScaled);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.shortTermUnspecifiedSecuredScaled)) {
        this.shortTermUnspecifiedSecuredScaled = data().deepCopy(fields()[54].schema(), other.shortTermUnspecifiedSecuredScaled);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.longTermUnspecifiedSecuredScaled)) {
        this.longTermUnspecifiedSecuredScaled = data().deepCopy(fields()[55].schema(), other.longTermUnspecifiedSecuredScaled);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.unknownPeriodSecuredScaled)) {
        this.unknownPeriodSecuredScaled = data().deepCopy(fields()[56].schema(), other.unknownPeriodSecuredScaled);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.unspecifiedBankLoansScaled)) {
        this.unspecifiedBankLoansScaled = data().deepCopy(fields()[57].schema(), other.unspecifiedBankLoansScaled);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.depreciationScaled)) {
        this.depreciationScaled = data().deepCopy(fields()[58].schema(), other.depreciationScaled);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.operatingProfitScaled)) {
        this.operatingProfitScaled = data().deepCopy(fields()[59].schema(), other.operatingProfitScaled);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.netCashFlowFromRoiAndServicingOfFinanceScaled)) {
        this.netCashFlowFromRoiAndServicingOfFinanceScaled = data().deepCopy(fields()[60].schema(), other.netCashFlowFromRoiAndServicingOfFinanceScaled);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other.netCashFlowBeforeFinancingScaled)) {
        this.netCashFlowBeforeFinancingScaled = data().deepCopy(fields()[61].schema(), other.netCashFlowBeforeFinancingScaled);
        fieldSetFlags()[61] = true;
      }
      if (isValidValue(fields()[62], other.netCashFlowFromFinancingScaled)) {
        this.netCashFlowFromFinancingScaled = data().deepCopy(fields()[62].schema(), other.netCashFlowFromFinancingScaled);
        fieldSetFlags()[62] = true;
      }
      if (isValidValue(fields()[63], other.contingentLiabilityScaled)) {
        this.contingentLiabilityScaled = data().deepCopy(fields()[63].schema(), other.contingentLiabilityScaled);
        fieldSetFlags()[63] = true;
      }
      if (isValidValue(fields()[64], other.processingDate)) {
        this.processingDate = data().deepCopy(fields()[64].schema(), other.processingDate);
        fieldSetFlags()[64] = true;
      }
      if (isValidValue(fields()[65], other.currency)) {
        this.currency = data().deepCopy(fields()[65].schema(), other.currency);
        fieldSetFlags()[65] = true;
      }
      if (isValidValue(fields()[66], other.UHCAlphaName)) {
        this.UHCAlphaName = data().deepCopy(fields()[66].schema(), other.UHCAlphaName);
        fieldSetFlags()[66] = true;
      }
      if (isValidValue(fields()[67], other.entity)) {
        this.entity = data().deepCopy(fields()[67].schema(), other.entity);
        fieldSetFlags()[67] = true;
      }
    }

    /** Gets the value of the 'companyRegisteredNumber' field */
    public java.lang.CharSequence getCompanyRegisteredNumber() {
      return companyRegisteredNumber;
    }
    
    /** Sets the value of the 'companyRegisteredNumber' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setCompanyRegisteredNumber(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.companyRegisteredNumber = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'companyRegisteredNumber' field has been set */
    public boolean hasCompanyRegisteredNumber() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'companyRegisteredNumber' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearCompanyRegisteredNumber() {
      companyRegisteredNumber = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'formatOfSupply' field */
    public java.lang.CharSequence getFormatOfSupply() {
      return formatOfSupply;
    }
    
    /** Sets the value of the 'formatOfSupply' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setFormatOfSupply(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.formatOfSupply = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'formatOfSupply' field has been set */
    public boolean hasFormatOfSupply() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'formatOfSupply' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearFormatOfSupply() {
      formatOfSupply = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'migrationFlag' field */
    public java.lang.CharSequence getMigrationFlag() {
      return migrationFlag;
    }
    
    /** Sets the value of the 'migrationFlag' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setMigrationFlag(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.migrationFlag = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'migrationFlag' field has been set */
    public boolean hasMigrationFlag() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'migrationFlag' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearMigrationFlag() {
      migrationFlag = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'turnoverScaled' field */
    public java.lang.CharSequence getTurnoverScaled() {
      return turnoverScaled;
    }
    
    /** Sets the value of the 'turnoverScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setTurnoverScaled(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.turnoverScaled = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'turnoverScaled' field has been set */
    public boolean hasTurnoverScaled() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'turnoverScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearTurnoverScaled() {
      turnoverScaled = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'grossProfitScaled' field */
    public java.lang.CharSequence getGrossProfitScaled() {
      return grossProfitScaled;
    }
    
    /** Sets the value of the 'grossProfitScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setGrossProfitScaled(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.grossProfitScaled = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'grossProfitScaled' field has been set */
    public boolean hasGrossProfitScaled() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'grossProfitScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearGrossProfitScaled() {
      grossProfitScaled = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'exceptionalIncomeScaled' field */
    public java.lang.CharSequence getExceptionalIncomeScaled() {
      return exceptionalIncomeScaled;
    }
    
    /** Sets the value of the 'exceptionalIncomeScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setExceptionalIncomeScaled(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.exceptionalIncomeScaled = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'exceptionalIncomeScaled' field has been set */
    public boolean hasExceptionalIncomeScaled() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'exceptionalIncomeScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearExceptionalIncomeScaled() {
      exceptionalIncomeScaled = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'exceptionalChargesScaled' field */
    public java.lang.CharSequence getExceptionalChargesScaled() {
      return exceptionalChargesScaled;
    }
    
    /** Sets the value of the 'exceptionalChargesScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setExceptionalChargesScaled(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.exceptionalChargesScaled = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'exceptionalChargesScaled' field has been set */
    public boolean hasExceptionalChargesScaled() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'exceptionalChargesScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearExceptionalChargesScaled() {
      exceptionalChargesScaled = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'preTaxProfitScaled' field */
    public java.lang.CharSequence getPreTaxProfitScaled() {
      return preTaxProfitScaled;
    }
    
    /** Sets the value of the 'preTaxProfitScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setPreTaxProfitScaled(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.preTaxProfitScaled = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'preTaxProfitScaled' field has been set */
    public boolean hasPreTaxProfitScaled() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'preTaxProfitScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearPreTaxProfitScaled() {
      preTaxProfitScaled = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'postTaxProfitScaled' field */
    public java.lang.CharSequence getPostTaxProfitScaled() {
      return postTaxProfitScaled;
    }
    
    /** Sets the value of the 'postTaxProfitScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setPostTaxProfitScaled(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.postTaxProfitScaled = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'postTaxProfitScaled' field has been set */
    public boolean hasPostTaxProfitScaled() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'postTaxProfitScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearPostTaxProfitScaled() {
      postTaxProfitScaled = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'dividendsScaled' field */
    public java.lang.CharSequence getDividendsScaled() {
      return dividendsScaled;
    }
    
    /** Sets the value of the 'dividendsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setDividendsScaled(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.dividendsScaled = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'dividendsScaled' field has been set */
    public boolean hasDividendsScaled() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'dividendsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearDividendsScaled() {
      dividendsScaled = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'tangibleFixedAssetsScaled' field */
    public java.lang.CharSequence getTangibleFixedAssetsScaled() {
      return tangibleFixedAssetsScaled;
    }
    
    /** Sets the value of the 'tangibleFixedAssetsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setTangibleFixedAssetsScaled(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.tangibleFixedAssetsScaled = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'tangibleFixedAssetsScaled' field has been set */
    public boolean hasTangibleFixedAssetsScaled() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'tangibleFixedAssetsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearTangibleFixedAssetsScaled() {
      tangibleFixedAssetsScaled = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'intangibleFixedAssetsScaled' field */
    public java.lang.CharSequence getIntangibleFixedAssetsScaled() {
      return intangibleFixedAssetsScaled;
    }
    
    /** Sets the value of the 'intangibleFixedAssetsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setIntangibleFixedAssetsScaled(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.intangibleFixedAssetsScaled = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'intangibleFixedAssetsScaled' field has been set */
    public boolean hasIntangibleFixedAssetsScaled() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'intangibleFixedAssetsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearIntangibleFixedAssetsScaled() {
      intangibleFixedAssetsScaled = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'fixedAssetInvestmentScaled' field */
    public java.lang.CharSequence getFixedAssetInvestmentScaled() {
      return fixedAssetInvestmentScaled;
    }
    
    /** Sets the value of the 'fixedAssetInvestmentScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setFixedAssetInvestmentScaled(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.fixedAssetInvestmentScaled = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'fixedAssetInvestmentScaled' field has been set */
    public boolean hasFixedAssetInvestmentScaled() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'fixedAssetInvestmentScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearFixedAssetInvestmentScaled() {
      fixedAssetInvestmentScaled = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'totalStockScaled' field */
    public java.lang.CharSequence getTotalStockScaled() {
      return totalStockScaled;
    }
    
    /** Sets the value of the 'totalStockScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setTotalStockScaled(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.totalStockScaled = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'totalStockScaled' field has been set */
    public boolean hasTotalStockScaled() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'totalStockScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearTotalStockScaled() {
      totalStockScaled = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'totalCashScaled' field */
    public java.lang.CharSequence getTotalCashScaled() {
      return totalCashScaled;
    }
    
    /** Sets the value of the 'totalCashScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setTotalCashScaled(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.totalCashScaled = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'totalCashScaled' field has been set */
    public boolean hasTotalCashScaled() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'totalCashScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearTotalCashScaled() {
      totalCashScaled = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'totalCurrentAssetsScaled' field */
    public java.lang.CharSequence getTotalCurrentAssetsScaled() {
      return totalCurrentAssetsScaled;
    }
    
    /** Sets the value of the 'totalCurrentAssetsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setTotalCurrentAssetsScaled(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.totalCurrentAssetsScaled = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'totalCurrentAssetsScaled' field has been set */
    public boolean hasTotalCurrentAssetsScaled() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'totalCurrentAssetsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearTotalCurrentAssetsScaled() {
      totalCurrentAssetsScaled = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'currentLiabilitiesScaled' field */
    public java.lang.CharSequence getCurrentLiabilitiesScaled() {
      return currentLiabilitiesScaled;
    }
    
    /** Sets the value of the 'currentLiabilitiesScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setCurrentLiabilitiesScaled(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.currentLiabilitiesScaled = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'currentLiabilitiesScaled' field has been set */
    public boolean hasCurrentLiabilitiesScaled() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'currentLiabilitiesScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearCurrentLiabilitiesScaled() {
      currentLiabilitiesScaled = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'workingCapitalScaled' field */
    public java.lang.CharSequence getWorkingCapitalScaled() {
      return workingCapitalScaled;
    }
    
    /** Sets the value of the 'workingCapitalScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setWorkingCapitalScaled(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.workingCapitalScaled = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'workingCapitalScaled' field has been set */
    public boolean hasWorkingCapitalScaled() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'workingCapitalScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearWorkingCapitalScaled() {
      workingCapitalScaled = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'calledUpShareCapitalScaled' field */
    public java.lang.CharSequence getCalledUpShareCapitalScaled() {
      return calledUpShareCapitalScaled;
    }
    
    /** Sets the value of the 'calledUpShareCapitalScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setCalledUpShareCapitalScaled(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.calledUpShareCapitalScaled = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'calledUpShareCapitalScaled' field has been set */
    public boolean hasCalledUpShareCapitalScaled() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'calledUpShareCapitalScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearCalledUpShareCapitalScaled() {
      calledUpShareCapitalScaled = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'profitAndLossAccountScaled' field */
    public java.lang.CharSequence getProfitAndLossAccountScaled() {
      return profitAndLossAccountScaled;
    }
    
    /** Sets the value of the 'profitAndLossAccountScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setProfitAndLossAccountScaled(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.profitAndLossAccountScaled = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'profitAndLossAccountScaled' field has been set */
    public boolean hasProfitAndLossAccountScaled() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'profitAndLossAccountScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearProfitAndLossAccountScaled() {
      profitAndLossAccountScaled = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'sharePremiumAccountScaled' field */
    public java.lang.CharSequence getSharePremiumAccountScaled() {
      return sharePremiumAccountScaled;
    }
    
    /** Sets the value of the 'sharePremiumAccountScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setSharePremiumAccountScaled(java.lang.CharSequence value) {
      validate(fields()[20], value);
      this.sharePremiumAccountScaled = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'sharePremiumAccountScaled' field has been set */
    public boolean hasSharePremiumAccountScaled() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'sharePremiumAccountScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearSharePremiumAccountScaled() {
      sharePremiumAccountScaled = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /** Gets the value of the 'revaluationReserveScaled' field */
    public java.lang.CharSequence getRevaluationReserveScaled() {
      return revaluationReserveScaled;
    }
    
    /** Sets the value of the 'revaluationReserveScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setRevaluationReserveScaled(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.revaluationReserveScaled = value;
      fieldSetFlags()[21] = true;
      return this; 
    }
    
    /** Checks whether the 'revaluationReserveScaled' field has been set */
    public boolean hasRevaluationReserveScaled() {
      return fieldSetFlags()[21];
    }
    
    /** Clears the value of the 'revaluationReserveScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearRevaluationReserveScaled() {
      revaluationReserveScaled = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /** Gets the value of the 'capitalReserveScaled' field */
    public java.lang.CharSequence getCapitalReserveScaled() {
      return capitalReserveScaled;
    }
    
    /** Sets the value of the 'capitalReserveScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setCapitalReserveScaled(java.lang.CharSequence value) {
      validate(fields()[22], value);
      this.capitalReserveScaled = value;
      fieldSetFlags()[22] = true;
      return this; 
    }
    
    /** Checks whether the 'capitalReserveScaled' field has been set */
    public boolean hasCapitalReserveScaled() {
      return fieldSetFlags()[22];
    }
    
    /** Clears the value of the 'capitalReserveScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearCapitalReserveScaled() {
      capitalReserveScaled = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /** Gets the value of the 'capitalRedemptionReserveScaled' field */
    public java.lang.CharSequence getCapitalRedemptionReserveScaled() {
      return capitalRedemptionReserveScaled;
    }
    
    /** Sets the value of the 'capitalRedemptionReserveScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setCapitalRedemptionReserveScaled(java.lang.CharSequence value) {
      validate(fields()[23], value);
      this.capitalRedemptionReserveScaled = value;
      fieldSetFlags()[23] = true;
      return this; 
    }
    
    /** Checks whether the 'capitalRedemptionReserveScaled' field has been set */
    public boolean hasCapitalRedemptionReserveScaled() {
      return fieldSetFlags()[23];
    }
    
    /** Clears the value of the 'capitalRedemptionReserveScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearCapitalRedemptionReserveScaled() {
      capitalRedemptionReserveScaled = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /** Gets the value of the 'otherReservesScaled' field */
    public java.lang.CharSequence getOtherReservesScaled() {
      return otherReservesScaled;
    }
    
    /** Sets the value of the 'otherReservesScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setOtherReservesScaled(java.lang.CharSequence value) {
      validate(fields()[24], value);
      this.otherReservesScaled = value;
      fieldSetFlags()[24] = true;
      return this; 
    }
    
    /** Checks whether the 'otherReservesScaled' field has been set */
    public boolean hasOtherReservesScaled() {
      return fieldSetFlags()[24];
    }
    
    /** Clears the value of the 'otherReservesScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearOtherReservesScaled() {
      otherReservesScaled = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /** Gets the value of the 'goodwillReservesScaled' field */
    public java.lang.CharSequence getGoodwillReservesScaled() {
      return goodwillReservesScaled;
    }
    
    /** Sets the value of the 'goodwillReservesScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setGoodwillReservesScaled(java.lang.CharSequence value) {
      validate(fields()[25], value);
      this.goodwillReservesScaled = value;
      fieldSetFlags()[25] = true;
      return this; 
    }
    
    /** Checks whether the 'goodwillReservesScaled' field has been set */
    public boolean hasGoodwillReservesScaled() {
      return fieldSetFlags()[25];
    }
    
    /** Clears the value of the 'goodwillReservesScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearGoodwillReservesScaled() {
      goodwillReservesScaled = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /** Gets the value of the 'netWorthScaled' field */
    public java.lang.CharSequence getNetWorthScaled() {
      return netWorthScaled;
    }
    
    /** Sets the value of the 'netWorthScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setNetWorthScaled(java.lang.CharSequence value) {
      validate(fields()[26], value);
      this.netWorthScaled = value;
      fieldSetFlags()[26] = true;
      return this; 
    }
    
    /** Checks whether the 'netWorthScaled' field has been set */
    public boolean hasNetWorthScaled() {
      return fieldSetFlags()[26];
    }
    
    /** Clears the value of the 'netWorthScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearNetWorthScaled() {
      netWorthScaled = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /** Gets the value of the 'netCashInflowScaled' field */
    public java.lang.CharSequence getNetCashInflowScaled() {
      return netCashInflowScaled;
    }
    
    /** Sets the value of the 'netCashInflowScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setNetCashInflowScaled(java.lang.CharSequence value) {
      validate(fields()[27], value);
      this.netCashInflowScaled = value;
      fieldSetFlags()[27] = true;
      return this; 
    }
    
    /** Checks whether the 'netCashInflowScaled' field has been set */
    public boolean hasNetCashInflowScaled() {
      return fieldSetFlags()[27];
    }
    
    /** Clears the value of the 'netCashInflowScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearNetCashInflowScaled() {
      netCashInflowScaled = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /** Gets the value of the 'increaseInCashScaled' field */
    public java.lang.CharSequence getIncreaseInCashScaled() {
      return increaseInCashScaled;
    }
    
    /** Sets the value of the 'increaseInCashScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setIncreaseInCashScaled(java.lang.CharSequence value) {
      validate(fields()[28], value);
      this.increaseInCashScaled = value;
      fieldSetFlags()[28] = true;
      return this; 
    }
    
    /** Checks whether the 'increaseInCashScaled' field has been set */
    public boolean hasIncreaseInCashScaled() {
      return fieldSetFlags()[28];
    }
    
    /** Clears the value of the 'increaseInCashScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearIncreaseInCashScaled() {
      increaseInCashScaled = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /** Gets the value of the 'exportSalesScaled' field */
    public java.lang.CharSequence getExportSalesScaled() {
      return exportSalesScaled;
    }
    
    /** Sets the value of the 'exportSalesScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setExportSalesScaled(java.lang.CharSequence value) {
      validate(fields()[29], value);
      this.exportSalesScaled = value;
      fieldSetFlags()[29] = true;
      return this; 
    }
    
    /** Checks whether the 'exportSalesScaled' field has been set */
    public boolean hasExportSalesScaled() {
      return fieldSetFlags()[29];
    }
    
    /** Clears the value of the 'exportSalesScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearExportSalesScaled() {
      exportSalesScaled = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /** Gets the value of the 'totalStaffCostsScaled' field */
    public java.lang.CharSequence getTotalStaffCostsScaled() {
      return totalStaffCostsScaled;
    }
    
    /** Sets the value of the 'totalStaffCostsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setTotalStaffCostsScaled(java.lang.CharSequence value) {
      validate(fields()[30], value);
      this.totalStaffCostsScaled = value;
      fieldSetFlags()[30] = true;
      return this; 
    }
    
    /** Checks whether the 'totalStaffCostsScaled' field has been set */
    public boolean hasTotalStaffCostsScaled() {
      return fieldSetFlags()[30];
    }
    
    /** Clears the value of the 'totalStaffCostsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearTotalStaffCostsScaled() {
      totalStaffCostsScaled = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /** Gets the value of the 'directorsEmolumentScaled' field */
    public java.lang.CharSequence getDirectorsEmolumentScaled() {
      return directorsEmolumentScaled;
    }
    
    /** Sets the value of the 'directorsEmolumentScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setDirectorsEmolumentScaled(java.lang.CharSequence value) {
      validate(fields()[31], value);
      this.directorsEmolumentScaled = value;
      fieldSetFlags()[31] = true;
      return this; 
    }
    
    /** Checks whether the 'directorsEmolumentScaled' field has been set */
    public boolean hasDirectorsEmolumentScaled() {
      return fieldSetFlags()[31];
    }
    
    /** Clears the value of the 'directorsEmolumentScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearDirectorsEmolumentScaled() {
      directorsEmolumentScaled = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /** Gets the value of the 'externalInterestReceivableScaled' field */
    public java.lang.CharSequence getExternalInterestReceivableScaled() {
      return externalInterestReceivableScaled;
    }
    
    /** Sets the value of the 'externalInterestReceivableScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setExternalInterestReceivableScaled(java.lang.CharSequence value) {
      validate(fields()[32], value);
      this.externalInterestReceivableScaled = value;
      fieldSetFlags()[32] = true;
      return this; 
    }
    
    /** Checks whether the 'externalInterestReceivableScaled' field has been set */
    public boolean hasExternalInterestReceivableScaled() {
      return fieldSetFlags()[32];
    }
    
    /** Clears the value of the 'externalInterestReceivableScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearExternalInterestReceivableScaled() {
      externalInterestReceivableScaled = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /** Gets the value of the 'externalInterestPayableScaled' field */
    public java.lang.CharSequence getExternalInterestPayableScaled() {
      return externalInterestPayableScaled;
    }
    
    /** Sets the value of the 'externalInterestPayableScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setExternalInterestPayableScaled(java.lang.CharSequence value) {
      validate(fields()[33], value);
      this.externalInterestPayableScaled = value;
      fieldSetFlags()[33] = true;
      return this; 
    }
    
    /** Checks whether the 'externalInterestPayableScaled' field has been set */
    public boolean hasExternalInterestPayableScaled() {
      return fieldSetFlags()[33];
    }
    
    /** Clears the value of the 'externalInterestPayableScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearExternalInterestPayableScaled() {
      externalInterestPayableScaled = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /** Gets the value of the 'tradeDebtorsScaled' field */
    public java.lang.CharSequence getTradeDebtorsScaled() {
      return tradeDebtorsScaled;
    }
    
    /** Sets the value of the 'tradeDebtorsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setTradeDebtorsScaled(java.lang.CharSequence value) {
      validate(fields()[34], value);
      this.tradeDebtorsScaled = value;
      fieldSetFlags()[34] = true;
      return this; 
    }
    
    /** Checks whether the 'tradeDebtorsScaled' field has been set */
    public boolean hasTradeDebtorsScaled() {
      return fieldSetFlags()[34];
    }
    
    /** Clears the value of the 'tradeDebtorsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearTradeDebtorsScaled() {
      tradeDebtorsScaled = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /** Gets the value of the 'dueFromGroupCompaniesScaled' field */
    public java.lang.CharSequence getDueFromGroupCompaniesScaled() {
      return dueFromGroupCompaniesScaled;
    }
    
    /** Sets the value of the 'dueFromGroupCompaniesScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setDueFromGroupCompaniesScaled(java.lang.CharSequence value) {
      validate(fields()[35], value);
      this.dueFromGroupCompaniesScaled = value;
      fieldSetFlags()[35] = true;
      return this; 
    }
    
    /** Checks whether the 'dueFromGroupCompaniesScaled' field has been set */
    public boolean hasDueFromGroupCompaniesScaled() {
      return fieldSetFlags()[35];
    }
    
    /** Clears the value of the 'dueFromGroupCompaniesScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearDueFromGroupCompaniesScaled() {
      dueFromGroupCompaniesScaled = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /** Gets the value of the 'tradeCreditorsScaled' field */
    public java.lang.CharSequence getTradeCreditorsScaled() {
      return tradeCreditorsScaled;
    }
    
    /** Sets the value of the 'tradeCreditorsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setTradeCreditorsScaled(java.lang.CharSequence value) {
      validate(fields()[36], value);
      this.tradeCreditorsScaled = value;
      fieldSetFlags()[36] = true;
      return this; 
    }
    
    /** Checks whether the 'tradeCreditorsScaled' field has been set */
    public boolean hasTradeCreditorsScaled() {
      return fieldSetFlags()[36];
    }
    
    /** Clears the value of the 'tradeCreditorsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearTradeCreditorsScaled() {
      tradeCreditorsScaled = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /** Gets the value of the 'dueToGroupCompaniesScaled' field */
    public java.lang.CharSequence getDueToGroupCompaniesScaled() {
      return dueToGroupCompaniesScaled;
    }
    
    /** Sets the value of the 'dueToGroupCompaniesScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setDueToGroupCompaniesScaled(java.lang.CharSequence value) {
      validate(fields()[37], value);
      this.dueToGroupCompaniesScaled = value;
      fieldSetFlags()[37] = true;
      return this; 
    }
    
    /** Checks whether the 'dueToGroupCompaniesScaled' field has been set */
    public boolean hasDueToGroupCompaniesScaled() {
      return fieldSetFlags()[37];
    }
    
    /** Clears the value of the 'dueToGroupCompaniesScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearDueToGroupCompaniesScaled() {
      dueToGroupCompaniesScaled = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /** Gets the value of the 'directorsLoanScaled' field */
    public java.lang.CharSequence getDirectorsLoanScaled() {
      return directorsLoanScaled;
    }
    
    /** Sets the value of the 'directorsLoanScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setDirectorsLoanScaled(java.lang.CharSequence value) {
      validate(fields()[38], value);
      this.directorsLoanScaled = value;
      fieldSetFlags()[38] = true;
      return this; 
    }
    
    /** Checks whether the 'directorsLoanScaled' field has been set */
    public boolean hasDirectorsLoanScaled() {
      return fieldSetFlags()[38];
    }
    
    /** Clears the value of the 'directorsLoanScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearDirectorsLoanScaled() {
      directorsLoanScaled = null;
      fieldSetFlags()[38] = false;
      return this;
    }

    /** Gets the value of the 'bankOverdraftsScaled' field */
    public java.lang.CharSequence getBankOverdraftsScaled() {
      return bankOverdraftsScaled;
    }
    
    /** Sets the value of the 'bankOverdraftsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setBankOverdraftsScaled(java.lang.CharSequence value) {
      validate(fields()[39], value);
      this.bankOverdraftsScaled = value;
      fieldSetFlags()[39] = true;
      return this; 
    }
    
    /** Checks whether the 'bankOverdraftsScaled' field has been set */
    public boolean hasBankOverdraftsScaled() {
      return fieldSetFlags()[39];
    }
    
    /** Clears the value of the 'bankOverdraftsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearBankOverdraftsScaled() {
      bankOverdraftsScaled = null;
      fieldSetFlags()[39] = false;
      return this;
    }

    /** Gets the value of the 'bankLoanShortTermScaled' field */
    public java.lang.CharSequence getBankLoanShortTermScaled() {
      return bankLoanShortTermScaled;
    }
    
    /** Sets the value of the 'bankLoanShortTermScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setBankLoanShortTermScaled(java.lang.CharSequence value) {
      validate(fields()[40], value);
      this.bankLoanShortTermScaled = value;
      fieldSetFlags()[40] = true;
      return this; 
    }
    
    /** Checks whether the 'bankLoanShortTermScaled' field has been set */
    public boolean hasBankLoanShortTermScaled() {
      return fieldSetFlags()[40];
    }
    
    /** Clears the value of the 'bankLoanShortTermScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearBankLoanShortTermScaled() {
      bankLoanShortTermScaled = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    /** Gets the value of the 'bankLoansOverdraftsScaled' field */
    public java.lang.CharSequence getBankLoansOverdraftsScaled() {
      return bankLoansOverdraftsScaled;
    }
    
    /** Sets the value of the 'bankLoansOverdraftsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setBankLoansOverdraftsScaled(java.lang.CharSequence value) {
      validate(fields()[41], value);
      this.bankLoansOverdraftsScaled = value;
      fieldSetFlags()[41] = true;
      return this; 
    }
    
    /** Checks whether the 'bankLoansOverdraftsScaled' field has been set */
    public boolean hasBankLoansOverdraftsScaled() {
      return fieldSetFlags()[41];
    }
    
    /** Clears the value of the 'bankLoansOverdraftsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearBankLoansOverdraftsScaled() {
      bankLoansOverdraftsScaled = null;
      fieldSetFlags()[41] = false;
      return this;
    }

    /** Gets the value of the 'financeAndHirePurchaseScaled' field */
    public java.lang.CharSequence getFinanceAndHirePurchaseScaled() {
      return financeAndHirePurchaseScaled;
    }
    
    /** Sets the value of the 'financeAndHirePurchaseScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setFinanceAndHirePurchaseScaled(java.lang.CharSequence value) {
      validate(fields()[42], value);
      this.financeAndHirePurchaseScaled = value;
      fieldSetFlags()[42] = true;
      return this; 
    }
    
    /** Checks whether the 'financeAndHirePurchaseScaled' field has been set */
    public boolean hasFinanceAndHirePurchaseScaled() {
      return fieldSetFlags()[42];
    }
    
    /** Clears the value of the 'financeAndHirePurchaseScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearFinanceAndHirePurchaseScaled() {
      financeAndHirePurchaseScaled = null;
      fieldSetFlags()[42] = false;
      return this;
    }

    /** Gets the value of the 'hirePurchaseScaled' field */
    public java.lang.CharSequence getHirePurchaseScaled() {
      return hirePurchaseScaled;
    }
    
    /** Sets the value of the 'hirePurchaseScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setHirePurchaseScaled(java.lang.CharSequence value) {
      validate(fields()[43], value);
      this.hirePurchaseScaled = value;
      fieldSetFlags()[43] = true;
      return this; 
    }
    
    /** Checks whether the 'hirePurchaseScaled' field has been set */
    public boolean hasHirePurchaseScaled() {
      return fieldSetFlags()[43];
    }
    
    /** Clears the value of the 'hirePurchaseScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearHirePurchaseScaled() {
      hirePurchaseScaled = null;
      fieldSetFlags()[43] = false;
      return this;
    }

    /** Gets the value of the 'financeLeaseScaled' field */
    public java.lang.CharSequence getFinanceLeaseScaled() {
      return financeLeaseScaled;
    }
    
    /** Sets the value of the 'financeLeaseScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setFinanceLeaseScaled(java.lang.CharSequence value) {
      validate(fields()[44], value);
      this.financeLeaseScaled = value;
      fieldSetFlags()[44] = true;
      return this; 
    }
    
    /** Checks whether the 'financeLeaseScaled' field has been set */
    public boolean hasFinanceLeaseScaled() {
      return fieldSetFlags()[44];
    }
    
    /** Clears the value of the 'financeLeaseScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearFinanceLeaseScaled() {
      financeLeaseScaled = null;
      fieldSetFlags()[44] = false;
      return this;
    }

    /** Gets the value of the 'otherShortTermBorrowingsScaled' field */
    public java.lang.CharSequence getOtherShortTermBorrowingsScaled() {
      return otherShortTermBorrowingsScaled;
    }
    
    /** Sets the value of the 'otherShortTermBorrowingsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setOtherShortTermBorrowingsScaled(java.lang.CharSequence value) {
      validate(fields()[45], value);
      this.otherShortTermBorrowingsScaled = value;
      fieldSetFlags()[45] = true;
      return this; 
    }
    
    /** Checks whether the 'otherShortTermBorrowingsScaled' field has been set */
    public boolean hasOtherShortTermBorrowingsScaled() {
      return fieldSetFlags()[45];
    }
    
    /** Clears the value of the 'otherShortTermBorrowingsScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearOtherShortTermBorrowingsScaled() {
      otherShortTermBorrowingsScaled = null;
      fieldSetFlags()[45] = false;
      return this;
    }

    /** Gets the value of the 'bankLoansScaled' field */
    public java.lang.CharSequence getBankLoansScaled() {
      return bankLoansScaled;
    }
    
    /** Sets the value of the 'bankLoansScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setBankLoansScaled(java.lang.CharSequence value) {
      validate(fields()[46], value);
      this.bankLoansScaled = value;
      fieldSetFlags()[46] = true;
      return this; 
    }
    
    /** Checks whether the 'bankLoansScaled' field has been set */
    public boolean hasBankLoansScaled() {
      return fieldSetFlags()[46];
    }
    
    /** Clears the value of the 'bankLoansScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearBankLoansScaled() {
      bankLoansScaled = null;
      fieldSetFlags()[46] = false;
      return this;
    }

    /** Gets the value of the 'financeLeaseAndHirePurchaseScaled' field */
    public java.lang.CharSequence getFinanceLeaseAndHirePurchaseScaled() {
      return financeLeaseAndHirePurchaseScaled;
    }
    
    /** Sets the value of the 'financeLeaseAndHirePurchaseScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setFinanceLeaseAndHirePurchaseScaled(java.lang.CharSequence value) {
      validate(fields()[47], value);
      this.financeLeaseAndHirePurchaseScaled = value;
      fieldSetFlags()[47] = true;
      return this; 
    }
    
    /** Checks whether the 'financeLeaseAndHirePurchaseScaled' field has been set */
    public boolean hasFinanceLeaseAndHirePurchaseScaled() {
      return fieldSetFlags()[47];
    }
    
    /** Clears the value of the 'financeLeaseAndHirePurchaseScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearFinanceLeaseAndHirePurchaseScaled() {
      financeLeaseAndHirePurchaseScaled = null;
      fieldSetFlags()[47] = false;
      return this;
    }

    /** Gets the value of the 'hirePurchaseLoanScaled' field */
    public java.lang.CharSequence getHirePurchaseLoanScaled() {
      return hirePurchaseLoanScaled;
    }
    
    /** Sets the value of the 'hirePurchaseLoanScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setHirePurchaseLoanScaled(java.lang.CharSequence value) {
      validate(fields()[48], value);
      this.hirePurchaseLoanScaled = value;
      fieldSetFlags()[48] = true;
      return this; 
    }
    
    /** Checks whether the 'hirePurchaseLoanScaled' field has been set */
    public boolean hasHirePurchaseLoanScaled() {
      return fieldSetFlags()[48];
    }
    
    /** Clears the value of the 'hirePurchaseLoanScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearHirePurchaseLoanScaled() {
      hirePurchaseLoanScaled = null;
      fieldSetFlags()[48] = false;
      return this;
    }

    /** Gets the value of the 'financeLeaseObligationScaled' field */
    public java.lang.CharSequence getFinanceLeaseObligationScaled() {
      return financeLeaseObligationScaled;
    }
    
    /** Sets the value of the 'financeLeaseObligationScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setFinanceLeaseObligationScaled(java.lang.CharSequence value) {
      validate(fields()[49], value);
      this.financeLeaseObligationScaled = value;
      fieldSetFlags()[49] = true;
      return this; 
    }
    
    /** Checks whether the 'financeLeaseObligationScaled' field has been set */
    public boolean hasFinanceLeaseObligationScaled() {
      return fieldSetFlags()[49];
    }
    
    /** Clears the value of the 'financeLeaseObligationScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearFinanceLeaseObligationScaled() {
      financeLeaseObligationScaled = null;
      fieldSetFlags()[49] = false;
      return this;
    }

    /** Gets the value of the 'otherLongTermBorrowingScaled' field */
    public java.lang.CharSequence getOtherLongTermBorrowingScaled() {
      return otherLongTermBorrowingScaled;
    }
    
    /** Sets the value of the 'otherLongTermBorrowingScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setOtherLongTermBorrowingScaled(java.lang.CharSequence value) {
      validate(fields()[50], value);
      this.otherLongTermBorrowingScaled = value;
      fieldSetFlags()[50] = true;
      return this; 
    }
    
    /** Checks whether the 'otherLongTermBorrowingScaled' field has been set */
    public boolean hasOtherLongTermBorrowingScaled() {
      return fieldSetFlags()[50];
    }
    
    /** Clears the value of the 'otherLongTermBorrowingScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearOtherLongTermBorrowingScaled() {
      otherLongTermBorrowingScaled = null;
      fieldSetFlags()[50] = false;
      return this;
    }

    /** Gets the value of the 'owedToGroupCompaniesScaled' field */
    public java.lang.CharSequence getOwedToGroupCompaniesScaled() {
      return owedToGroupCompaniesScaled;
    }
    
    /** Sets the value of the 'owedToGroupCompaniesScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setOwedToGroupCompaniesScaled(java.lang.CharSequence value) {
      validate(fields()[51], value);
      this.owedToGroupCompaniesScaled = value;
      fieldSetFlags()[51] = true;
      return this; 
    }
    
    /** Checks whether the 'owedToGroupCompaniesScaled' field has been set */
    public boolean hasOwedToGroupCompaniesScaled() {
      return fieldSetFlags()[51];
    }
    
    /** Clears the value of the 'owedToGroupCompaniesScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearOwedToGroupCompaniesScaled() {
      owedToGroupCompaniesScaled = null;
      fieldSetFlags()[51] = false;
      return this;
    }

    /** Gets the value of the 'longTermDirectorsLoanScaled' field */
    public java.lang.CharSequence getLongTermDirectorsLoanScaled() {
      return longTermDirectorsLoanScaled;
    }
    
    /** Sets the value of the 'longTermDirectorsLoanScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setLongTermDirectorsLoanScaled(java.lang.CharSequence value) {
      validate(fields()[52], value);
      this.longTermDirectorsLoanScaled = value;
      fieldSetFlags()[52] = true;
      return this; 
    }
    
    /** Checks whether the 'longTermDirectorsLoanScaled' field has been set */
    public boolean hasLongTermDirectorsLoanScaled() {
      return fieldSetFlags()[52];
    }
    
    /** Clears the value of the 'longTermDirectorsLoanScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearLongTermDirectorsLoanScaled() {
      longTermDirectorsLoanScaled = null;
      fieldSetFlags()[52] = false;
      return this;
    }

    /** Gets the value of the 'otherLongTermLiabilitiesScaled' field */
    public java.lang.CharSequence getOtherLongTermLiabilitiesScaled() {
      return otherLongTermLiabilitiesScaled;
    }
    
    /** Sets the value of the 'otherLongTermLiabilitiesScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setOtherLongTermLiabilitiesScaled(java.lang.CharSequence value) {
      validate(fields()[53], value);
      this.otherLongTermLiabilitiesScaled = value;
      fieldSetFlags()[53] = true;
      return this; 
    }
    
    /** Checks whether the 'otherLongTermLiabilitiesScaled' field has been set */
    public boolean hasOtherLongTermLiabilitiesScaled() {
      return fieldSetFlags()[53];
    }
    
    /** Clears the value of the 'otherLongTermLiabilitiesScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearOtherLongTermLiabilitiesScaled() {
      otherLongTermLiabilitiesScaled = null;
      fieldSetFlags()[53] = false;
      return this;
    }

    /** Gets the value of the 'shortTermUnspecifiedSecuredScaled' field */
    public java.lang.CharSequence getShortTermUnspecifiedSecuredScaled() {
      return shortTermUnspecifiedSecuredScaled;
    }
    
    /** Sets the value of the 'shortTermUnspecifiedSecuredScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setShortTermUnspecifiedSecuredScaled(java.lang.CharSequence value) {
      validate(fields()[54], value);
      this.shortTermUnspecifiedSecuredScaled = value;
      fieldSetFlags()[54] = true;
      return this; 
    }
    
    /** Checks whether the 'shortTermUnspecifiedSecuredScaled' field has been set */
    public boolean hasShortTermUnspecifiedSecuredScaled() {
      return fieldSetFlags()[54];
    }
    
    /** Clears the value of the 'shortTermUnspecifiedSecuredScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearShortTermUnspecifiedSecuredScaled() {
      shortTermUnspecifiedSecuredScaled = null;
      fieldSetFlags()[54] = false;
      return this;
    }

    /** Gets the value of the 'longTermUnspecifiedSecuredScaled' field */
    public java.lang.CharSequence getLongTermUnspecifiedSecuredScaled() {
      return longTermUnspecifiedSecuredScaled;
    }
    
    /** Sets the value of the 'longTermUnspecifiedSecuredScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setLongTermUnspecifiedSecuredScaled(java.lang.CharSequence value) {
      validate(fields()[55], value);
      this.longTermUnspecifiedSecuredScaled = value;
      fieldSetFlags()[55] = true;
      return this; 
    }
    
    /** Checks whether the 'longTermUnspecifiedSecuredScaled' field has been set */
    public boolean hasLongTermUnspecifiedSecuredScaled() {
      return fieldSetFlags()[55];
    }
    
    /** Clears the value of the 'longTermUnspecifiedSecuredScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearLongTermUnspecifiedSecuredScaled() {
      longTermUnspecifiedSecuredScaled = null;
      fieldSetFlags()[55] = false;
      return this;
    }

    /** Gets the value of the 'unknownPeriodSecuredScaled' field */
    public java.lang.CharSequence getUnknownPeriodSecuredScaled() {
      return unknownPeriodSecuredScaled;
    }
    
    /** Sets the value of the 'unknownPeriodSecuredScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setUnknownPeriodSecuredScaled(java.lang.CharSequence value) {
      validate(fields()[56], value);
      this.unknownPeriodSecuredScaled = value;
      fieldSetFlags()[56] = true;
      return this; 
    }
    
    /** Checks whether the 'unknownPeriodSecuredScaled' field has been set */
    public boolean hasUnknownPeriodSecuredScaled() {
      return fieldSetFlags()[56];
    }
    
    /** Clears the value of the 'unknownPeriodSecuredScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearUnknownPeriodSecuredScaled() {
      unknownPeriodSecuredScaled = null;
      fieldSetFlags()[56] = false;
      return this;
    }

    /** Gets the value of the 'unspecifiedBankLoansScaled' field */
    public java.lang.CharSequence getUnspecifiedBankLoansScaled() {
      return unspecifiedBankLoansScaled;
    }
    
    /** Sets the value of the 'unspecifiedBankLoansScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setUnspecifiedBankLoansScaled(java.lang.CharSequence value) {
      validate(fields()[57], value);
      this.unspecifiedBankLoansScaled = value;
      fieldSetFlags()[57] = true;
      return this; 
    }
    
    /** Checks whether the 'unspecifiedBankLoansScaled' field has been set */
    public boolean hasUnspecifiedBankLoansScaled() {
      return fieldSetFlags()[57];
    }
    
    /** Clears the value of the 'unspecifiedBankLoansScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearUnspecifiedBankLoansScaled() {
      unspecifiedBankLoansScaled = null;
      fieldSetFlags()[57] = false;
      return this;
    }

    /** Gets the value of the 'depreciationScaled' field */
    public java.lang.CharSequence getDepreciationScaled() {
      return depreciationScaled;
    }
    
    /** Sets the value of the 'depreciationScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setDepreciationScaled(java.lang.CharSequence value) {
      validate(fields()[58], value);
      this.depreciationScaled = value;
      fieldSetFlags()[58] = true;
      return this; 
    }
    
    /** Checks whether the 'depreciationScaled' field has been set */
    public boolean hasDepreciationScaled() {
      return fieldSetFlags()[58];
    }
    
    /** Clears the value of the 'depreciationScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearDepreciationScaled() {
      depreciationScaled = null;
      fieldSetFlags()[58] = false;
      return this;
    }

    /** Gets the value of the 'operatingProfitScaled' field */
    public java.lang.CharSequence getOperatingProfitScaled() {
      return operatingProfitScaled;
    }
    
    /** Sets the value of the 'operatingProfitScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setOperatingProfitScaled(java.lang.CharSequence value) {
      validate(fields()[59], value);
      this.operatingProfitScaled = value;
      fieldSetFlags()[59] = true;
      return this; 
    }
    
    /** Checks whether the 'operatingProfitScaled' field has been set */
    public boolean hasOperatingProfitScaled() {
      return fieldSetFlags()[59];
    }
    
    /** Clears the value of the 'operatingProfitScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearOperatingProfitScaled() {
      operatingProfitScaled = null;
      fieldSetFlags()[59] = false;
      return this;
    }

    /** Gets the value of the 'netCashFlowFromRoiAndServicingOfFinanceScaled' field */
    public java.lang.CharSequence getNetCashFlowFromRoiAndServicingOfFinanceScaled() {
      return netCashFlowFromRoiAndServicingOfFinanceScaled;
    }
    
    /** Sets the value of the 'netCashFlowFromRoiAndServicingOfFinanceScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setNetCashFlowFromRoiAndServicingOfFinanceScaled(java.lang.CharSequence value) {
      validate(fields()[60], value);
      this.netCashFlowFromRoiAndServicingOfFinanceScaled = value;
      fieldSetFlags()[60] = true;
      return this; 
    }
    
    /** Checks whether the 'netCashFlowFromRoiAndServicingOfFinanceScaled' field has been set */
    public boolean hasNetCashFlowFromRoiAndServicingOfFinanceScaled() {
      return fieldSetFlags()[60];
    }
    
    /** Clears the value of the 'netCashFlowFromRoiAndServicingOfFinanceScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearNetCashFlowFromRoiAndServicingOfFinanceScaled() {
      netCashFlowFromRoiAndServicingOfFinanceScaled = null;
      fieldSetFlags()[60] = false;
      return this;
    }

    /** Gets the value of the 'netCashFlowBeforeFinancingScaled' field */
    public java.lang.CharSequence getNetCashFlowBeforeFinancingScaled() {
      return netCashFlowBeforeFinancingScaled;
    }
    
    /** Sets the value of the 'netCashFlowBeforeFinancingScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setNetCashFlowBeforeFinancingScaled(java.lang.CharSequence value) {
      validate(fields()[61], value);
      this.netCashFlowBeforeFinancingScaled = value;
      fieldSetFlags()[61] = true;
      return this; 
    }
    
    /** Checks whether the 'netCashFlowBeforeFinancingScaled' field has been set */
    public boolean hasNetCashFlowBeforeFinancingScaled() {
      return fieldSetFlags()[61];
    }
    
    /** Clears the value of the 'netCashFlowBeforeFinancingScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearNetCashFlowBeforeFinancingScaled() {
      netCashFlowBeforeFinancingScaled = null;
      fieldSetFlags()[61] = false;
      return this;
    }

    /** Gets the value of the 'netCashFlowFromFinancingScaled' field */
    public java.lang.CharSequence getNetCashFlowFromFinancingScaled() {
      return netCashFlowFromFinancingScaled;
    }
    
    /** Sets the value of the 'netCashFlowFromFinancingScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setNetCashFlowFromFinancingScaled(java.lang.CharSequence value) {
      validate(fields()[62], value);
      this.netCashFlowFromFinancingScaled = value;
      fieldSetFlags()[62] = true;
      return this; 
    }
    
    /** Checks whether the 'netCashFlowFromFinancingScaled' field has been set */
    public boolean hasNetCashFlowFromFinancingScaled() {
      return fieldSetFlags()[62];
    }
    
    /** Clears the value of the 'netCashFlowFromFinancingScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearNetCashFlowFromFinancingScaled() {
      netCashFlowFromFinancingScaled = null;
      fieldSetFlags()[62] = false;
      return this;
    }

    /** Gets the value of the 'contingentLiabilityScaled' field */
    public java.lang.CharSequence getContingentLiabilityScaled() {
      return contingentLiabilityScaled;
    }
    
    /** Sets the value of the 'contingentLiabilityScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setContingentLiabilityScaled(java.lang.CharSequence value) {
      validate(fields()[63], value);
      this.contingentLiabilityScaled = value;
      fieldSetFlags()[63] = true;
      return this; 
    }
    
    /** Checks whether the 'contingentLiabilityScaled' field has been set */
    public boolean hasContingentLiabilityScaled() {
      return fieldSetFlags()[63];
    }
    
    /** Clears the value of the 'contingentLiabilityScaled' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearContingentLiabilityScaled() {
      contingentLiabilityScaled = null;
      fieldSetFlags()[63] = false;
      return this;
    }

    /** Gets the value of the 'processingDate' field */
    public java.lang.CharSequence getProcessingDate() {
      return processingDate;
    }
    
    /** Sets the value of the 'processingDate' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setProcessingDate(java.lang.CharSequence value) {
      validate(fields()[64], value);
      this.processingDate = value;
      fieldSetFlags()[64] = true;
      return this; 
    }
    
    /** Checks whether the 'processingDate' field has been set */
    public boolean hasProcessingDate() {
      return fieldSetFlags()[64];
    }
    
    /** Clears the value of the 'processingDate' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearProcessingDate() {
      processingDate = null;
      fieldSetFlags()[64] = false;
      return this;
    }

    /** Gets the value of the 'currency' field */
    public java.lang.CharSequence getCurrency() {
      return currency;
    }
    
    /** Sets the value of the 'currency' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setCurrency(java.lang.CharSequence value) {
      validate(fields()[65], value);
      this.currency = value;
      fieldSetFlags()[65] = true;
      return this; 
    }
    
    /** Checks whether the 'currency' field has been set */
    public boolean hasCurrency() {
      return fieldSetFlags()[65];
    }
    
    /** Clears the value of the 'currency' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearCurrency() {
      currency = null;
      fieldSetFlags()[65] = false;
      return this;
    }

    /** Gets the value of the 'UHCAlphaName' field */
    public java.lang.CharSequence getUHCAlphaName() {
      return UHCAlphaName;
    }
    
    /** Sets the value of the 'UHCAlphaName' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setUHCAlphaName(java.lang.CharSequence value) {
      validate(fields()[66], value);
      this.UHCAlphaName = value;
      fieldSetFlags()[66] = true;
      return this; 
    }
    
    /** Checks whether the 'UHCAlphaName' field has been set */
    public boolean hasUHCAlphaName() {
      return fieldSetFlags()[66];
    }
    
    /** Clears the value of the 'UHCAlphaName' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearUHCAlphaName() {
      UHCAlphaName = null;
      fieldSetFlags()[66] = false;
      return this;
    }

    /** Gets the value of the 'entity' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.entity.entityFields getEntity() {
      return entity;
    }
    
    /** Sets the value of the 'entity' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder setEntity(com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.entity.entityFields value) {
      validate(fields()[67], value);
      this.entity = value;
      fieldSetFlags()[67] = true;
      return this; 
    }
    
    /** Checks whether the 'entity' field has been set */
    public boolean hasEntity() {
      return fieldSetFlags()[67];
    }
    
    /** Clears the value of the 'entity' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.StandardisedFields.Builder clearEntity() {
      entity = null;
      fieldSetFlags()[67] = false;
      return this;
    }

    @Override
    public StandardisedFields build() {
      try {
        StandardisedFields record = new StandardisedFields();
        record.companyRegisteredNumber = fieldSetFlags()[0] ? this.companyRegisteredNumber : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.formatOfSupply = fieldSetFlags()[1] ? this.formatOfSupply : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.migrationFlag = fieldSetFlags()[2] ? this.migrationFlag : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.turnoverScaled = fieldSetFlags()[3] ? this.turnoverScaled : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.grossProfitScaled = fieldSetFlags()[4] ? this.grossProfitScaled : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.exceptionalIncomeScaled = fieldSetFlags()[5] ? this.exceptionalIncomeScaled : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.exceptionalChargesScaled = fieldSetFlags()[6] ? this.exceptionalChargesScaled : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.preTaxProfitScaled = fieldSetFlags()[7] ? this.preTaxProfitScaled : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.postTaxProfitScaled = fieldSetFlags()[8] ? this.postTaxProfitScaled : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.dividendsScaled = fieldSetFlags()[9] ? this.dividendsScaled : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.tangibleFixedAssetsScaled = fieldSetFlags()[10] ? this.tangibleFixedAssetsScaled : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.intangibleFixedAssetsScaled = fieldSetFlags()[11] ? this.intangibleFixedAssetsScaled : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.fixedAssetInvestmentScaled = fieldSetFlags()[12] ? this.fixedAssetInvestmentScaled : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.totalStockScaled = fieldSetFlags()[13] ? this.totalStockScaled : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.totalCashScaled = fieldSetFlags()[14] ? this.totalCashScaled : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.totalCurrentAssetsScaled = fieldSetFlags()[15] ? this.totalCurrentAssetsScaled : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.currentLiabilitiesScaled = fieldSetFlags()[16] ? this.currentLiabilitiesScaled : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.workingCapitalScaled = fieldSetFlags()[17] ? this.workingCapitalScaled : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.calledUpShareCapitalScaled = fieldSetFlags()[18] ? this.calledUpShareCapitalScaled : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.profitAndLossAccountScaled = fieldSetFlags()[19] ? this.profitAndLossAccountScaled : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.sharePremiumAccountScaled = fieldSetFlags()[20] ? this.sharePremiumAccountScaled : (java.lang.CharSequence) defaultValue(fields()[20]);
        record.revaluationReserveScaled = fieldSetFlags()[21] ? this.revaluationReserveScaled : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.capitalReserveScaled = fieldSetFlags()[22] ? this.capitalReserveScaled : (java.lang.CharSequence) defaultValue(fields()[22]);
        record.capitalRedemptionReserveScaled = fieldSetFlags()[23] ? this.capitalRedemptionReserveScaled : (java.lang.CharSequence) defaultValue(fields()[23]);
        record.otherReservesScaled = fieldSetFlags()[24] ? this.otherReservesScaled : (java.lang.CharSequence) defaultValue(fields()[24]);
        record.goodwillReservesScaled = fieldSetFlags()[25] ? this.goodwillReservesScaled : (java.lang.CharSequence) defaultValue(fields()[25]);
        record.netWorthScaled = fieldSetFlags()[26] ? this.netWorthScaled : (java.lang.CharSequence) defaultValue(fields()[26]);
        record.netCashInflowScaled = fieldSetFlags()[27] ? this.netCashInflowScaled : (java.lang.CharSequence) defaultValue(fields()[27]);
        record.increaseInCashScaled = fieldSetFlags()[28] ? this.increaseInCashScaled : (java.lang.CharSequence) defaultValue(fields()[28]);
        record.exportSalesScaled = fieldSetFlags()[29] ? this.exportSalesScaled : (java.lang.CharSequence) defaultValue(fields()[29]);
        record.totalStaffCostsScaled = fieldSetFlags()[30] ? this.totalStaffCostsScaled : (java.lang.CharSequence) defaultValue(fields()[30]);
        record.directorsEmolumentScaled = fieldSetFlags()[31] ? this.directorsEmolumentScaled : (java.lang.CharSequence) defaultValue(fields()[31]);
        record.externalInterestReceivableScaled = fieldSetFlags()[32] ? this.externalInterestReceivableScaled : (java.lang.CharSequence) defaultValue(fields()[32]);
        record.externalInterestPayableScaled = fieldSetFlags()[33] ? this.externalInterestPayableScaled : (java.lang.CharSequence) defaultValue(fields()[33]);
        record.tradeDebtorsScaled = fieldSetFlags()[34] ? this.tradeDebtorsScaled : (java.lang.CharSequence) defaultValue(fields()[34]);
        record.dueFromGroupCompaniesScaled = fieldSetFlags()[35] ? this.dueFromGroupCompaniesScaled : (java.lang.CharSequence) defaultValue(fields()[35]);
        record.tradeCreditorsScaled = fieldSetFlags()[36] ? this.tradeCreditorsScaled : (java.lang.CharSequence) defaultValue(fields()[36]);
        record.dueToGroupCompaniesScaled = fieldSetFlags()[37] ? this.dueToGroupCompaniesScaled : (java.lang.CharSequence) defaultValue(fields()[37]);
        record.directorsLoanScaled = fieldSetFlags()[38] ? this.directorsLoanScaled : (java.lang.CharSequence) defaultValue(fields()[38]);
        record.bankOverdraftsScaled = fieldSetFlags()[39] ? this.bankOverdraftsScaled : (java.lang.CharSequence) defaultValue(fields()[39]);
        record.bankLoanShortTermScaled = fieldSetFlags()[40] ? this.bankLoanShortTermScaled : (java.lang.CharSequence) defaultValue(fields()[40]);
        record.bankLoansOverdraftsScaled = fieldSetFlags()[41] ? this.bankLoansOverdraftsScaled : (java.lang.CharSequence) defaultValue(fields()[41]);
        record.financeAndHirePurchaseScaled = fieldSetFlags()[42] ? this.financeAndHirePurchaseScaled : (java.lang.CharSequence) defaultValue(fields()[42]);
        record.hirePurchaseScaled = fieldSetFlags()[43] ? this.hirePurchaseScaled : (java.lang.CharSequence) defaultValue(fields()[43]);
        record.financeLeaseScaled = fieldSetFlags()[44] ? this.financeLeaseScaled : (java.lang.CharSequence) defaultValue(fields()[44]);
        record.otherShortTermBorrowingsScaled = fieldSetFlags()[45] ? this.otherShortTermBorrowingsScaled : (java.lang.CharSequence) defaultValue(fields()[45]);
        record.bankLoansScaled = fieldSetFlags()[46] ? this.bankLoansScaled : (java.lang.CharSequence) defaultValue(fields()[46]);
        record.financeLeaseAndHirePurchaseScaled = fieldSetFlags()[47] ? this.financeLeaseAndHirePurchaseScaled : (java.lang.CharSequence) defaultValue(fields()[47]);
        record.hirePurchaseLoanScaled = fieldSetFlags()[48] ? this.hirePurchaseLoanScaled : (java.lang.CharSequence) defaultValue(fields()[48]);
        record.financeLeaseObligationScaled = fieldSetFlags()[49] ? this.financeLeaseObligationScaled : (java.lang.CharSequence) defaultValue(fields()[49]);
        record.otherLongTermBorrowingScaled = fieldSetFlags()[50] ? this.otherLongTermBorrowingScaled : (java.lang.CharSequence) defaultValue(fields()[50]);
        record.owedToGroupCompaniesScaled = fieldSetFlags()[51] ? this.owedToGroupCompaniesScaled : (java.lang.CharSequence) defaultValue(fields()[51]);
        record.longTermDirectorsLoanScaled = fieldSetFlags()[52] ? this.longTermDirectorsLoanScaled : (java.lang.CharSequence) defaultValue(fields()[52]);
        record.otherLongTermLiabilitiesScaled = fieldSetFlags()[53] ? this.otherLongTermLiabilitiesScaled : (java.lang.CharSequence) defaultValue(fields()[53]);
        record.shortTermUnspecifiedSecuredScaled = fieldSetFlags()[54] ? this.shortTermUnspecifiedSecuredScaled : (java.lang.CharSequence) defaultValue(fields()[54]);
        record.longTermUnspecifiedSecuredScaled = fieldSetFlags()[55] ? this.longTermUnspecifiedSecuredScaled : (java.lang.CharSequence) defaultValue(fields()[55]);
        record.unknownPeriodSecuredScaled = fieldSetFlags()[56] ? this.unknownPeriodSecuredScaled : (java.lang.CharSequence) defaultValue(fields()[56]);
        record.unspecifiedBankLoansScaled = fieldSetFlags()[57] ? this.unspecifiedBankLoansScaled : (java.lang.CharSequence) defaultValue(fields()[57]);
        record.depreciationScaled = fieldSetFlags()[58] ? this.depreciationScaled : (java.lang.CharSequence) defaultValue(fields()[58]);
        record.operatingProfitScaled = fieldSetFlags()[59] ? this.operatingProfitScaled : (java.lang.CharSequence) defaultValue(fields()[59]);
        record.netCashFlowFromRoiAndServicingOfFinanceScaled = fieldSetFlags()[60] ? this.netCashFlowFromRoiAndServicingOfFinanceScaled : (java.lang.CharSequence) defaultValue(fields()[60]);
        record.netCashFlowBeforeFinancingScaled = fieldSetFlags()[61] ? this.netCashFlowBeforeFinancingScaled : (java.lang.CharSequence) defaultValue(fields()[61]);
        record.netCashFlowFromFinancingScaled = fieldSetFlags()[62] ? this.netCashFlowFromFinancingScaled : (java.lang.CharSequence) defaultValue(fields()[62]);
        record.contingentLiabilityScaled = fieldSetFlags()[63] ? this.contingentLiabilityScaled : (java.lang.CharSequence) defaultValue(fields()[63]);
        record.processingDate = fieldSetFlags()[64] ? this.processingDate : (java.lang.CharSequence) defaultValue(fields()[64]);
        record.currency = fieldSetFlags()[65] ? this.currency : (java.lang.CharSequence) defaultValue(fields()[65]);
        record.UHCAlphaName = fieldSetFlags()[66] ? this.UHCAlphaName : (java.lang.CharSequence) defaultValue(fields()[66]);
        record.entity = fieldSetFlags()[67] ? this.entity : (com.equifax.fabric.uk.ingestion.companyfinancialstatement.standardisedfields.entity.entityFields) defaultValue(fields()[67]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
