/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Resolutions extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Resolutions\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions\",\"fields\":[{\"name\":\"category\",\"type\":[\"null\",\"string\"],\"doc\":\"The category of the resolution filed.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"A description of the associated filing. For enumeration descriptions see description section in the enumeration mappings file.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"document_id\",\"type\":[\"null\",\"string\"],\"doc\":\"The document id of the resolution.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"receive_date\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the resolution was processed.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"subcategory\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"The sub-category of the document filed.\",\"default\":[],\"dataClassification\":\"3\"},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"doc\":\"The type of the associated filing.\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The category of the resolution filed. */
  @Deprecated public java.lang.CharSequence category;
  /** A description of the associated filing. For enumeration descriptions see description section in the enumeration mappings file. */
  @Deprecated public java.lang.CharSequence description;
  /** The document id of the resolution. */
  @Deprecated public java.lang.CharSequence document_id;
  /** The date the resolution was processed. */
  @Deprecated public java.lang.CharSequence receive_date;
  /** The sub-category of the document filed. */
  @Deprecated public java.util.List<java.lang.CharSequence> subcategory;
  /** The type of the associated filing. */
  @Deprecated public java.lang.CharSequence type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Resolutions() {}

  /**
   * All-args constructor.
   */
  public Resolutions(java.lang.CharSequence category, java.lang.CharSequence description, java.lang.CharSequence document_id, java.lang.CharSequence receive_date, java.util.List<java.lang.CharSequence> subcategory, java.lang.CharSequence type) {
    this.category = category;
    this.description = description;
    this.document_id = document_id;
    this.receive_date = receive_date;
    this.subcategory = subcategory;
    this.type = type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return category;
    case 1: return description;
    case 2: return document_id;
    case 3: return receive_date;
    case 4: return subcategory;
    case 5: return type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: category = (java.lang.CharSequence)value$; break;
    case 1: description = (java.lang.CharSequence)value$; break;
    case 2: document_id = (java.lang.CharSequence)value$; break;
    case 3: receive_date = (java.lang.CharSequence)value$; break;
    case 4: subcategory = (java.util.List<java.lang.CharSequence>)value$; break;
    case 5: type = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'category' field.
   * The category of the resolution filed.   */
  public java.lang.CharSequence getCategory() {
    return category;
  }

  /**
   * Sets the value of the 'category' field.
   * The category of the resolution filed.   * @param value the value to set.
   */
  public void setCategory(java.lang.CharSequence value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'description' field.
   * A description of the associated filing. For enumeration descriptions see description section in the enumeration mappings file.   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * A description of the associated filing. For enumeration descriptions see description section in the enumeration mappings file.   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'document_id' field.
   * The document id of the resolution.   */
  public java.lang.CharSequence getDocumentId() {
    return document_id;
  }

  /**
   * Sets the value of the 'document_id' field.
   * The document id of the resolution.   * @param value the value to set.
   */
  public void setDocumentId(java.lang.CharSequence value) {
    this.document_id = value;
  }

  /**
   * Gets the value of the 'receive_date' field.
   * The date the resolution was processed.   */
  public java.lang.CharSequence getReceiveDate() {
    return receive_date;
  }

  /**
   * Sets the value of the 'receive_date' field.
   * The date the resolution was processed.   * @param value the value to set.
   */
  public void setReceiveDate(java.lang.CharSequence value) {
    this.receive_date = value;
  }

  /**
   * Gets the value of the 'subcategory' field.
   * The sub-category of the document filed.   */
  public java.util.List<java.lang.CharSequence> getSubcategory() {
    return subcategory;
  }

  /**
   * Sets the value of the 'subcategory' field.
   * The sub-category of the document filed.   * @param value the value to set.
   */
  public void setSubcategory(java.util.List<java.lang.CharSequence> value) {
    this.subcategory = value;
  }

  /**
   * Gets the value of the 'type' field.
   * The type of the associated filing.   */
  public java.lang.CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * The type of the associated filing.   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /** Creates a new Resolutions RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder();
  }
  
  /** Creates a new Resolutions RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder other) {
    return new com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder(other);
  }
  
  /** Creates a new Resolutions RecordBuilder by copying an existing Resolutions instance */
  public static com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions other) {
    return new com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder(other);
  }
  
  /**
   * RecordBuilder for Resolutions instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Resolutions>
    implements org.apache.avro.data.RecordBuilder<Resolutions> {

    private java.lang.CharSequence category;
    private java.lang.CharSequence description;
    private java.lang.CharSequence document_id;
    private java.lang.CharSequence receive_date;
    private java.util.List<java.lang.CharSequence> subcategory;
    private java.lang.CharSequence type;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.category)) {
        this.category = data().deepCopy(fields()[0].schema(), other.category);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.document_id)) {
        this.document_id = data().deepCopy(fields()[2].schema(), other.document_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.receive_date)) {
        this.receive_date = data().deepCopy(fields()[3].schema(), other.receive_date);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.subcategory)) {
        this.subcategory = data().deepCopy(fields()[4].schema(), other.subcategory);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.type)) {
        this.type = data().deepCopy(fields()[5].schema(), other.type);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Resolutions instance */
    private Builder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions other) {
            super(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.SCHEMA$);
      if (isValidValue(fields()[0], other.category)) {
        this.category = data().deepCopy(fields()[0].schema(), other.category);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.document_id)) {
        this.document_id = data().deepCopy(fields()[2].schema(), other.document_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.receive_date)) {
        this.receive_date = data().deepCopy(fields()[3].schema(), other.receive_date);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.subcategory)) {
        this.subcategory = data().deepCopy(fields()[4].schema(), other.subcategory);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.type)) {
        this.type = data().deepCopy(fields()[5].schema(), other.type);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'category' field */
    public java.lang.CharSequence getCategory() {
      return category;
    }
    
    /** Sets the value of the 'category' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder setCategory(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.category = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'category' field has been set */
    public boolean hasCategory() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'category' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder clearCategory() {
      category = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.CharSequence getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.description = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'description' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder clearDescription() {
      description = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'document_id' field */
    public java.lang.CharSequence getDocumentId() {
      return document_id;
    }
    
    /** Sets the value of the 'document_id' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder setDocumentId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.document_id = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'document_id' field has been set */
    public boolean hasDocumentId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'document_id' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder clearDocumentId() {
      document_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'receive_date' field */
    public java.lang.CharSequence getReceiveDate() {
      return receive_date;
    }
    
    /** Sets the value of the 'receive_date' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder setReceiveDate(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.receive_date = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'receive_date' field has been set */
    public boolean hasReceiveDate() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'receive_date' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder clearReceiveDate() {
      receive_date = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'subcategory' field */
    public java.util.List<java.lang.CharSequence> getSubcategory() {
      return subcategory;
    }
    
    /** Sets the value of the 'subcategory' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder setSubcategory(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[4], value);
      this.subcategory = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'subcategory' field has been set */
    public boolean hasSubcategory() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'subcategory' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder clearSubcategory() {
      subcategory = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public java.lang.CharSequence getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder setType(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.type = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'type' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions.Builder clearType() {
      type = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public Resolutions build() {
      try {
        Resolutions record = new Resolutions();
        record.category = fieldSetFlags()[0] ? this.category : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.description = fieldSetFlags()[1] ? this.description : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.document_id = fieldSetFlags()[2] ? this.document_id : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.receive_date = fieldSetFlags()[3] ? this.receive_date : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.subcategory = fieldSetFlags()[4] ? this.subcategory : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[4]);
        record.type = fieldSetFlags()[5] ? this.type : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
