/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SecuredDetails extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SecuredDetails\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails\",\"fields\":[{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"Details of the amount or obligation secured by the charge\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"doc\":\"The type of secured details. For enumeration descriptions see secured-details-description section in the enumeration mappings. Possible values are:amount-secured obligations-secured\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Details of the amount or obligation secured by the charge */
  @Deprecated public java.lang.CharSequence description;
  /** The type of secured details. For enumeration descriptions see secured-details-description section in the enumeration mappings. Possible values are:amount-secured obligations-secured */
  @Deprecated public java.lang.CharSequence type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public SecuredDetails() {}

  /**
   * All-args constructor.
   */
  public SecuredDetails(java.lang.CharSequence description, java.lang.CharSequence type) {
    this.description = description;
    this.type = type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return description;
    case 1: return type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: description = (java.lang.CharSequence)value$; break;
    case 1: type = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'description' field.
   * Details of the amount or obligation secured by the charge   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * Details of the amount or obligation secured by the charge   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'type' field.
   * The type of secured details. For enumeration descriptions see secured-details-description section in the enumeration mappings. Possible values are:amount-secured obligations-secured   */
  public java.lang.CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * The type of secured details. For enumeration descriptions see secured-details-description section in the enumeration mappings. Possible values are:amount-secured obligations-secured   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /** Creates a new SecuredDetails RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails.SecuredDetails.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails.SecuredDetails.Builder();
  }
  
  /** Creates a new SecuredDetails RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails.SecuredDetails.Builder newBuilder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails.SecuredDetails.Builder other) {
    return new com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails.SecuredDetails.Builder(other);
  }
  
  /** Creates a new SecuredDetails RecordBuilder by copying an existing SecuredDetails instance */
  public static com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails.SecuredDetails.Builder newBuilder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails.SecuredDetails other) {
    return new com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails.SecuredDetails.Builder(other);
  }
  
  /**
   * RecordBuilder for SecuredDetails instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SecuredDetails>
    implements org.apache.avro.data.RecordBuilder<SecuredDetails> {

    private java.lang.CharSequence description;
    private java.lang.CharSequence type;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails.SecuredDetails.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails.SecuredDetails.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.description)) {
        this.description = data().deepCopy(fields()[0].schema(), other.description);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing SecuredDetails instance */
    private Builder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails.SecuredDetails other) {
            super(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails.SecuredDetails.SCHEMA$);
      if (isValidValue(fields()[0], other.description)) {
        this.description = data().deepCopy(fields()[0].schema(), other.description);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'description' field */
    public java.lang.CharSequence getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails.SecuredDetails.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.description = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'description' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails.SecuredDetails.Builder clearDescription() {
      description = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public java.lang.CharSequence getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails.SecuredDetails.Builder setType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.type = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'type' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails.SecuredDetails.Builder clearType() {
      type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public SecuredDetails build() {
      try {
        SecuredDetails record = new SecuredDetails();
        record.description = fieldSetFlags()[0] ? this.description : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.type = fieldSetFlags()[1] ? this.type : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
