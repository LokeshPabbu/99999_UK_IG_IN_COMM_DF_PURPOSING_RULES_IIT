/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class dataFields extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"dataFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data\",\"fields\":[{\"name\":\"annotations\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Annotations\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations\",\"fields\":[{\"name\":\"annotation\",\"type\":[\"null\",\"string\"],\"doc\":\"The annotation text\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"date\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the annotation was added\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"A description of the annotation. For enumeration descriptions see description section in the enumeration mappings file\",\"default\":null,\"dataClassification\":\"3\"}]}},\"default\":[]},{\"name\":\"associated_filings\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AssociatedFilings\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings\",\"fields\":[{\"name\":\"date\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the associated filing was processed\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"A description of the associated filing.For enumeration descriptions see description section in the enumeration mappings file\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"doc\":\"The type of the associated filing\",\"default\":null,\"dataClassification\":\"3\"}]}},\"default\":[]},{\"name\":\"barcode\",\"type\":[\"null\",\"string\"],\"doc\":\"The barcode of the document\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"category\",\"type\":[\"null\",\"string\"],\"doc\":\"The category of the document filed.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"date\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the filing was processed.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"A description of the filing. For enumeration descriptions see description section in the enumeration mappings file.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"links\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"linksFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links\",\"fields\":[{\"name\":\"document_metadata\",\"type\":[\"null\",\"string\"],\"doc\":\"Link to the document metadata associated with this filing history item. See the Document API documentation for more details.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"self\",\"type\":[\"null\",\"string\"],\"doc\":\"Link to this filing history item.\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"pages\",\"type\":[\"null\",\"string\"],\"doc\":\"Number of pages within the PDF document\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"paper_filed\",\"type\":[\"null\",\"string\"],\"doc\":\"If true, indicates this is a paper filing.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"resolutions\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Resolutions\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions\",\"fields\":[{\"name\":\"category\",\"type\":[\"null\",\"string\"],\"doc\":\"The category of the resolution filed.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"A description of the associated filing. For enumeration descriptions see description section in the enumeration mappings file.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"document_id\",\"type\":[\"null\",\"string\"],\"doc\":\"The document id of the resolution.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"receive_date\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the resolution was processed.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"subcategory\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"The sub-category of the document filed.\",\"default\":[],\"dataClassification\":\"3\"},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"doc\":\"The type of the associated filing.\",\"default\":null,\"dataClassification\":\"3\"}]}},\"default\":[]},{\"name\":\"subcategory\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"The sub-category of the document filed.\",\"default\":[],\"dataClassification\":\"3\"},{\"name\":\"transaction_id\",\"type\":[\"null\",\"string\"],\"doc\":\"The transaction ID of the filing.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"doc\":\"The type of filing.\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations> annotations;
  @Deprecated public java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings> associated_filings;
  /** The barcode of the document */
  @Deprecated public java.lang.CharSequence barcode;
  /** The category of the document filed. */
  @Deprecated public java.lang.CharSequence category;
  /** The date the filing was processed. */
  @Deprecated public java.lang.CharSequence date;
  /** A description of the filing. For enumeration descriptions see description section in the enumeration mappings file. */
  @Deprecated public java.lang.CharSequence description;
  @Deprecated public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields links;
  /** Number of pages within the PDF document */
  @Deprecated public java.lang.CharSequence pages;
  /** If true, indicates this is a paper filing. */
  @Deprecated public java.lang.CharSequence paper_filed;
  @Deprecated public java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions> resolutions;
  /** The sub-category of the document filed. */
  @Deprecated public java.util.List<java.lang.CharSequence> subcategory;
  /** The transaction ID of the filing. */
  @Deprecated public java.lang.CharSequence transaction_id;
  /** The type of filing. */
  @Deprecated public java.lang.CharSequence type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public dataFields() {}

  /**
   * All-args constructor.
   */
  public dataFields(java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations> annotations, java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings> associated_filings, java.lang.CharSequence barcode, java.lang.CharSequence category, java.lang.CharSequence date, java.lang.CharSequence description, com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields links, java.lang.CharSequence pages, java.lang.CharSequence paper_filed, java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions> resolutions, java.util.List<java.lang.CharSequence> subcategory, java.lang.CharSequence transaction_id, java.lang.CharSequence type) {
    this.annotations = annotations;
    this.associated_filings = associated_filings;
    this.barcode = barcode;
    this.category = category;
    this.date = date;
    this.description = description;
    this.links = links;
    this.pages = pages;
    this.paper_filed = paper_filed;
    this.resolutions = resolutions;
    this.subcategory = subcategory;
    this.transaction_id = transaction_id;
    this.type = type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return annotations;
    case 1: return associated_filings;
    case 2: return barcode;
    case 3: return category;
    case 4: return date;
    case 5: return description;
    case 6: return links;
    case 7: return pages;
    case 8: return paper_filed;
    case 9: return resolutions;
    case 10: return subcategory;
    case 11: return transaction_id;
    case 12: return type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: annotations = (java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations>)value$; break;
    case 1: associated_filings = (java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings>)value$; break;
    case 2: barcode = (java.lang.CharSequence)value$; break;
    case 3: category = (java.lang.CharSequence)value$; break;
    case 4: date = (java.lang.CharSequence)value$; break;
    case 5: description = (java.lang.CharSequence)value$; break;
    case 6: links = (com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields)value$; break;
    case 7: pages = (java.lang.CharSequence)value$; break;
    case 8: paper_filed = (java.lang.CharSequence)value$; break;
    case 9: resolutions = (java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions>)value$; break;
    case 10: subcategory = (java.util.List<java.lang.CharSequence>)value$; break;
    case 11: transaction_id = (java.lang.CharSequence)value$; break;
    case 12: type = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'annotations' field.
   */
  public java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations> getAnnotations() {
    return annotations;
  }

  /**
   * Sets the value of the 'annotations' field.
   * @param value the value to set.
   */
  public void setAnnotations(java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations> value) {
    this.annotations = value;
  }

  /**
   * Gets the value of the 'associated_filings' field.
   */
  public java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings> getAssociatedFilings() {
    return associated_filings;
  }

  /**
   * Sets the value of the 'associated_filings' field.
   * @param value the value to set.
   */
  public void setAssociatedFilings(java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings> value) {
    this.associated_filings = value;
  }

  /**
   * Gets the value of the 'barcode' field.
   * The barcode of the document   */
  public java.lang.CharSequence getBarcode() {
    return barcode;
  }

  /**
   * Sets the value of the 'barcode' field.
   * The barcode of the document   * @param value the value to set.
   */
  public void setBarcode(java.lang.CharSequence value) {
    this.barcode = value;
  }

  /**
   * Gets the value of the 'category' field.
   * The category of the document filed.   */
  public java.lang.CharSequence getCategory() {
    return category;
  }

  /**
   * Sets the value of the 'category' field.
   * The category of the document filed.   * @param value the value to set.
   */
  public void setCategory(java.lang.CharSequence value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'date' field.
   * The date the filing was processed.   */
  public java.lang.CharSequence getDate() {
    return date;
  }

  /**
   * Sets the value of the 'date' field.
   * The date the filing was processed.   * @param value the value to set.
   */
  public void setDate(java.lang.CharSequence value) {
    this.date = value;
  }

  /**
   * Gets the value of the 'description' field.
   * A description of the filing. For enumeration descriptions see description section in the enumeration mappings file.   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * A description of the filing. For enumeration descriptions see description section in the enumeration mappings file.   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'links' field.
   */
  public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields getLinks() {
    return links;
  }

  /**
   * Sets the value of the 'links' field.
   * @param value the value to set.
   */
  public void setLinks(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields value) {
    this.links = value;
  }

  /**
   * Gets the value of the 'pages' field.
   * Number of pages within the PDF document   */
  public java.lang.CharSequence getPages() {
    return pages;
  }

  /**
   * Sets the value of the 'pages' field.
   * Number of pages within the PDF document   * @param value the value to set.
   */
  public void setPages(java.lang.CharSequence value) {
    this.pages = value;
  }

  /**
   * Gets the value of the 'paper_filed' field.
   * If true, indicates this is a paper filing.   */
  public java.lang.CharSequence getPaperFiled() {
    return paper_filed;
  }

  /**
   * Sets the value of the 'paper_filed' field.
   * If true, indicates this is a paper filing.   * @param value the value to set.
   */
  public void setPaperFiled(java.lang.CharSequence value) {
    this.paper_filed = value;
  }

  /**
   * Gets the value of the 'resolutions' field.
   */
  public java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions> getResolutions() {
    return resolutions;
  }

  /**
   * Sets the value of the 'resolutions' field.
   * @param value the value to set.
   */
  public void setResolutions(java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions> value) {
    this.resolutions = value;
  }

  /**
   * Gets the value of the 'subcategory' field.
   * The sub-category of the document filed.   */
  public java.util.List<java.lang.CharSequence> getSubcategory() {
    return subcategory;
  }

  /**
   * Sets the value of the 'subcategory' field.
   * The sub-category of the document filed.   * @param value the value to set.
   */
  public void setSubcategory(java.util.List<java.lang.CharSequence> value) {
    this.subcategory = value;
  }

  /**
   * Gets the value of the 'transaction_id' field.
   * The transaction ID of the filing.   */
  public java.lang.CharSequence getTransactionId() {
    return transaction_id;
  }

  /**
   * Sets the value of the 'transaction_id' field.
   * The transaction ID of the filing.   * @param value the value to set.
   */
  public void setTransactionId(java.lang.CharSequence value) {
    this.transaction_id = value;
  }

  /**
   * Gets the value of the 'type' field.
   * The type of filing.   */
  public java.lang.CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * The type of filing.   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /** Creates a new dataFields RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder();
  }
  
  /** Creates a new dataFields RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder other) {
    return new com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder(other);
  }
  
  /** Creates a new dataFields RecordBuilder by copying an existing dataFields instance */
  public static com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields other) {
    return new com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder(other);
  }
  
  /**
   * RecordBuilder for dataFields instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<dataFields>
    implements org.apache.avro.data.RecordBuilder<dataFields> {

    private java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations> annotations;
    private java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings> associated_filings;
    private java.lang.CharSequence barcode;
    private java.lang.CharSequence category;
    private java.lang.CharSequence date;
    private java.lang.CharSequence description;
    private com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields links;
    private java.lang.CharSequence pages;
    private java.lang.CharSequence paper_filed;
    private java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions> resolutions;
    private java.util.List<java.lang.CharSequence> subcategory;
    private java.lang.CharSequence transaction_id;
    private java.lang.CharSequence type;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.annotations)) {
        this.annotations = data().deepCopy(fields()[0].schema(), other.annotations);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.associated_filings)) {
        this.associated_filings = data().deepCopy(fields()[1].schema(), other.associated_filings);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.barcode)) {
        this.barcode = data().deepCopy(fields()[2].schema(), other.barcode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.category)) {
        this.category = data().deepCopy(fields()[3].schema(), other.category);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.date)) {
        this.date = data().deepCopy(fields()[4].schema(), other.date);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.description)) {
        this.description = data().deepCopy(fields()[5].schema(), other.description);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.links)) {
        this.links = data().deepCopy(fields()[6].schema(), other.links);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pages)) {
        this.pages = data().deepCopy(fields()[7].schema(), other.pages);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.paper_filed)) {
        this.paper_filed = data().deepCopy(fields()[8].schema(), other.paper_filed);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.resolutions)) {
        this.resolutions = data().deepCopy(fields()[9].schema(), other.resolutions);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.subcategory)) {
        this.subcategory = data().deepCopy(fields()[10].schema(), other.subcategory);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.transaction_id)) {
        this.transaction_id = data().deepCopy(fields()[11].schema(), other.transaction_id);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.type)) {
        this.type = data().deepCopy(fields()[12].schema(), other.type);
        fieldSetFlags()[12] = true;
      }
    }
    
    /** Creates a Builder by copying an existing dataFields instance */
    private Builder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields other) {
            super(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.SCHEMA$);
      if (isValidValue(fields()[0], other.annotations)) {
        this.annotations = data().deepCopy(fields()[0].schema(), other.annotations);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.associated_filings)) {
        this.associated_filings = data().deepCopy(fields()[1].schema(), other.associated_filings);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.barcode)) {
        this.barcode = data().deepCopy(fields()[2].schema(), other.barcode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.category)) {
        this.category = data().deepCopy(fields()[3].schema(), other.category);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.date)) {
        this.date = data().deepCopy(fields()[4].schema(), other.date);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.description)) {
        this.description = data().deepCopy(fields()[5].schema(), other.description);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.links)) {
        this.links = data().deepCopy(fields()[6].schema(), other.links);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.pages)) {
        this.pages = data().deepCopy(fields()[7].schema(), other.pages);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.paper_filed)) {
        this.paper_filed = data().deepCopy(fields()[8].schema(), other.paper_filed);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.resolutions)) {
        this.resolutions = data().deepCopy(fields()[9].schema(), other.resolutions);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.subcategory)) {
        this.subcategory = data().deepCopy(fields()[10].schema(), other.subcategory);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.transaction_id)) {
        this.transaction_id = data().deepCopy(fields()[11].schema(), other.transaction_id);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.type)) {
        this.type = data().deepCopy(fields()[12].schema(), other.type);
        fieldSetFlags()[12] = true;
      }
    }

    /** Gets the value of the 'annotations' field */
    public java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations> getAnnotations() {
      return annotations;
    }
    
    /** Sets the value of the 'annotations' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder setAnnotations(java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations> value) {
      validate(fields()[0], value);
      this.annotations = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'annotations' field has been set */
    public boolean hasAnnotations() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'annotations' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder clearAnnotations() {
      annotations = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'associated_filings' field */
    public java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings> getAssociatedFilings() {
      return associated_filings;
    }
    
    /** Sets the value of the 'associated_filings' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder setAssociatedFilings(java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings> value) {
      validate(fields()[1], value);
      this.associated_filings = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'associated_filings' field has been set */
    public boolean hasAssociatedFilings() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'associated_filings' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder clearAssociatedFilings() {
      associated_filings = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'barcode' field */
    public java.lang.CharSequence getBarcode() {
      return barcode;
    }
    
    /** Sets the value of the 'barcode' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder setBarcode(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.barcode = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'barcode' field has been set */
    public boolean hasBarcode() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'barcode' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder clearBarcode() {
      barcode = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'category' field */
    public java.lang.CharSequence getCategory() {
      return category;
    }
    
    /** Sets the value of the 'category' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder setCategory(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.category = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'category' field has been set */
    public boolean hasCategory() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'category' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder clearCategory() {
      category = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'date' field */
    public java.lang.CharSequence getDate() {
      return date;
    }
    
    /** Sets the value of the 'date' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder setDate(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.date = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'date' field has been set */
    public boolean hasDate() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'date' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder clearDate() {
      date = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.CharSequence getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.description = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'description' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder clearDescription() {
      description = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'links' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields getLinks() {
      return links;
    }
    
    /** Sets the value of the 'links' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder setLinks(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields value) {
      validate(fields()[6], value);
      this.links = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'links' field has been set */
    public boolean hasLinks() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'links' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder clearLinks() {
      links = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'pages' field */
    public java.lang.CharSequence getPages() {
      return pages;
    }
    
    /** Sets the value of the 'pages' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder setPages(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.pages = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'pages' field has been set */
    public boolean hasPages() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'pages' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder clearPages() {
      pages = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'paper_filed' field */
    public java.lang.CharSequence getPaperFiled() {
      return paper_filed;
    }
    
    /** Sets the value of the 'paper_filed' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder setPaperFiled(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.paper_filed = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'paper_filed' field has been set */
    public boolean hasPaperFiled() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'paper_filed' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder clearPaperFiled() {
      paper_filed = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'resolutions' field */
    public java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions> getResolutions() {
      return resolutions;
    }
    
    /** Sets the value of the 'resolutions' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder setResolutions(java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions> value) {
      validate(fields()[9], value);
      this.resolutions = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'resolutions' field has been set */
    public boolean hasResolutions() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'resolutions' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder clearResolutions() {
      resolutions = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'subcategory' field */
    public java.util.List<java.lang.CharSequence> getSubcategory() {
      return subcategory;
    }
    
    /** Sets the value of the 'subcategory' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder setSubcategory(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[10], value);
      this.subcategory = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'subcategory' field has been set */
    public boolean hasSubcategory() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'subcategory' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder clearSubcategory() {
      subcategory = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'transaction_id' field */
    public java.lang.CharSequence getTransactionId() {
      return transaction_id;
    }
    
    /** Sets the value of the 'transaction_id' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder setTransactionId(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.transaction_id = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'transaction_id' field has been set */
    public boolean hasTransactionId() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'transaction_id' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder clearTransactionId() {
      transaction_id = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public java.lang.CharSequence getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder setType(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.type = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'type' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.dataFields.Builder clearType() {
      type = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    public dataFields build() {
      try {
        dataFields record = new dataFields();
        record.annotations = fieldSetFlags()[0] ? this.annotations : (java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations>) defaultValue(fields()[0]);
        record.associated_filings = fieldSetFlags()[1] ? this.associated_filings : (java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings>) defaultValue(fields()[1]);
        record.barcode = fieldSetFlags()[2] ? this.barcode : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.category = fieldSetFlags()[3] ? this.category : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.date = fieldSetFlags()[4] ? this.date : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.description = fieldSetFlags()[5] ? this.description : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.links = fieldSetFlags()[6] ? this.links : (com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields) defaultValue(fields()[6]);
        record.pages = fieldSetFlags()[7] ? this.pages : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.paper_filed = fieldSetFlags()[8] ? this.paper_filed : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.resolutions = fieldSetFlags()[9] ? this.resolutions : (java.util.List<com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.resolutions.Resolutions>) defaultValue(fields()[9]);
        record.subcategory = fieldSetFlags()[10] ? this.subcategory : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[10]);
        record.transaction_id = fieldSetFlags()[11] ? this.transaction_id : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.type = fieldSetFlags()[12] ? this.type : (java.lang.CharSequence) defaultValue(fields()[12]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
