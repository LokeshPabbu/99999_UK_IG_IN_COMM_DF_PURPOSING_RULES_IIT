/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Identification extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Identification\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification\",\"fields\":[{\"name\":\"identification_type\",\"type\":[\"null\",\"string\"],\"doc\":\"The officer's identity type Possible values are: eea non-eea uk-limited other-corporate-body-or-firm\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"legal_authority\",\"type\":[\"null\",\"string\"],\"doc\":\"The legal authority supervising the company.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"legal_form\",\"type\":[\"null\",\"string\"],\"doc\":\"The legal form of the company as defined by its country of registration.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"place_registered\",\"type\":[\"null\",\"string\"],\"doc\":\"Place registered.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"registration_number\",\"type\":[\"null\",\"string\"],\"doc\":\"Company registration number.\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The officer's identity type Possible values are: eea non-eea uk-limited other-corporate-body-or-firm */
  @Deprecated public java.lang.CharSequence identification_type;
  /** The legal authority supervising the company. */
  @Deprecated public java.lang.CharSequence legal_authority;
  /** The legal form of the company as defined by its country of registration. */
  @Deprecated public java.lang.CharSequence legal_form;
  /** Place registered. */
  @Deprecated public java.lang.CharSequence place_registered;
  /** Company registration number. */
  @Deprecated public java.lang.CharSequence registration_number;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Identification() {}

  /**
   * All-args constructor.
   */
  public Identification(java.lang.CharSequence identification_type, java.lang.CharSequence legal_authority, java.lang.CharSequence legal_form, java.lang.CharSequence place_registered, java.lang.CharSequence registration_number) {
    this.identification_type = identification_type;
    this.legal_authority = legal_authority;
    this.legal_form = legal_form;
    this.place_registered = place_registered;
    this.registration_number = registration_number;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return identification_type;
    case 1: return legal_authority;
    case 2: return legal_form;
    case 3: return place_registered;
    case 4: return registration_number;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: identification_type = (java.lang.CharSequence)value$; break;
    case 1: legal_authority = (java.lang.CharSequence)value$; break;
    case 2: legal_form = (java.lang.CharSequence)value$; break;
    case 3: place_registered = (java.lang.CharSequence)value$; break;
    case 4: registration_number = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'identification_type' field.
   * The officer's identity type Possible values are: eea non-eea uk-limited other-corporate-body-or-firm   */
  public java.lang.CharSequence getIdentificationType() {
    return identification_type;
  }

  /**
   * Sets the value of the 'identification_type' field.
   * The officer's identity type Possible values are: eea non-eea uk-limited other-corporate-body-or-firm   * @param value the value to set.
   */
  public void setIdentificationType(java.lang.CharSequence value) {
    this.identification_type = value;
  }

  /**
   * Gets the value of the 'legal_authority' field.
   * The legal authority supervising the company.   */
  public java.lang.CharSequence getLegalAuthority() {
    return legal_authority;
  }

  /**
   * Sets the value of the 'legal_authority' field.
   * The legal authority supervising the company.   * @param value the value to set.
   */
  public void setLegalAuthority(java.lang.CharSequence value) {
    this.legal_authority = value;
  }

  /**
   * Gets the value of the 'legal_form' field.
   * The legal form of the company as defined by its country of registration.   */
  public java.lang.CharSequence getLegalForm() {
    return legal_form;
  }

  /**
   * Sets the value of the 'legal_form' field.
   * The legal form of the company as defined by its country of registration.   * @param value the value to set.
   */
  public void setLegalForm(java.lang.CharSequence value) {
    this.legal_form = value;
  }

  /**
   * Gets the value of the 'place_registered' field.
   * Place registered.   */
  public java.lang.CharSequence getPlaceRegistered() {
    return place_registered;
  }

  /**
   * Sets the value of the 'place_registered' field.
   * Place registered.   * @param value the value to set.
   */
  public void setPlaceRegistered(java.lang.CharSequence value) {
    this.place_registered = value;
  }

  /**
   * Gets the value of the 'registration_number' field.
   * Company registration number.   */
  public java.lang.CharSequence getRegistrationNumber() {
    return registration_number;
  }

  /**
   * Sets the value of the 'registration_number' field.
   * Company registration number.   * @param value the value to set.
   */
  public void setRegistrationNumber(java.lang.CharSequence value) {
    this.registration_number = value;
  }

  /** Creates a new Identification RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.Builder();
  }
  
  /** Creates a new Identification RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.Builder newBuilder(com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.Builder other) {
    return new com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.Builder(other);
  }
  
  /** Creates a new Identification RecordBuilder by copying an existing Identification instance */
  public static com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.Builder newBuilder(com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification other) {
    return new com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.Builder(other);
  }
  
  /**
   * RecordBuilder for Identification instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Identification>
    implements org.apache.avro.data.RecordBuilder<Identification> {

    private java.lang.CharSequence identification_type;
    private java.lang.CharSequence legal_authority;
    private java.lang.CharSequence legal_form;
    private java.lang.CharSequence place_registered;
    private java.lang.CharSequence registration_number;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.identification_type)) {
        this.identification_type = data().deepCopy(fields()[0].schema(), other.identification_type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.legal_authority)) {
        this.legal_authority = data().deepCopy(fields()[1].schema(), other.legal_authority);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.legal_form)) {
        this.legal_form = data().deepCopy(fields()[2].schema(), other.legal_form);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.place_registered)) {
        this.place_registered = data().deepCopy(fields()[3].schema(), other.place_registered);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.registration_number)) {
        this.registration_number = data().deepCopy(fields()[4].schema(), other.registration_number);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Identification instance */
    private Builder(com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification other) {
            super(com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.SCHEMA$);
      if (isValidValue(fields()[0], other.identification_type)) {
        this.identification_type = data().deepCopy(fields()[0].schema(), other.identification_type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.legal_authority)) {
        this.legal_authority = data().deepCopy(fields()[1].schema(), other.legal_authority);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.legal_form)) {
        this.legal_form = data().deepCopy(fields()[2].schema(), other.legal_form);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.place_registered)) {
        this.place_registered = data().deepCopy(fields()[3].schema(), other.place_registered);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.registration_number)) {
        this.registration_number = data().deepCopy(fields()[4].schema(), other.registration_number);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'identification_type' field */
    public java.lang.CharSequence getIdentificationType() {
      return identification_type;
    }
    
    /** Sets the value of the 'identification_type' field */
    public com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.Builder setIdentificationType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.identification_type = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'identification_type' field has been set */
    public boolean hasIdentificationType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'identification_type' field */
    public com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.Builder clearIdentificationType() {
      identification_type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'legal_authority' field */
    public java.lang.CharSequence getLegalAuthority() {
      return legal_authority;
    }
    
    /** Sets the value of the 'legal_authority' field */
    public com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.Builder setLegalAuthority(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.legal_authority = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'legal_authority' field has been set */
    public boolean hasLegalAuthority() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'legal_authority' field */
    public com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.Builder clearLegalAuthority() {
      legal_authority = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'legal_form' field */
    public java.lang.CharSequence getLegalForm() {
      return legal_form;
    }
    
    /** Sets the value of the 'legal_form' field */
    public com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.Builder setLegalForm(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.legal_form = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'legal_form' field has been set */
    public boolean hasLegalForm() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'legal_form' field */
    public com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.Builder clearLegalForm() {
      legal_form = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'place_registered' field */
    public java.lang.CharSequence getPlaceRegistered() {
      return place_registered;
    }
    
    /** Sets the value of the 'place_registered' field */
    public com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.Builder setPlaceRegistered(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.place_registered = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'place_registered' field has been set */
    public boolean hasPlaceRegistered() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'place_registered' field */
    public com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.Builder clearPlaceRegistered() {
      place_registered = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'registration_number' field */
    public java.lang.CharSequence getRegistrationNumber() {
      return registration_number;
    }
    
    /** Sets the value of the 'registration_number' field */
    public com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.Builder setRegistrationNumber(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.registration_number = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'registration_number' field has been set */
    public boolean hasRegistrationNumber() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'registration_number' field */
    public com.equifax.fabric.uk.ingestion.officer.rawfields.data.identification.Identification.Builder clearRegistrationNumber() {
      registration_number = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public Identification build() {
      try {
        Identification record = new Identification();
        record.identification_type = fieldSetFlags()[0] ? this.identification_type : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.legal_authority = fieldSetFlags()[1] ? this.legal_authority : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.legal_form = fieldSetFlags()[2] ? this.legal_form : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.place_registered = fieldSetFlags()[3] ? this.place_registered : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.registration_number = fieldSetFlags()[4] ? this.registration_number : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
