/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Links extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Links\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links\",\"fields\":[{\"name\":\"filing\",\"type\":[\"null\",\"string\"],\"doc\":\"Link to the charge filing data\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"insolvency_case\",\"type\":[\"null\",\"string\"],\"doc\":\"Link to the insolvency case related to this filing\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Link to the charge filing data */
  @Deprecated public java.lang.CharSequence filing;
  /** Link to the insolvency case related to this filing */
  @Deprecated public java.lang.CharSequence insolvency_case;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Links() {}

  /**
   * All-args constructor.
   */
  public Links(java.lang.CharSequence filing, java.lang.CharSequence insolvency_case) {
    this.filing = filing;
    this.insolvency_case = insolvency_case;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return filing;
    case 1: return insolvency_case;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: filing = (java.lang.CharSequence)value$; break;
    case 1: insolvency_case = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'filing' field.
   * Link to the charge filing data   */
  public java.lang.CharSequence getFiling() {
    return filing;
  }

  /**
   * Sets the value of the 'filing' field.
   * Link to the charge filing data   * @param value the value to set.
   */
  public void setFiling(java.lang.CharSequence value) {
    this.filing = value;
  }

  /**
   * Gets the value of the 'insolvency_case' field.
   * Link to the insolvency case related to this filing   */
  public java.lang.CharSequence getInsolvencyCase() {
    return insolvency_case;
  }

  /**
   * Sets the value of the 'insolvency_case' field.
   * Link to the insolvency case related to this filing   * @param value the value to set.
   */
  public void setInsolvencyCase(java.lang.CharSequence value) {
    this.insolvency_case = value;
  }

  /** Creates a new Links RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links.Builder();
  }
  
  /** Creates a new Links RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links.Builder newBuilder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links.Builder other) {
    return new com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links.Builder(other);
  }
  
  /** Creates a new Links RecordBuilder by copying an existing Links instance */
  public static com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links.Builder newBuilder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links other) {
    return new com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links.Builder(other);
  }
  
  /**
   * RecordBuilder for Links instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Links>
    implements org.apache.avro.data.RecordBuilder<Links> {

    private java.lang.CharSequence filing;
    private java.lang.CharSequence insolvency_case;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.filing)) {
        this.filing = data().deepCopy(fields()[0].schema(), other.filing);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.insolvency_case)) {
        this.insolvency_case = data().deepCopy(fields()[1].schema(), other.insolvency_case);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Links instance */
    private Builder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links other) {
            super(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links.SCHEMA$);
      if (isValidValue(fields()[0], other.filing)) {
        this.filing = data().deepCopy(fields()[0].schema(), other.filing);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.insolvency_case)) {
        this.insolvency_case = data().deepCopy(fields()[1].schema(), other.insolvency_case);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'filing' field */
    public java.lang.CharSequence getFiling() {
      return filing;
    }
    
    /** Sets the value of the 'filing' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links.Builder setFiling(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.filing = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'filing' field has been set */
    public boolean hasFiling() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'filing' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links.Builder clearFiling() {
      filing = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'insolvency_case' field */
    public java.lang.CharSequence getInsolvencyCase() {
      return insolvency_case;
    }
    
    /** Sets the value of the 'insolvency_case' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links.Builder setInsolvencyCase(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.insolvency_case = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'insolvency_case' field has been set */
    public boolean hasInsolvencyCase() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'insolvency_case' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links.Builder clearInsolvencyCase() {
      insolvency_case = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public Links build() {
      try {
        Links record = new Links();
        record.filing = fieldSetFlags()[0] ? this.filing : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.insolvency_case = fieldSetFlags()[1] ? this.insolvency_case : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
