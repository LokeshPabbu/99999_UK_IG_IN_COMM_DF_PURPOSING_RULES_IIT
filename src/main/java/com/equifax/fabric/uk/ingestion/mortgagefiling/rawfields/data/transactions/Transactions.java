/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Transactions extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Transactions\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions\",\"fields\":[{\"name\":\"delivered_on\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the filing was submitted to Companies House\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"filing_type\",\"type\":[\"null\",\"string\"],\"doc\":\"Filing type which created, updated or satisfied the charge\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"insolvency_case_number\",\"type\":[\"null\",\"string\"],\"doc\":\"The insolvency case related to this filing\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"links\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Links\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links\",\"fields\":[{\"name\":\"filing\",\"type\":[\"null\",\"string\"],\"doc\":\"Link to the charge filing data\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"insolvency_case\",\"type\":[\"null\",\"string\"],\"doc\":\"Link to the insolvency case related to this filing\",\"default\":null,\"dataClassification\":\"3\"}]}],\"doc\":\"The resources related to this filing\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"transaction_id\",\"type\":[\"null\",\"string\"],\"doc\":\"The id of the filing\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The date the filing was submitted to Companies House */
  @Deprecated public java.lang.CharSequence delivered_on;
  /** Filing type which created, updated or satisfied the charge */
  @Deprecated public java.lang.CharSequence filing_type;
  /** The insolvency case related to this filing */
  @Deprecated public java.lang.CharSequence insolvency_case_number;
  /** The resources related to this filing */
  @Deprecated public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links links;
  /** The id of the filing */
  @Deprecated public java.lang.CharSequence transaction_id;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Transactions() {}

  /**
   * All-args constructor.
   */
  public Transactions(java.lang.CharSequence delivered_on, java.lang.CharSequence filing_type, java.lang.CharSequence insolvency_case_number, com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links links, java.lang.CharSequence transaction_id) {
    this.delivered_on = delivered_on;
    this.filing_type = filing_type;
    this.insolvency_case_number = insolvency_case_number;
    this.links = links;
    this.transaction_id = transaction_id;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return delivered_on;
    case 1: return filing_type;
    case 2: return insolvency_case_number;
    case 3: return links;
    case 4: return transaction_id;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: delivered_on = (java.lang.CharSequence)value$; break;
    case 1: filing_type = (java.lang.CharSequence)value$; break;
    case 2: insolvency_case_number = (java.lang.CharSequence)value$; break;
    case 3: links = (com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links)value$; break;
    case 4: transaction_id = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'delivered_on' field.
   * The date the filing was submitted to Companies House   */
  public java.lang.CharSequence getDeliveredOn() {
    return delivered_on;
  }

  /**
   * Sets the value of the 'delivered_on' field.
   * The date the filing was submitted to Companies House   * @param value the value to set.
   */
  public void setDeliveredOn(java.lang.CharSequence value) {
    this.delivered_on = value;
  }

  /**
   * Gets the value of the 'filing_type' field.
   * Filing type which created, updated or satisfied the charge   */
  public java.lang.CharSequence getFilingType() {
    return filing_type;
  }

  /**
   * Sets the value of the 'filing_type' field.
   * Filing type which created, updated or satisfied the charge   * @param value the value to set.
   */
  public void setFilingType(java.lang.CharSequence value) {
    this.filing_type = value;
  }

  /**
   * Gets the value of the 'insolvency_case_number' field.
   * The insolvency case related to this filing   */
  public java.lang.CharSequence getInsolvencyCaseNumber() {
    return insolvency_case_number;
  }

  /**
   * Sets the value of the 'insolvency_case_number' field.
   * The insolvency case related to this filing   * @param value the value to set.
   */
  public void setInsolvencyCaseNumber(java.lang.CharSequence value) {
    this.insolvency_case_number = value;
  }

  /**
   * Gets the value of the 'links' field.
   * The resources related to this filing   */
  public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links getLinks() {
    return links;
  }

  /**
   * Sets the value of the 'links' field.
   * The resources related to this filing   * @param value the value to set.
   */
  public void setLinks(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links value) {
    this.links = value;
  }

  /**
   * Gets the value of the 'transaction_id' field.
   * The id of the filing   */
  public java.lang.CharSequence getTransactionId() {
    return transaction_id;
  }

  /**
   * Sets the value of the 'transaction_id' field.
   * The id of the filing   * @param value the value to set.
   */
  public void setTransactionId(java.lang.CharSequence value) {
    this.transaction_id = value;
  }

  /** Creates a new Transactions RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.Builder();
  }
  
  /** Creates a new Transactions RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.Builder newBuilder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.Builder other) {
    return new com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.Builder(other);
  }
  
  /** Creates a new Transactions RecordBuilder by copying an existing Transactions instance */
  public static com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.Builder newBuilder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions other) {
    return new com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.Builder(other);
  }
  
  /**
   * RecordBuilder for Transactions instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Transactions>
    implements org.apache.avro.data.RecordBuilder<Transactions> {

    private java.lang.CharSequence delivered_on;
    private java.lang.CharSequence filing_type;
    private java.lang.CharSequence insolvency_case_number;
    private com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links links;
    private java.lang.CharSequence transaction_id;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.delivered_on)) {
        this.delivered_on = data().deepCopy(fields()[0].schema(), other.delivered_on);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.filing_type)) {
        this.filing_type = data().deepCopy(fields()[1].schema(), other.filing_type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.insolvency_case_number)) {
        this.insolvency_case_number = data().deepCopy(fields()[2].schema(), other.insolvency_case_number);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.links)) {
        this.links = data().deepCopy(fields()[3].schema(), other.links);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.transaction_id)) {
        this.transaction_id = data().deepCopy(fields()[4].schema(), other.transaction_id);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Transactions instance */
    private Builder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions other) {
            super(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.SCHEMA$);
      if (isValidValue(fields()[0], other.delivered_on)) {
        this.delivered_on = data().deepCopy(fields()[0].schema(), other.delivered_on);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.filing_type)) {
        this.filing_type = data().deepCopy(fields()[1].schema(), other.filing_type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.insolvency_case_number)) {
        this.insolvency_case_number = data().deepCopy(fields()[2].schema(), other.insolvency_case_number);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.links)) {
        this.links = data().deepCopy(fields()[3].schema(), other.links);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.transaction_id)) {
        this.transaction_id = data().deepCopy(fields()[4].schema(), other.transaction_id);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'delivered_on' field */
    public java.lang.CharSequence getDeliveredOn() {
      return delivered_on;
    }
    
    /** Sets the value of the 'delivered_on' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.Builder setDeliveredOn(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.delivered_on = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'delivered_on' field has been set */
    public boolean hasDeliveredOn() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'delivered_on' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.Builder clearDeliveredOn() {
      delivered_on = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'filing_type' field */
    public java.lang.CharSequence getFilingType() {
      return filing_type;
    }
    
    /** Sets the value of the 'filing_type' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.Builder setFilingType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.filing_type = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'filing_type' field has been set */
    public boolean hasFilingType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'filing_type' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.Builder clearFilingType() {
      filing_type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'insolvency_case_number' field */
    public java.lang.CharSequence getInsolvencyCaseNumber() {
      return insolvency_case_number;
    }
    
    /** Sets the value of the 'insolvency_case_number' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.Builder setInsolvencyCaseNumber(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.insolvency_case_number = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'insolvency_case_number' field has been set */
    public boolean hasInsolvencyCaseNumber() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'insolvency_case_number' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.Builder clearInsolvencyCaseNumber() {
      insolvency_case_number = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'links' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links getLinks() {
      return links;
    }
    
    /** Sets the value of the 'links' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.Builder setLinks(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links value) {
      validate(fields()[3], value);
      this.links = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'links' field has been set */
    public boolean hasLinks() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'links' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.Builder clearLinks() {
      links = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'transaction_id' field */
    public java.lang.CharSequence getTransactionId() {
      return transaction_id;
    }
    
    /** Sets the value of the 'transaction_id' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.Builder setTransactionId(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.transaction_id = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'transaction_id' field has been set */
    public boolean hasTransactionId() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'transaction_id' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions.Transactions.Builder clearTransactionId() {
      transaction_id = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public Transactions build() {
      try {
        Transactions record = new Transactions();
        record.delivered_on = fieldSetFlags()[0] ? this.delivered_on : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.filing_type = fieldSetFlags()[1] ? this.filing_type : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.insolvency_case_number = fieldSetFlags()[2] ? this.insolvency_case_number : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.links = fieldSetFlags()[3] ? this.links : (com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links.Links) defaultValue(fields()[3]);
        record.transaction_id = fieldSetFlags()[4] ? this.transaction_id : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
