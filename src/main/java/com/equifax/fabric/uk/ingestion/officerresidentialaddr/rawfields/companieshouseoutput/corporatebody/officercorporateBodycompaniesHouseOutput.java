/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class officercorporateBodycompaniesHouseOutput extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"officercorporateBodycompaniesHouseOutput\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody\",\"fields\":[{\"name\":\"externalNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer Person number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dateOfBirth\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer Date of birth\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"residentialAddress\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"residentialAddressofficercorporateBodycompaniesHouseOutput\",\"fields\":[{\"name\":\"houseNameNum\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address house name/number\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"street\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address street\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"area\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address area\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"postTown\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address posttown\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"region\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address region\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"country\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address country\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"postCode\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address postcode\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"sameAsServiceAddress\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address same as service address indicator\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Officer Person number */
  @Deprecated public java.lang.CharSequence externalNumber;
  /** Officer Date of birth */
  @Deprecated public java.lang.CharSequence dateOfBirth;
  @Deprecated public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput residentialAddress;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public officercorporateBodycompaniesHouseOutput() {}

  /**
   * All-args constructor.
   */
  public officercorporateBodycompaniesHouseOutput(java.lang.CharSequence externalNumber, java.lang.CharSequence dateOfBirth, com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput residentialAddress) {
    this.externalNumber = externalNumber;
    this.dateOfBirth = dateOfBirth;
    this.residentialAddress = residentialAddress;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return externalNumber;
    case 1: return dateOfBirth;
    case 2: return residentialAddress;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: externalNumber = (java.lang.CharSequence)value$; break;
    case 1: dateOfBirth = (java.lang.CharSequence)value$; break;
    case 2: residentialAddress = (com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'externalNumber' field.
   * Officer Person number   */
  public java.lang.CharSequence getExternalNumber() {
    return externalNumber;
  }

  /**
   * Sets the value of the 'externalNumber' field.
   * Officer Person number   * @param value the value to set.
   */
  public void setExternalNumber(java.lang.CharSequence value) {
    this.externalNumber = value;
  }

  /**
   * Gets the value of the 'dateOfBirth' field.
   * Officer Date of birth   */
  public java.lang.CharSequence getDateOfBirth() {
    return dateOfBirth;
  }

  /**
   * Sets the value of the 'dateOfBirth' field.
   * Officer Date of birth   * @param value the value to set.
   */
  public void setDateOfBirth(java.lang.CharSequence value) {
    this.dateOfBirth = value;
  }

  /**
   * Gets the value of the 'residentialAddress' field.
   */
  public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput getResidentialAddress() {
    return residentialAddress;
  }

  /**
   * Sets the value of the 'residentialAddress' field.
   * @param value the value to set.
   */
  public void setResidentialAddress(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput value) {
    this.residentialAddress = value;
  }

  /** Creates a new officercorporateBodycompaniesHouseOutput RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput.Builder();
  }
  
  /** Creates a new officercorporateBodycompaniesHouseOutput RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput.Builder newBuilder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput.Builder other) {
    return new com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput.Builder(other);
  }
  
  /** Creates a new officercorporateBodycompaniesHouseOutput RecordBuilder by copying an existing officercorporateBodycompaniesHouseOutput instance */
  public static com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput.Builder newBuilder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput other) {
    return new com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput.Builder(other);
  }
  
  /**
   * RecordBuilder for officercorporateBodycompaniesHouseOutput instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<officercorporateBodycompaniesHouseOutput>
    implements org.apache.avro.data.RecordBuilder<officercorporateBodycompaniesHouseOutput> {

    private java.lang.CharSequence externalNumber;
    private java.lang.CharSequence dateOfBirth;
    private com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput residentialAddress;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.externalNumber)) {
        this.externalNumber = data().deepCopy(fields()[0].schema(), other.externalNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dateOfBirth)) {
        this.dateOfBirth = data().deepCopy(fields()[1].schema(), other.dateOfBirth);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.residentialAddress)) {
        this.residentialAddress = data().deepCopy(fields()[2].schema(), other.residentialAddress);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing officercorporateBodycompaniesHouseOutput instance */
    private Builder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput other) {
            super(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput.SCHEMA$);
      if (isValidValue(fields()[0], other.externalNumber)) {
        this.externalNumber = data().deepCopy(fields()[0].schema(), other.externalNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dateOfBirth)) {
        this.dateOfBirth = data().deepCopy(fields()[1].schema(), other.dateOfBirth);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.residentialAddress)) {
        this.residentialAddress = data().deepCopy(fields()[2].schema(), other.residentialAddress);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'externalNumber' field */
    public java.lang.CharSequence getExternalNumber() {
      return externalNumber;
    }
    
    /** Sets the value of the 'externalNumber' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput.Builder setExternalNumber(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.externalNumber = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'externalNumber' field has been set */
    public boolean hasExternalNumber() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'externalNumber' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput.Builder clearExternalNumber() {
      externalNumber = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'dateOfBirth' field */
    public java.lang.CharSequence getDateOfBirth() {
      return dateOfBirth;
    }
    
    /** Sets the value of the 'dateOfBirth' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput.Builder setDateOfBirth(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.dateOfBirth = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'dateOfBirth' field has been set */
    public boolean hasDateOfBirth() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'dateOfBirth' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput.Builder clearDateOfBirth() {
      dateOfBirth = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'residentialAddress' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput getResidentialAddress() {
      return residentialAddress;
    }
    
    /** Sets the value of the 'residentialAddress' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput.Builder setResidentialAddress(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput value) {
      validate(fields()[2], value);
      this.residentialAddress = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'residentialAddress' field has been set */
    public boolean hasResidentialAddress() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'residentialAddress' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput.Builder clearResidentialAddress() {
      residentialAddress = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public officercorporateBodycompaniesHouseOutput build() {
      try {
        officercorporateBodycompaniesHouseOutput record = new officercorporateBodycompaniesHouseOutput();
        record.externalNumber = fieldSetFlags()[0] ? this.externalNumber : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.dateOfBirth = fieldSetFlags()[1] ? this.dateOfBirth : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.residentialAddress = fieldSetFlags()[2] ? this.residentialAddress : (com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
