/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RawFields extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RawFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields\",\"fields\":[{\"name\":\"data\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Data\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data\",\"fields\":[{\"name\":\"companyNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"CRO Number -Registered Company number of the company filing their accounts. Unique identifier of the company.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dateOfFiscalPeriod\",\"type\":[\"null\",\"string\"],\"doc\":\"Date Of Fiscal Period - The date to which the accounts were prepared\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"accountingMonths\",\"type\":[\"null\",\"string\"],\"doc\":\"Accounting Months - No of months that the accounts cover.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"tradingMonths\",\"type\":[\"null\",\"string\"],\"doc\":\"Trading Months - Trading Months\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"turnover\",\"type\":[\"null\",\"string\"],\"doc\":\"Turnover\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"grossProfit\",\"type\":[\"null\",\"string\"],\"doc\":\"Gross Profit\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"exceptionalIncome\",\"type\":[\"null\",\"string\"],\"doc\":\"Exceptional Income\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"exceptionalCharges\",\"type\":[\"null\",\"string\"],\"doc\":\"Exceptional Charges\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"preTaxProfit\",\"type\":[\"null\",\"string\"],\"doc\":\"Pre Tax Profit\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"postTaxProfit\",\"type\":[\"null\",\"string\"],\"doc\":\"Post Tax Profit\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dividends\",\"type\":[\"null\",\"string\"],\"doc\":\"Dividends\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"tangibleFixedAssets\",\"type\":[\"null\",\"string\"],\"doc\":\"Tangible Fixed Assets\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"intangibleFixedAssets\",\"type\":[\"null\",\"string\"],\"doc\":\"Intangible Fixed Assets\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"fixedAssetInvestment\",\"type\":[\"null\",\"string\"],\"doc\":\"Fixed Asset Investment\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"totalStock\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Stock\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"totalCash\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Cash\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"totalCurrentAssets\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Current Assets\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"currentLiabilities\",\"type\":[\"null\",\"string\"],\"doc\":\"Current Liabilities\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"workingCapital\",\"type\":[\"null\",\"string\"],\"doc\":\"Working Capital\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"calledUpShareCapital\",\"type\":[\"null\",\"string\"],\"doc\":\"Called Up Share Capital\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"totalReserves\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"totalReservesFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalreserves\",\"fields\":[{\"name\":\"profitAndLossAccount\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Reserves - Profit And Loss Account\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"sharePremiumAccount\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Reserves - Share Premium Account\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"revaluationReserve\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Reserves - Revaluation Reserve\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"capitalReserve\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Reserves - Capital Reserve\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"capitalRedemptionReserve\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Reserves - Capital Redemption Reserve\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"otherReserves\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Reserves - Other Reserves\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"goodwillReserves\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Reserves - Goodwill Reserves\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"netWorth\",\"type\":[\"null\",\"string\"],\"doc\":\"Net Worth\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"netCashInflow\",\"type\":[\"null\",\"string\"],\"doc\":\"Net Cash Inflow\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"increaseInCash\",\"type\":[\"null\",\"string\"],\"doc\":\"Increase In Cash\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"exportSales\",\"type\":[\"null\",\"string\"],\"doc\":\"Export Sales\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"totalStaffCosts\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Staff Costs\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"numberOfEmployees\",\"type\":[\"null\",\"string\"],\"doc\":\"Number of Employees\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"directorsEmolument\",\"type\":[\"null\",\"string\"],\"doc\":\"Directors Emolument\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"externalInterestReceivable\",\"type\":[\"null\",\"string\"],\"doc\":\"External Interest Receivable\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"externalInterestPayable\",\"type\":[\"null\",\"string\"],\"doc\":\"External Interest Payable\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"tradeDebtors\",\"type\":[\"null\",\"string\"],\"doc\":\"Trade Debtors\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dueFromGroupCompanies\",\"type\":[\"null\",\"string\"],\"doc\":\"Due From Group Companies\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"tradeCreditors\",\"type\":[\"null\",\"string\"],\"doc\":\"Trade Creditors\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dueToGroupCompanies\",\"type\":[\"null\",\"string\"],\"doc\":\"Due to Group Companies\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"directorsLoan\",\"type\":[\"null\",\"string\"],\"doc\":\"Directors Loan\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"totalShortTermBorrowings\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"totalShortTermBorrowingsFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalshorttermborrowings\",\"fields\":[{\"name\":\"bankOverdrafts\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Short Term Borrowings - Bank Overdrafts\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"bankLoanShortTerm\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Short Term Borrowings - Bank Loan short term\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"bankLoansOverdrafts\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Short Term Borrowings - Bank Loans Overdrafts\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"financeAndHirePurchase\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Short Term Borrowings - Finance And Hire Purchase\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"hirePurchase\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Short Term Borrowings - Hire Purchase\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"financeLease\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Short Term Borrowings - Finance Lease\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"otherShortTermBorrowings\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Short Term Borrowings - Other ShortTerm Borrowing\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"longTermBorrowing\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"longTermBorrowingFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing\",\"fields\":[{\"name\":\"bankLoans\",\"type\":[\"null\",\"string\"],\"doc\":\"Long Term Borrowing - Bank Loans\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"financeLeaseAndHirePurchase\",\"type\":[\"null\",\"string\"],\"doc\":\"Long Term Borrowing - Finance Lease and Hire Purchase\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"hirePurchaseLoan\",\"type\":[\"null\",\"string\"],\"doc\":\"Long Term Borrowing - Hire Purchase Loan\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"financeLeaseObligation\",\"type\":[\"null\",\"string\"],\"doc\":\"Long Term Borrowing - Finance Lease Obligation\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"otherLongTermBorrowing\",\"type\":[\"null\",\"string\"],\"doc\":\"Long Term Borrowing - Other Long Term Borrowing\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"totalOtherLongTerm\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"totalOtherLongTermFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.totalotherlongterm\",\"fields\":[","{\"name\":\"owedToGroupCompanies\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Other Long Term - Owed To Group Companies\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"longTermDirectorsLoan\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Other Long Term - Long Term Directors Loan\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"otherLongTermLiabilities\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Other Long Term - Other Long Term Liabilities\",\"default\":null,\"dataClassification\":\"3\"}]}]},{\"name\":\"other\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"otherFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.other\",\"fields\":[{\"name\":\"shortTermUnspecifiedSecured\",\"type\":[\"null\",\"string\"],\"doc\":\"Other - Short Term Unspecified Secured\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"longTermUnspecifiedSecured\",\"type\":[\"null\",\"string\"],\"doc\":\"Other - Long Term Unspecified Secured\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"unknownPeriodSecured\",\"type\":[\"null\",\"string\"],\"doc\":\"Other - Unknown Period Secured\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"unspecifiedBankLoans\",\"type\":[\"null\",\"string\"],\"doc\":\"Other - Unspecified Bank Loans\",\"default\":null,\"dataClassification\":\"3\"}]}]},{\"name\":\"auditors\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"auditorsFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.auditors\",\"fields\":[{\"name\":\"auditorName\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - Auditor Name\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"town\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - Town\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"remuneration\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - Remuneration\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"comments\",\"type\":[\"null\",\"string\"],\"doc\":\"Any comments that the auditor has upon the accounts.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"qualified\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - Qualified\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"trueAndFairView\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - True and Fair View\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"creditorsSupport\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - Creditors Support\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"auditExempt\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - Audit Exempt\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"directorsSupport\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - Directors Support\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"withoutQualifying\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - Without Qualifying\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"goingConcernInappropriate\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - Going Concern Inappropriate\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"accounts_Signed\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - Accounts Signed\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"disclaimerOfOpinion\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - Disclaimer of Opinion\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"bankSupport\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - Bank Support\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"noteNetCurrentLiab\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - Note Net Current Liab\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"abbreviatedAccounts\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - Abbreviated Accounts\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"seriousAccountingIrregularities\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - Serious Accounting Irregularities\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"notes\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - Notes\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"firstAccounts\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - First Accounts\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"tradeMonths\",\"type\":[\"null\",\"string\"],\"doc\":\"Auditors - Trade Months\",\"default\":null,\"dataClassification\":\"3\"}]}]},{\"name\":\"currency\",\"type\":[\"null\",\"string\"],\"doc\":\"Currency symbol for the accounts\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"consolidated\",\"type\":[\"null\",\"string\"],\"doc\":\"Consolidated\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"scale\",\"type\":[\"null\",\"string\"],\"doc\":\"The scale that should be applied to the figures\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"integers\",\"type\":[\"null\",\"string\"],\"doc\":\"Integers\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"referIndicator\",\"type\":[\"null\",\"string\"],\"doc\":\"Refer Indicator - Code for any reason for referral\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"notKeyedIndicator\",\"type\":[\"null\",\"string\"],\"doc\":\"Not Keyed Indicator\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"didNotTrade\",\"type\":[\"null\",\"string\"],\"doc\":\"Did Not Trade\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dormant\",\"type\":[\"null\",\"string\"],\"doc\":\"Dormant\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ceasedToTradeDuringPeriod\",\"type\":[\"null\",\"string\"],\"doc\":\"Ceased to Trade During Period\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dateCeasedToTradeDuringPeriod\",\"type\":[\"null\",\"string\"],\"doc\":\"Date Ceased to Trade During Period\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ceasedTradeAfterPeriodEnd\",\"type\":[\"null\",\"string\"],\"doc\":\"Ceased Trade After Period End\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dateCeasedTradeAfterPeriodEnd\",\"type\":[\"null\",\"string\"],\"doc\":\"Date Ceased Trade After Period End\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"transferredTrade\",\"type\":[\"null\",\"string\"],\"doc\":\"Transferred Trade\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dateTransferredTrade\",\"type\":[\"null\",\"string\"],\"doc\":\"Date Transferred Trade\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"nameOfPartyTradeIsTransferredTo\",\"type\":[\"null\",\"string\"],\"doc\":\"Name of Party trade is Transferred to\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"commencedTradeDuringPeriod\",\"type\":[\"null\",\"string\"],\"doc\":\"Commenced Trade During Period\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dateCommencedTrade\",\"type\":[\"null\",\"string\"],\"doc\":\"Date Commenced Trade\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"nameOfPartyActsAsAnAgentFor\",\"type\":[\"null\",\"string\"],\"doc\":\"Name of Party Acts as an Agent For\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ultimateHoldingCompany\",\"type\":[\"null\",\"string\"],\"doc\":\"Ultimate Holding company\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"actsAsAnAgent\",\"type\":[\"null\",\"string\"],\"doc\":\"Acts as an Agent\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"countryOfIncorporation\",\"type\":[\"null\",\"string\"],\"doc\":\"Country of Incorporation\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"miscellaneousItems\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"miscellaneousItemsFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.miscellaneousitems\",\"fields\":[{\"name\":\"objects\",\"type\":[\"null\",\"string\"],\"doc\":\"Miscellaneous Items - Objects\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"sicCode\",\"type\":[\"null\",\"string\"],\"doc\":\"Miscellaneous Items - SIC Code\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"externalCompany\",\"type\":[\"null\",\"string\"],\"doc\":\"Miscellaneous Items - External Company\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"section17Exemption\",\"type\":[\"null\",\"string\"],\"doc\":\"Miscellaneous Items - Section 17 Exemption\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"section17DateOfAccounts\",\"type\":[\"null\",\"string\"],\"doc\":\"Miscellaneous Items - Section 17 Date of Accounts\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"section17GuaranteeProvider\",\"type\":[\"null\",\"string\"],\"doc\":\"Miscellaneous Items - Section 17 Guarantee Provider\",\"default\":null,\"dataClassification\":\"3\"}]}]},{\"name\":\"depreciation\",\"type\":[\"null\",\"string\"],\"doc\":\"Depreciation\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"operatingProfit\",\"type\":[\"null\",\"string\"],\"doc\":\"Operating Profit\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"netCashFlowFromRoiAndServicingOfFinance\",\"type\":[\"null\",\"string\"],\"doc\":\"Net Cashflow From RoI and Servicing of Finance\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ne","tCashFlowBeforeFinancing\",\"type\":[\"null\",\"string\"],\"doc\":\"Net Cashflow Before Financing\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"netCashFlowFromFinancing\",\"type\":[\"null\",\"string\"],\"doc\":\"Net Cashflow From Financing\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"contingentLiability\",\"type\":[\"null\",\"string\"],\"doc\":\"Contingent Liability\",\"default\":null,\"dataClassification\":\"3\"}]}]},{\"name\":\"batchId\",\"type\":[\"null\",\"string\"],\"doc\":\"Batchno of data capture\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"processEngine\",\"type\":[\"null\",\"string\"],\"doc\":\"Method of data capture, e.g.OCR, Manual\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"docRef\",\"type\":[\"null\",\"string\"],\"doc\":\"The unique barcode for the document\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"loadDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Load Date\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"FILE_NAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplier File Name\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.Data data;
  /** Batchno of data capture */
  @Deprecated public java.lang.CharSequence batchId;
  /** Method of data capture, e.g.OCR, Manual */
  @Deprecated public java.lang.CharSequence processEngine;
  /** The unique barcode for the document */
  @Deprecated public java.lang.CharSequence docRef;
  /** Load Date */
  @Deprecated public java.lang.CharSequence loadDate;
  /** Supplier File Name */
  @Deprecated public java.lang.CharSequence FILE_NAME;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public RawFields() {}

  /**
   * All-args constructor.
   */
  public RawFields(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.Data data, java.lang.CharSequence batchId, java.lang.CharSequence processEngine, java.lang.CharSequence docRef, java.lang.CharSequence loadDate, java.lang.CharSequence FILE_NAME) {
    this.data = data;
    this.batchId = batchId;
    this.processEngine = processEngine;
    this.docRef = docRef;
    this.loadDate = loadDate;
    this.FILE_NAME = FILE_NAME;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return data;
    case 1: return batchId;
    case 2: return processEngine;
    case 3: return docRef;
    case 4: return loadDate;
    case 5: return FILE_NAME;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: data = (com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.Data)value$; break;
    case 1: batchId = (java.lang.CharSequence)value$; break;
    case 2: processEngine = (java.lang.CharSequence)value$; break;
    case 3: docRef = (java.lang.CharSequence)value$; break;
    case 4: loadDate = (java.lang.CharSequence)value$; break;
    case 5: FILE_NAME = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'data' field.
   */
  public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.Data getData() {
    return data;
  }

  /**
   * Sets the value of the 'data' field.
   * @param value the value to set.
   */
  public void setData(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.Data value) {
    this.data = value;
  }

  /**
   * Gets the value of the 'batchId' field.
   * Batchno of data capture   */
  public java.lang.CharSequence getBatchId() {
    return batchId;
  }

  /**
   * Sets the value of the 'batchId' field.
   * Batchno of data capture   * @param value the value to set.
   */
  public void setBatchId(java.lang.CharSequence value) {
    this.batchId = value;
  }

  /**
   * Gets the value of the 'processEngine' field.
   * Method of data capture, e.g.OCR, Manual   */
  public java.lang.CharSequence getProcessEngine() {
    return processEngine;
  }

  /**
   * Sets the value of the 'processEngine' field.
   * Method of data capture, e.g.OCR, Manual   * @param value the value to set.
   */
  public void setProcessEngine(java.lang.CharSequence value) {
    this.processEngine = value;
  }

  /**
   * Gets the value of the 'docRef' field.
   * The unique barcode for the document   */
  public java.lang.CharSequence getDocRef() {
    return docRef;
  }

  /**
   * Sets the value of the 'docRef' field.
   * The unique barcode for the document   * @param value the value to set.
   */
  public void setDocRef(java.lang.CharSequence value) {
    this.docRef = value;
  }

  /**
   * Gets the value of the 'loadDate' field.
   * Load Date   */
  public java.lang.CharSequence getLoadDate() {
    return loadDate;
  }

  /**
   * Sets the value of the 'loadDate' field.
   * Load Date   * @param value the value to set.
   */
  public void setLoadDate(java.lang.CharSequence value) {
    this.loadDate = value;
  }

  /**
   * Gets the value of the 'FILE_NAME' field.
   * Supplier File Name   */
  public java.lang.CharSequence getFILENAME() {
    return FILE_NAME;
  }

  /**
   * Sets the value of the 'FILE_NAME' field.
   * Supplier File Name   * @param value the value to set.
   */
  public void setFILENAME(java.lang.CharSequence value) {
    this.FILE_NAME = value;
  }

  /** Creates a new RawFields RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder();
  }
  
  /** Creates a new RawFields RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder other) {
    return new com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder(other);
  }
  
  /** Creates a new RawFields RecordBuilder by copying an existing RawFields instance */
  public static com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields other) {
    return new com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder(other);
  }
  
  /**
   * RecordBuilder for RawFields instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RawFields>
    implements org.apache.avro.data.RecordBuilder<RawFields> {

    private com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.Data data;
    private java.lang.CharSequence batchId;
    private java.lang.CharSequence processEngine;
    private java.lang.CharSequence docRef;
    private java.lang.CharSequence loadDate;
    private java.lang.CharSequence FILE_NAME;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.data)) {
        this.data = data().deepCopy(fields()[0].schema(), other.data);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.batchId)) {
        this.batchId = data().deepCopy(fields()[1].schema(), other.batchId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.processEngine)) {
        this.processEngine = data().deepCopy(fields()[2].schema(), other.processEngine);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.docRef)) {
        this.docRef = data().deepCopy(fields()[3].schema(), other.docRef);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.loadDate)) {
        this.loadDate = data().deepCopy(fields()[4].schema(), other.loadDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.FILE_NAME)) {
        this.FILE_NAME = data().deepCopy(fields()[5].schema(), other.FILE_NAME);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing RawFields instance */
    private Builder(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields other) {
            super(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.SCHEMA$);
      if (isValidValue(fields()[0], other.data)) {
        this.data = data().deepCopy(fields()[0].schema(), other.data);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.batchId)) {
        this.batchId = data().deepCopy(fields()[1].schema(), other.batchId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.processEngine)) {
        this.processEngine = data().deepCopy(fields()[2].schema(), other.processEngine);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.docRef)) {
        this.docRef = data().deepCopy(fields()[3].schema(), other.docRef);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.loadDate)) {
        this.loadDate = data().deepCopy(fields()[4].schema(), other.loadDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.FILE_NAME)) {
        this.FILE_NAME = data().deepCopy(fields()[5].schema(), other.FILE_NAME);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'data' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.Data getData() {
      return data;
    }
    
    /** Sets the value of the 'data' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder setData(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.Data value) {
      validate(fields()[0], value);
      this.data = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'data' field has been set */
    public boolean hasData() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'data' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder clearData() {
      data = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'batchId' field */
    public java.lang.CharSequence getBatchId() {
      return batchId;
    }
    
    /** Sets the value of the 'batchId' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder setBatchId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.batchId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'batchId' field has been set */
    public boolean hasBatchId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'batchId' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder clearBatchId() {
      batchId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'processEngine' field */
    public java.lang.CharSequence getProcessEngine() {
      return processEngine;
    }
    
    /** Sets the value of the 'processEngine' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder setProcessEngine(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.processEngine = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'processEngine' field has been set */
    public boolean hasProcessEngine() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'processEngine' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder clearProcessEngine() {
      processEngine = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'docRef' field */
    public java.lang.CharSequence getDocRef() {
      return docRef;
    }
    
    /** Sets the value of the 'docRef' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder setDocRef(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.docRef = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'docRef' field has been set */
    public boolean hasDocRef() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'docRef' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder clearDocRef() {
      docRef = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'loadDate' field */
    public java.lang.CharSequence getLoadDate() {
      return loadDate;
    }
    
    /** Sets the value of the 'loadDate' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder setLoadDate(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.loadDate = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'loadDate' field has been set */
    public boolean hasLoadDate() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'loadDate' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder clearLoadDate() {
      loadDate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'FILE_NAME' field */
    public java.lang.CharSequence getFILENAME() {
      return FILE_NAME;
    }
    
    /** Sets the value of the 'FILE_NAME' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder setFILENAME(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.FILE_NAME = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'FILE_NAME' field has been set */
    public boolean hasFILENAME() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'FILE_NAME' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.RawFields.Builder clearFILENAME() {
      FILE_NAME = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public RawFields build() {
      try {
        RawFields record = new RawFields();
        record.data = fieldSetFlags()[0] ? this.data : (com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.Data) defaultValue(fields()[0]);
        record.batchId = fieldSetFlags()[1] ? this.batchId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.processEngine = fieldSetFlags()[2] ? this.processEngine : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.docRef = fieldSetFlags()[3] ? this.docRef : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.loadDate = fieldSetFlags()[4] ? this.loadDate : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.FILE_NAME = fieldSetFlags()[5] ? this.FILE_NAME : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
