/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ShareHolderDetails extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ShareHolderDetails\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails\",\"fields\":[{\"name\":\"title\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder title\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"firstName\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder firstname\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"lastName\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder lastname\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"address\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"Shareholder address\",\"default\":[],\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"postCode\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder address postcode\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"shareType\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder share type\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"numberAllotted\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder number allotted\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ijFlag\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder Flag\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dateProcessed\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder date processed\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"deleteFlag\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder delete flag\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"freeLoadSN\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder free loan SN\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"companyOrIndividual\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder company or individual flag\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"shareHolderNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"classOfShares\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder Class of shares\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"numberOfShares\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder number of shares\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"aggregateValue\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder aggregate value\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"issueFlag\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder issue flag\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"shareIssueNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder share issue number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"companyRegNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder company registration number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"stdClassOfShares\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder Class of shares\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Shareholder title */
  @Deprecated public java.lang.CharSequence title;
  /** Shareholder firstname */
  @Deprecated public java.lang.CharSequence firstName;
  /** Shareholder lastname */
  @Deprecated public java.lang.CharSequence lastName;
  /** Shareholder address */
  @Deprecated public java.util.List<java.lang.CharSequence> address;
  /** Shareholder address postcode */
  @Deprecated public java.lang.CharSequence postCode;
  /** Shareholder share type */
  @Deprecated public java.lang.CharSequence shareType;
  /** Shareholder number allotted */
  @Deprecated public java.lang.CharSequence numberAllotted;
  /** Shareholder Flag */
  @Deprecated public java.lang.CharSequence ijFlag;
  /** Shareholder date processed */
  @Deprecated public java.lang.CharSequence dateProcessed;
  /** Shareholder delete flag */
  @Deprecated public java.lang.CharSequence deleteFlag;
  /** Shareholder free loan SN */
  @Deprecated public java.lang.CharSequence freeLoadSN;
  /** Shareholder company or individual flag */
  @Deprecated public java.lang.CharSequence companyOrIndividual;
  /** Shareholder number */
  @Deprecated public java.lang.CharSequence shareHolderNumber;
  /** Shareholder Class of shares */
  @Deprecated public java.lang.CharSequence classOfShares;
  /** Shareholder number of shares */
  @Deprecated public java.lang.CharSequence numberOfShares;
  /** Shareholder aggregate value */
  @Deprecated public java.lang.CharSequence aggregateValue;
  /** Shareholder issue flag */
  @Deprecated public java.lang.CharSequence issueFlag;
  /** Shareholder share issue number */
  @Deprecated public java.lang.CharSequence shareIssueNumber;
  /** Shareholder company registration number */
  @Deprecated public java.lang.CharSequence companyRegNumber;
  /** Shareholder Class of shares */
  @Deprecated public java.lang.CharSequence stdClassOfShares;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ShareHolderDetails() {}

  /**
   * All-args constructor.
   */
  public ShareHolderDetails(java.lang.CharSequence title, java.lang.CharSequence firstName, java.lang.CharSequence lastName, java.util.List<java.lang.CharSequence> address, java.lang.CharSequence postCode, java.lang.CharSequence shareType, java.lang.CharSequence numberAllotted, java.lang.CharSequence ijFlag, java.lang.CharSequence dateProcessed, java.lang.CharSequence deleteFlag, java.lang.CharSequence freeLoadSN, java.lang.CharSequence companyOrIndividual, java.lang.CharSequence shareHolderNumber, java.lang.CharSequence classOfShares, java.lang.CharSequence numberOfShares, java.lang.CharSequence aggregateValue, java.lang.CharSequence issueFlag, java.lang.CharSequence shareIssueNumber, java.lang.CharSequence companyRegNumber, java.lang.CharSequence stdClassOfShares) {
    this.title = title;
    this.firstName = firstName;
    this.lastName = lastName;
    this.address = address;
    this.postCode = postCode;
    this.shareType = shareType;
    this.numberAllotted = numberAllotted;
    this.ijFlag = ijFlag;
    this.dateProcessed = dateProcessed;
    this.deleteFlag = deleteFlag;
    this.freeLoadSN = freeLoadSN;
    this.companyOrIndividual = companyOrIndividual;
    this.shareHolderNumber = shareHolderNumber;
    this.classOfShares = classOfShares;
    this.numberOfShares = numberOfShares;
    this.aggregateValue = aggregateValue;
    this.issueFlag = issueFlag;
    this.shareIssueNumber = shareIssueNumber;
    this.companyRegNumber = companyRegNumber;
    this.stdClassOfShares = stdClassOfShares;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return title;
    case 1: return firstName;
    case 2: return lastName;
    case 3: return address;
    case 4: return postCode;
    case 5: return shareType;
    case 6: return numberAllotted;
    case 7: return ijFlag;
    case 8: return dateProcessed;
    case 9: return deleteFlag;
    case 10: return freeLoadSN;
    case 11: return companyOrIndividual;
    case 12: return shareHolderNumber;
    case 13: return classOfShares;
    case 14: return numberOfShares;
    case 15: return aggregateValue;
    case 16: return issueFlag;
    case 17: return shareIssueNumber;
    case 18: return companyRegNumber;
    case 19: return stdClassOfShares;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: title = (java.lang.CharSequence)value$; break;
    case 1: firstName = (java.lang.CharSequence)value$; break;
    case 2: lastName = (java.lang.CharSequence)value$; break;
    case 3: address = (java.util.List<java.lang.CharSequence>)value$; break;
    case 4: postCode = (java.lang.CharSequence)value$; break;
    case 5: shareType = (java.lang.CharSequence)value$; break;
    case 6: numberAllotted = (java.lang.CharSequence)value$; break;
    case 7: ijFlag = (java.lang.CharSequence)value$; break;
    case 8: dateProcessed = (java.lang.CharSequence)value$; break;
    case 9: deleteFlag = (java.lang.CharSequence)value$; break;
    case 10: freeLoadSN = (java.lang.CharSequence)value$; break;
    case 11: companyOrIndividual = (java.lang.CharSequence)value$; break;
    case 12: shareHolderNumber = (java.lang.CharSequence)value$; break;
    case 13: classOfShares = (java.lang.CharSequence)value$; break;
    case 14: numberOfShares = (java.lang.CharSequence)value$; break;
    case 15: aggregateValue = (java.lang.CharSequence)value$; break;
    case 16: issueFlag = (java.lang.CharSequence)value$; break;
    case 17: shareIssueNumber = (java.lang.CharSequence)value$; break;
    case 18: companyRegNumber = (java.lang.CharSequence)value$; break;
    case 19: stdClassOfShares = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'title' field.
   * Shareholder title   */
  public java.lang.CharSequence getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   * Shareholder title   * @param value the value to set.
   */
  public void setTitle(java.lang.CharSequence value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'firstName' field.
   * Shareholder firstname   */
  public java.lang.CharSequence getFirstName() {
    return firstName;
  }

  /**
   * Sets the value of the 'firstName' field.
   * Shareholder firstname   * @param value the value to set.
   */
  public void setFirstName(java.lang.CharSequence value) {
    this.firstName = value;
  }

  /**
   * Gets the value of the 'lastName' field.
   * Shareholder lastname   */
  public java.lang.CharSequence getLastName() {
    return lastName;
  }

  /**
   * Sets the value of the 'lastName' field.
   * Shareholder lastname   * @param value the value to set.
   */
  public void setLastName(java.lang.CharSequence value) {
    this.lastName = value;
  }

  /**
   * Gets the value of the 'address' field.
   * Shareholder address   */
  public java.util.List<java.lang.CharSequence> getAddress() {
    return address;
  }

  /**
   * Sets the value of the 'address' field.
   * Shareholder address   * @param value the value to set.
   */
  public void setAddress(java.util.List<java.lang.CharSequence> value) {
    this.address = value;
  }

  /**
   * Gets the value of the 'postCode' field.
   * Shareholder address postcode   */
  public java.lang.CharSequence getPostCode() {
    return postCode;
  }

  /**
   * Sets the value of the 'postCode' field.
   * Shareholder address postcode   * @param value the value to set.
   */
  public void setPostCode(java.lang.CharSequence value) {
    this.postCode = value;
  }

  /**
   * Gets the value of the 'shareType' field.
   * Shareholder share type   */
  public java.lang.CharSequence getShareType() {
    return shareType;
  }

  /**
   * Sets the value of the 'shareType' field.
   * Shareholder share type   * @param value the value to set.
   */
  public void setShareType(java.lang.CharSequence value) {
    this.shareType = value;
  }

  /**
   * Gets the value of the 'numberAllotted' field.
   * Shareholder number allotted   */
  public java.lang.CharSequence getNumberAllotted() {
    return numberAllotted;
  }

  /**
   * Sets the value of the 'numberAllotted' field.
   * Shareholder number allotted   * @param value the value to set.
   */
  public void setNumberAllotted(java.lang.CharSequence value) {
    this.numberAllotted = value;
  }

  /**
   * Gets the value of the 'ijFlag' field.
   * Shareholder Flag   */
  public java.lang.CharSequence getIjFlag() {
    return ijFlag;
  }

  /**
   * Sets the value of the 'ijFlag' field.
   * Shareholder Flag   * @param value the value to set.
   */
  public void setIjFlag(java.lang.CharSequence value) {
    this.ijFlag = value;
  }

  /**
   * Gets the value of the 'dateProcessed' field.
   * Shareholder date processed   */
  public java.lang.CharSequence getDateProcessed() {
    return dateProcessed;
  }

  /**
   * Sets the value of the 'dateProcessed' field.
   * Shareholder date processed   * @param value the value to set.
   */
  public void setDateProcessed(java.lang.CharSequence value) {
    this.dateProcessed = value;
  }

  /**
   * Gets the value of the 'deleteFlag' field.
   * Shareholder delete flag   */
  public java.lang.CharSequence getDeleteFlag() {
    return deleteFlag;
  }

  /**
   * Sets the value of the 'deleteFlag' field.
   * Shareholder delete flag   * @param value the value to set.
   */
  public void setDeleteFlag(java.lang.CharSequence value) {
    this.deleteFlag = value;
  }

  /**
   * Gets the value of the 'freeLoadSN' field.
   * Shareholder free loan SN   */
  public java.lang.CharSequence getFreeLoadSN() {
    return freeLoadSN;
  }

  /**
   * Sets the value of the 'freeLoadSN' field.
   * Shareholder free loan SN   * @param value the value to set.
   */
  public void setFreeLoadSN(java.lang.CharSequence value) {
    this.freeLoadSN = value;
  }

  /**
   * Gets the value of the 'companyOrIndividual' field.
   * Shareholder company or individual flag   */
  public java.lang.CharSequence getCompanyOrIndividual() {
    return companyOrIndividual;
  }

  /**
   * Sets the value of the 'companyOrIndividual' field.
   * Shareholder company or individual flag   * @param value the value to set.
   */
  public void setCompanyOrIndividual(java.lang.CharSequence value) {
    this.companyOrIndividual = value;
  }

  /**
   * Gets the value of the 'shareHolderNumber' field.
   * Shareholder number   */
  public java.lang.CharSequence getShareHolderNumber() {
    return shareHolderNumber;
  }

  /**
   * Sets the value of the 'shareHolderNumber' field.
   * Shareholder number   * @param value the value to set.
   */
  public void setShareHolderNumber(java.lang.CharSequence value) {
    this.shareHolderNumber = value;
  }

  /**
   * Gets the value of the 'classOfShares' field.
   * Shareholder Class of shares   */
  public java.lang.CharSequence getClassOfShares() {
    return classOfShares;
  }

  /**
   * Sets the value of the 'classOfShares' field.
   * Shareholder Class of shares   * @param value the value to set.
   */
  public void setClassOfShares(java.lang.CharSequence value) {
    this.classOfShares = value;
  }

  /**
   * Gets the value of the 'numberOfShares' field.
   * Shareholder number of shares   */
  public java.lang.CharSequence getNumberOfShares() {
    return numberOfShares;
  }

  /**
   * Sets the value of the 'numberOfShares' field.
   * Shareholder number of shares   * @param value the value to set.
   */
  public void setNumberOfShares(java.lang.CharSequence value) {
    this.numberOfShares = value;
  }

  /**
   * Gets the value of the 'aggregateValue' field.
   * Shareholder aggregate value   */
  public java.lang.CharSequence getAggregateValue() {
    return aggregateValue;
  }

  /**
   * Sets the value of the 'aggregateValue' field.
   * Shareholder aggregate value   * @param value the value to set.
   */
  public void setAggregateValue(java.lang.CharSequence value) {
    this.aggregateValue = value;
  }

  /**
   * Gets the value of the 'issueFlag' field.
   * Shareholder issue flag   */
  public java.lang.CharSequence getIssueFlag() {
    return issueFlag;
  }

  /**
   * Sets the value of the 'issueFlag' field.
   * Shareholder issue flag   * @param value the value to set.
   */
  public void setIssueFlag(java.lang.CharSequence value) {
    this.issueFlag = value;
  }

  /**
   * Gets the value of the 'shareIssueNumber' field.
   * Shareholder share issue number   */
  public java.lang.CharSequence getShareIssueNumber() {
    return shareIssueNumber;
  }

  /**
   * Sets the value of the 'shareIssueNumber' field.
   * Shareholder share issue number   * @param value the value to set.
   */
  public void setShareIssueNumber(java.lang.CharSequence value) {
    this.shareIssueNumber = value;
  }

  /**
   * Gets the value of the 'companyRegNumber' field.
   * Shareholder company registration number   */
  public java.lang.CharSequence getCompanyRegNumber() {
    return companyRegNumber;
  }

  /**
   * Sets the value of the 'companyRegNumber' field.
   * Shareholder company registration number   * @param value the value to set.
   */
  public void setCompanyRegNumber(java.lang.CharSequence value) {
    this.companyRegNumber = value;
  }

  /**
   * Gets the value of the 'stdClassOfShares' field.
   * Shareholder Class of shares   */
  public java.lang.CharSequence getStdClassOfShares() {
    return stdClassOfShares;
  }

  /**
   * Sets the value of the 'stdClassOfShares' field.
   * Shareholder Class of shares   * @param value the value to set.
   */
  public void setStdClassOfShares(java.lang.CharSequence value) {
    this.stdClassOfShares = value;
  }

  /** Creates a new ShareHolderDetails RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder();
  }
  
  /** Creates a new ShareHolderDetails RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder other) {
    return new com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder(other);
  }
  
  /** Creates a new ShareHolderDetails RecordBuilder by copying an existing ShareHolderDetails instance */
  public static com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails other) {
    return new com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder(other);
  }
  
  /**
   * RecordBuilder for ShareHolderDetails instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ShareHolderDetails>
    implements org.apache.avro.data.RecordBuilder<ShareHolderDetails> {

    private java.lang.CharSequence title;
    private java.lang.CharSequence firstName;
    private java.lang.CharSequence lastName;
    private java.util.List<java.lang.CharSequence> address;
    private java.lang.CharSequence postCode;
    private java.lang.CharSequence shareType;
    private java.lang.CharSequence numberAllotted;
    private java.lang.CharSequence ijFlag;
    private java.lang.CharSequence dateProcessed;
    private java.lang.CharSequence deleteFlag;
    private java.lang.CharSequence freeLoadSN;
    private java.lang.CharSequence companyOrIndividual;
    private java.lang.CharSequence shareHolderNumber;
    private java.lang.CharSequence classOfShares;
    private java.lang.CharSequence numberOfShares;
    private java.lang.CharSequence aggregateValue;
    private java.lang.CharSequence issueFlag;
    private java.lang.CharSequence shareIssueNumber;
    private java.lang.CharSequence companyRegNumber;
    private java.lang.CharSequence stdClassOfShares;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.title)) {
        this.title = data().deepCopy(fields()[0].schema(), other.title);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.firstName)) {
        this.firstName = data().deepCopy(fields()[1].schema(), other.firstName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lastName)) {
        this.lastName = data().deepCopy(fields()[2].schema(), other.lastName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.address)) {
        this.address = data().deepCopy(fields()[3].schema(), other.address);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.postCode)) {
        this.postCode = data().deepCopy(fields()[4].schema(), other.postCode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.shareType)) {
        this.shareType = data().deepCopy(fields()[5].schema(), other.shareType);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.numberAllotted)) {
        this.numberAllotted = data().deepCopy(fields()[6].schema(), other.numberAllotted);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.ijFlag)) {
        this.ijFlag = data().deepCopy(fields()[7].schema(), other.ijFlag);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.dateProcessed)) {
        this.dateProcessed = data().deepCopy(fields()[8].schema(), other.dateProcessed);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.deleteFlag)) {
        this.deleteFlag = data().deepCopy(fields()[9].schema(), other.deleteFlag);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.freeLoadSN)) {
        this.freeLoadSN = data().deepCopy(fields()[10].schema(), other.freeLoadSN);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.companyOrIndividual)) {
        this.companyOrIndividual = data().deepCopy(fields()[11].schema(), other.companyOrIndividual);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.shareHolderNumber)) {
        this.shareHolderNumber = data().deepCopy(fields()[12].schema(), other.shareHolderNumber);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.classOfShares)) {
        this.classOfShares = data().deepCopy(fields()[13].schema(), other.classOfShares);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.numberOfShares)) {
        this.numberOfShares = data().deepCopy(fields()[14].schema(), other.numberOfShares);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.aggregateValue)) {
        this.aggregateValue = data().deepCopy(fields()[15].schema(), other.aggregateValue);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.issueFlag)) {
        this.issueFlag = data().deepCopy(fields()[16].schema(), other.issueFlag);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.shareIssueNumber)) {
        this.shareIssueNumber = data().deepCopy(fields()[17].schema(), other.shareIssueNumber);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.companyRegNumber)) {
        this.companyRegNumber = data().deepCopy(fields()[18].schema(), other.companyRegNumber);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.stdClassOfShares)) {
        this.stdClassOfShares = data().deepCopy(fields()[19].schema(), other.stdClassOfShares);
        fieldSetFlags()[19] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ShareHolderDetails instance */
    private Builder(com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails other) {
            super(com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.SCHEMA$);
      if (isValidValue(fields()[0], other.title)) {
        this.title = data().deepCopy(fields()[0].schema(), other.title);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.firstName)) {
        this.firstName = data().deepCopy(fields()[1].schema(), other.firstName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lastName)) {
        this.lastName = data().deepCopy(fields()[2].schema(), other.lastName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.address)) {
        this.address = data().deepCopy(fields()[3].schema(), other.address);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.postCode)) {
        this.postCode = data().deepCopy(fields()[4].schema(), other.postCode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.shareType)) {
        this.shareType = data().deepCopy(fields()[5].schema(), other.shareType);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.numberAllotted)) {
        this.numberAllotted = data().deepCopy(fields()[6].schema(), other.numberAllotted);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.ijFlag)) {
        this.ijFlag = data().deepCopy(fields()[7].schema(), other.ijFlag);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.dateProcessed)) {
        this.dateProcessed = data().deepCopy(fields()[8].schema(), other.dateProcessed);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.deleteFlag)) {
        this.deleteFlag = data().deepCopy(fields()[9].schema(), other.deleteFlag);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.freeLoadSN)) {
        this.freeLoadSN = data().deepCopy(fields()[10].schema(), other.freeLoadSN);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.companyOrIndividual)) {
        this.companyOrIndividual = data().deepCopy(fields()[11].schema(), other.companyOrIndividual);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.shareHolderNumber)) {
        this.shareHolderNumber = data().deepCopy(fields()[12].schema(), other.shareHolderNumber);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.classOfShares)) {
        this.classOfShares = data().deepCopy(fields()[13].schema(), other.classOfShares);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.numberOfShares)) {
        this.numberOfShares = data().deepCopy(fields()[14].schema(), other.numberOfShares);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.aggregateValue)) {
        this.aggregateValue = data().deepCopy(fields()[15].schema(), other.aggregateValue);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.issueFlag)) {
        this.issueFlag = data().deepCopy(fields()[16].schema(), other.issueFlag);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.shareIssueNumber)) {
        this.shareIssueNumber = data().deepCopy(fields()[17].schema(), other.shareIssueNumber);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.companyRegNumber)) {
        this.companyRegNumber = data().deepCopy(fields()[18].schema(), other.companyRegNumber);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.stdClassOfShares)) {
        this.stdClassOfShares = data().deepCopy(fields()[19].schema(), other.stdClassOfShares);
        fieldSetFlags()[19] = true;
      }
    }

    /** Gets the value of the 'title' field */
    public java.lang.CharSequence getTitle() {
      return title;
    }
    
    /** Sets the value of the 'title' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setTitle(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.title = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'title' field has been set */
    public boolean hasTitle() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'title' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearTitle() {
      title = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'firstName' field */
    public java.lang.CharSequence getFirstName() {
      return firstName;
    }
    
    /** Sets the value of the 'firstName' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setFirstName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.firstName = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'firstName' field has been set */
    public boolean hasFirstName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'firstName' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'lastName' field */
    public java.lang.CharSequence getLastName() {
      return lastName;
    }
    
    /** Sets the value of the 'lastName' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setLastName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.lastName = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'lastName' field has been set */
    public boolean hasLastName() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'lastName' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'address' field */
    public java.util.List<java.lang.CharSequence> getAddress() {
      return address;
    }
    
    /** Sets the value of the 'address' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setAddress(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[3], value);
      this.address = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'address' field has been set */
    public boolean hasAddress() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'address' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearAddress() {
      address = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'postCode' field */
    public java.lang.CharSequence getPostCode() {
      return postCode;
    }
    
    /** Sets the value of the 'postCode' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setPostCode(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.postCode = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'postCode' field has been set */
    public boolean hasPostCode() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'postCode' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearPostCode() {
      postCode = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'shareType' field */
    public java.lang.CharSequence getShareType() {
      return shareType;
    }
    
    /** Sets the value of the 'shareType' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setShareType(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.shareType = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'shareType' field has been set */
    public boolean hasShareType() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'shareType' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearShareType() {
      shareType = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'numberAllotted' field */
    public java.lang.CharSequence getNumberAllotted() {
      return numberAllotted;
    }
    
    /** Sets the value of the 'numberAllotted' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setNumberAllotted(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.numberAllotted = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'numberAllotted' field has been set */
    public boolean hasNumberAllotted() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'numberAllotted' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearNumberAllotted() {
      numberAllotted = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'ijFlag' field */
    public java.lang.CharSequence getIjFlag() {
      return ijFlag;
    }
    
    /** Sets the value of the 'ijFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setIjFlag(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.ijFlag = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'ijFlag' field has been set */
    public boolean hasIjFlag() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'ijFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearIjFlag() {
      ijFlag = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'dateProcessed' field */
    public java.lang.CharSequence getDateProcessed() {
      return dateProcessed;
    }
    
    /** Sets the value of the 'dateProcessed' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setDateProcessed(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.dateProcessed = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'dateProcessed' field has been set */
    public boolean hasDateProcessed() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'dateProcessed' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearDateProcessed() {
      dateProcessed = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'deleteFlag' field */
    public java.lang.CharSequence getDeleteFlag() {
      return deleteFlag;
    }
    
    /** Sets the value of the 'deleteFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setDeleteFlag(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.deleteFlag = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'deleteFlag' field has been set */
    public boolean hasDeleteFlag() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'deleteFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearDeleteFlag() {
      deleteFlag = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'freeLoadSN' field */
    public java.lang.CharSequence getFreeLoadSN() {
      return freeLoadSN;
    }
    
    /** Sets the value of the 'freeLoadSN' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setFreeLoadSN(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.freeLoadSN = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'freeLoadSN' field has been set */
    public boolean hasFreeLoadSN() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'freeLoadSN' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearFreeLoadSN() {
      freeLoadSN = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'companyOrIndividual' field */
    public java.lang.CharSequence getCompanyOrIndividual() {
      return companyOrIndividual;
    }
    
    /** Sets the value of the 'companyOrIndividual' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setCompanyOrIndividual(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.companyOrIndividual = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'companyOrIndividual' field has been set */
    public boolean hasCompanyOrIndividual() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'companyOrIndividual' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearCompanyOrIndividual() {
      companyOrIndividual = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'shareHolderNumber' field */
    public java.lang.CharSequence getShareHolderNumber() {
      return shareHolderNumber;
    }
    
    /** Sets the value of the 'shareHolderNumber' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setShareHolderNumber(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.shareHolderNumber = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'shareHolderNumber' field has been set */
    public boolean hasShareHolderNumber() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'shareHolderNumber' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearShareHolderNumber() {
      shareHolderNumber = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'classOfShares' field */
    public java.lang.CharSequence getClassOfShares() {
      return classOfShares;
    }
    
    /** Sets the value of the 'classOfShares' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setClassOfShares(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.classOfShares = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'classOfShares' field has been set */
    public boolean hasClassOfShares() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'classOfShares' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearClassOfShares() {
      classOfShares = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'numberOfShares' field */
    public java.lang.CharSequence getNumberOfShares() {
      return numberOfShares;
    }
    
    /** Sets the value of the 'numberOfShares' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setNumberOfShares(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.numberOfShares = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'numberOfShares' field has been set */
    public boolean hasNumberOfShares() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'numberOfShares' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearNumberOfShares() {
      numberOfShares = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'aggregateValue' field */
    public java.lang.CharSequence getAggregateValue() {
      return aggregateValue;
    }
    
    /** Sets the value of the 'aggregateValue' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setAggregateValue(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.aggregateValue = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'aggregateValue' field has been set */
    public boolean hasAggregateValue() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'aggregateValue' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearAggregateValue() {
      aggregateValue = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'issueFlag' field */
    public java.lang.CharSequence getIssueFlag() {
      return issueFlag;
    }
    
    /** Sets the value of the 'issueFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setIssueFlag(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.issueFlag = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'issueFlag' field has been set */
    public boolean hasIssueFlag() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'issueFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearIssueFlag() {
      issueFlag = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'shareIssueNumber' field */
    public java.lang.CharSequence getShareIssueNumber() {
      return shareIssueNumber;
    }
    
    /** Sets the value of the 'shareIssueNumber' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setShareIssueNumber(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.shareIssueNumber = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'shareIssueNumber' field has been set */
    public boolean hasShareIssueNumber() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'shareIssueNumber' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearShareIssueNumber() {
      shareIssueNumber = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'companyRegNumber' field */
    public java.lang.CharSequence getCompanyRegNumber() {
      return companyRegNumber;
    }
    
    /** Sets the value of the 'companyRegNumber' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setCompanyRegNumber(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.companyRegNumber = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'companyRegNumber' field has been set */
    public boolean hasCompanyRegNumber() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'companyRegNumber' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearCompanyRegNumber() {
      companyRegNumber = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'stdClassOfShares' field */
    public java.lang.CharSequence getStdClassOfShares() {
      return stdClassOfShares;
    }
    
    /** Sets the value of the 'stdClassOfShares' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder setStdClassOfShares(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.stdClassOfShares = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'stdClassOfShares' field has been set */
    public boolean hasStdClassOfShares() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'stdClassOfShares' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails.Builder clearStdClassOfShares() {
      stdClassOfShares = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    @Override
    public ShareHolderDetails build() {
      try {
        ShareHolderDetails record = new ShareHolderDetails();
        record.title = fieldSetFlags()[0] ? this.title : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.firstName = fieldSetFlags()[1] ? this.firstName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.lastName = fieldSetFlags()[2] ? this.lastName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.address = fieldSetFlags()[3] ? this.address : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[3]);
        record.postCode = fieldSetFlags()[4] ? this.postCode : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.shareType = fieldSetFlags()[5] ? this.shareType : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.numberAllotted = fieldSetFlags()[6] ? this.numberAllotted : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.ijFlag = fieldSetFlags()[7] ? this.ijFlag : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.dateProcessed = fieldSetFlags()[8] ? this.dateProcessed : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.deleteFlag = fieldSetFlags()[9] ? this.deleteFlag : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.freeLoadSN = fieldSetFlags()[10] ? this.freeLoadSN : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.companyOrIndividual = fieldSetFlags()[11] ? this.companyOrIndividual : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.shareHolderNumber = fieldSetFlags()[12] ? this.shareHolderNumber : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.classOfShares = fieldSetFlags()[13] ? this.classOfShares : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.numberOfShares = fieldSetFlags()[14] ? this.numberOfShares : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.aggregateValue = fieldSetFlags()[15] ? this.aggregateValue : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.issueFlag = fieldSetFlags()[16] ? this.issueFlag : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.shareIssueNumber = fieldSetFlags()[17] ? this.shareIssueNumber : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.companyRegNumber = fieldSetFlags()[18] ? this.companyRegNumber : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.stdClassOfShares = fieldSetFlags()[19] ? this.stdClassOfShares : (java.lang.CharSequence) defaultValue(fields()[19]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
