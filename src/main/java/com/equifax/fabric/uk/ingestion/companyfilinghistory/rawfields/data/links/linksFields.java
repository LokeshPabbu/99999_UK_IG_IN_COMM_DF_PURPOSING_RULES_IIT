/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class linksFields extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"linksFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links\",\"fields\":[{\"name\":\"document_metadata\",\"type\":[\"null\",\"string\"],\"doc\":\"Link to the document metadata associated with this filing history item. See the Document API documentation for more details.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"self\",\"type\":[\"null\",\"string\"],\"doc\":\"Link to this filing history item.\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Link to the document metadata associated with this filing history item. See the Document API documentation for more details. */
  @Deprecated public java.lang.CharSequence document_metadata;
  /** Link to this filing history item. */
  @Deprecated public java.lang.CharSequence self;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public linksFields() {}

  /**
   * All-args constructor.
   */
  public linksFields(java.lang.CharSequence document_metadata, java.lang.CharSequence self) {
    this.document_metadata = document_metadata;
    this.self = self;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return document_metadata;
    case 1: return self;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: document_metadata = (java.lang.CharSequence)value$; break;
    case 1: self = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'document_metadata' field.
   * Link to the document metadata associated with this filing history item. See the Document API documentation for more details.   */
  public java.lang.CharSequence getDocumentMetadata() {
    return document_metadata;
  }

  /**
   * Sets the value of the 'document_metadata' field.
   * Link to the document metadata associated with this filing history item. See the Document API documentation for more details.   * @param value the value to set.
   */
  public void setDocumentMetadata(java.lang.CharSequence value) {
    this.document_metadata = value;
  }

  /**
   * Gets the value of the 'self' field.
   * Link to this filing history item.   */
  public java.lang.CharSequence getSelf() {
    return self;
  }

  /**
   * Sets the value of the 'self' field.
   * Link to this filing history item.   * @param value the value to set.
   */
  public void setSelf(java.lang.CharSequence value) {
    this.self = value;
  }

  /** Creates a new linksFields RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields.Builder();
  }
  
  /** Creates a new linksFields RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields.Builder other) {
    return new com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields.Builder(other);
  }
  
  /** Creates a new linksFields RecordBuilder by copying an existing linksFields instance */
  public static com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields other) {
    return new com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields.Builder(other);
  }
  
  /**
   * RecordBuilder for linksFields instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<linksFields>
    implements org.apache.avro.data.RecordBuilder<linksFields> {

    private java.lang.CharSequence document_metadata;
    private java.lang.CharSequence self;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.document_metadata)) {
        this.document_metadata = data().deepCopy(fields()[0].schema(), other.document_metadata);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.self)) {
        this.self = data().deepCopy(fields()[1].schema(), other.self);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing linksFields instance */
    private Builder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields other) {
            super(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields.SCHEMA$);
      if (isValidValue(fields()[0], other.document_metadata)) {
        this.document_metadata = data().deepCopy(fields()[0].schema(), other.document_metadata);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.self)) {
        this.self = data().deepCopy(fields()[1].schema(), other.self);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'document_metadata' field */
    public java.lang.CharSequence getDocumentMetadata() {
      return document_metadata;
    }
    
    /** Sets the value of the 'document_metadata' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields.Builder setDocumentMetadata(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.document_metadata = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'document_metadata' field has been set */
    public boolean hasDocumentMetadata() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'document_metadata' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields.Builder clearDocumentMetadata() {
      document_metadata = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'self' field */
    public java.lang.CharSequence getSelf() {
      return self;
    }
    
    /** Sets the value of the 'self' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields.Builder setSelf(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.self = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'self' field has been set */
    public boolean hasSelf() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'self' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.links.linksFields.Builder clearSelf() {
      self = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public linksFields build() {
      try {
        linksFields record = new linksFields();
        record.document_metadata = fieldSetFlags()[0] ? this.document_metadata : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.self = fieldSetFlags()[1] ? this.self : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
