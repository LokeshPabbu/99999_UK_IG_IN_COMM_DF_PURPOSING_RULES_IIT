/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class StandardisedFields extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StandardisedFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields\",\"fields\":[{\"name\":\"PERSON_TITLE\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised disqualified person title\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_FIRST_NAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised disqualified person first name\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_SURNAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised disqualified person surname\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_HONOURS\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised disqualified person honours\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_ADDRESS_LINE1\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised disqualified person address line1\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_ADDRESS_LINE2\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised disqualified person address line2\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_POSTTOWN\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised disqualified person address posttown\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_COUNTY\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised disqualified person address county\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_COUNTRY\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised disqualified person address country\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_NATIONALITY\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised disqualified person address nationality\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_CORPORATE_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised disqualified person corporate number\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_COUNTRY_REGISTRATION\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised disqualified person country registration\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PROCESSING_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Date on which data loaded on Data Fabric\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"FORMAT_OF_SUPPLY\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates format of supplied file\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"MIGRATION_FLAG\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"TAPE_REFERENCE_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Unique number assigned by Companies House to each supplied file\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_DATA_SOURCE\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates source of data\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"OFFICER_KEY\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer key\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"LOOKUP_DOB\",\"type\":[\"null\",\"string\"],\"doc\":\"Date of birth from lookup\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_NUMBER_PREFIX_MATCHED\",\"type\":[\"null\",\"string\"],\"doc\":\"Person number prefix\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"entity\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"entityFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.entity\",\"fields\":[{\"name\":\"commercial\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"commercialFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.entity.commercial\",\"fields\":[{\"name\":\"legacyIds\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"legacyIdFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.entity.commercial.legacyids\",\"fields\":[{\"name\":\"LEGACY_ID_COMPANY_REGISTERED_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Company Number\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"identifiers\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"identifierFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.entity.commercial.identifiers\",\"fields\":[{\"name\":\"NAME_BUSINESS_COMPANY_TYPE\",\"type\":[\"null\",\"string\"],\"doc\":\"Type of company - L for Limited\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_BUSINESS_VAT\",\"type\":[\"null\",\"string\"],\"doc\":\"VAT number field\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_BUSINESS_EMAIL\",\"type\":[\"null\",\"string\"],\"doc\":\"EMAIL ID field\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_DISSOLVED_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Dissolution Date field\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_INCORPORATION_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Date of incorporation in CCYYMMDD format\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_UPDATE_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"This is load date and will be a system date\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_DATA_SOURCE\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates source of data\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"website\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"doc\":\"Supplied Websites\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"phones\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"doc\":\"Supplied Phone number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"names\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"doc\":\"Standardised Company Names as per Keying & Linking inputs\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"addresses\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"doc\":\"Standardised postcode as per Keying & Linking inputs\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"discoveryData\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"discoveryDataFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.entity.commercial.discoverydata\",\"fields\":[{\"name\":\"DISCOVERY_CLIENT_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Client Number for INSIGHT_ACCOUNT and CCDS_ACCOUNT asset\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_FACILITY_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Facility Number for CCDS_ACCOUNT\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_DEFENDENT_ID\",\"type\":[\"null\",\"string\"],\"doc\":\"Defendent ID for COURT_JUDGMENT\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_DRC_ID\",\"type\":[\"null\",\"string\"],\"doc\":\"DRC_ID for NONLIMITED_REGISTER\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_URN\",\"type\":[\"null\",\"string\"],\"doc\":\"Unique reference number of COMPANY_CIFAS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_CASE_ID\",\"type\":[\"null\",\"string\"],\"doc\":\"Case ID of COMPANY_CIFAS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_CLN_BUSINESS_NAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Cleansed business name\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_ACCOUNT_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Account Number for INSIGHT_ACCOUNT \",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null}]}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Standardised disqualified person title */
  @Deprecated public java.lang.CharSequence PERSON_TITLE;
  /** Standardised disqualified person first name */
  @Deprecated public java.lang.CharSequence PERSON_FIRST_NAME;
  /** Standardised disqualified person surname */
  @Deprecated public java.lang.CharSequence PERSON_SURNAME;
  /** Standardised disqualified person honours */
  @Deprecated public java.lang.CharSequence PERSON_HONOURS;
  /** Standardised disqualified person address line1 */
  @Deprecated public java.lang.CharSequence PERSON_ADDRESS_LINE1;
  /** Standardised disqualified person address line2 */
  @Deprecated public java.lang.CharSequence PERSON_ADDRESS_LINE2;
  /** Standardised disqualified person address posttown */
  @Deprecated public java.lang.CharSequence PERSON_POSTTOWN;
  /** Standardised disqualified person address county */
  @Deprecated public java.lang.CharSequence PERSON_COUNTY;
  /** Standardised disqualified person address country */
  @Deprecated public java.lang.CharSequence PERSON_COUNTRY;
  /** Standardised disqualified person address nationality */
  @Deprecated public java.lang.CharSequence PERSON_NATIONALITY;
  /** Standardised disqualified person corporate number */
  @Deprecated public java.lang.CharSequence PERSON_CORPORATE_NUMBER;
  /** Standardised disqualified person country registration */
  @Deprecated public java.lang.CharSequence PERSON_COUNTRY_REGISTRATION;
  /** Date on which data loaded on Data Fabric */
  @Deprecated public java.lang.CharSequence PROCESSING_DATE;
  /** Indicates format of supplied file */
  @Deprecated public java.lang.CharSequence FORMAT_OF_SUPPLY;
  /** Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live */
  @Deprecated public java.lang.CharSequence MIGRATION_FLAG;
  /** Unique number assigned by Companies House to each supplied file */
  @Deprecated public java.lang.CharSequence TAPE_REFERENCE_NUMBER;
  /** Indicates source of data */
  @Deprecated public java.lang.CharSequence IDENTIFIER_DATA_SOURCE;
  /** Officer key */
  @Deprecated public java.lang.CharSequence OFFICER_KEY;
  /** Date of birth from lookup */
  @Deprecated public java.lang.CharSequence LOOKUP_DOB;
  /** Person number prefix */
  @Deprecated public java.lang.CharSequence PERSON_NUMBER_PREFIX_MATCHED;
  @Deprecated public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.entity.entityFields entity;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public StandardisedFields() {}

  /**
   * All-args constructor.
   */
  public StandardisedFields(java.lang.CharSequence PERSON_TITLE, java.lang.CharSequence PERSON_FIRST_NAME, java.lang.CharSequence PERSON_SURNAME, java.lang.CharSequence PERSON_HONOURS, java.lang.CharSequence PERSON_ADDRESS_LINE1, java.lang.CharSequence PERSON_ADDRESS_LINE2, java.lang.CharSequence PERSON_POSTTOWN, java.lang.CharSequence PERSON_COUNTY, java.lang.CharSequence PERSON_COUNTRY, java.lang.CharSequence PERSON_NATIONALITY, java.lang.CharSequence PERSON_CORPORATE_NUMBER, java.lang.CharSequence PERSON_COUNTRY_REGISTRATION, java.lang.CharSequence PROCESSING_DATE, java.lang.CharSequence FORMAT_OF_SUPPLY, java.lang.CharSequence MIGRATION_FLAG, java.lang.CharSequence TAPE_REFERENCE_NUMBER, java.lang.CharSequence IDENTIFIER_DATA_SOURCE, java.lang.CharSequence OFFICER_KEY, java.lang.CharSequence LOOKUP_DOB, java.lang.CharSequence PERSON_NUMBER_PREFIX_MATCHED, com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.entity.entityFields entity) {
    this.PERSON_TITLE = PERSON_TITLE;
    this.PERSON_FIRST_NAME = PERSON_FIRST_NAME;
    this.PERSON_SURNAME = PERSON_SURNAME;
    this.PERSON_HONOURS = PERSON_HONOURS;
    this.PERSON_ADDRESS_LINE1 = PERSON_ADDRESS_LINE1;
    this.PERSON_ADDRESS_LINE2 = PERSON_ADDRESS_LINE2;
    this.PERSON_POSTTOWN = PERSON_POSTTOWN;
    this.PERSON_COUNTY = PERSON_COUNTY;
    this.PERSON_COUNTRY = PERSON_COUNTRY;
    this.PERSON_NATIONALITY = PERSON_NATIONALITY;
    this.PERSON_CORPORATE_NUMBER = PERSON_CORPORATE_NUMBER;
    this.PERSON_COUNTRY_REGISTRATION = PERSON_COUNTRY_REGISTRATION;
    this.PROCESSING_DATE = PROCESSING_DATE;
    this.FORMAT_OF_SUPPLY = FORMAT_OF_SUPPLY;
    this.MIGRATION_FLAG = MIGRATION_FLAG;
    this.TAPE_REFERENCE_NUMBER = TAPE_REFERENCE_NUMBER;
    this.IDENTIFIER_DATA_SOURCE = IDENTIFIER_DATA_SOURCE;
    this.OFFICER_KEY = OFFICER_KEY;
    this.LOOKUP_DOB = LOOKUP_DOB;
    this.PERSON_NUMBER_PREFIX_MATCHED = PERSON_NUMBER_PREFIX_MATCHED;
    this.entity = entity;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return PERSON_TITLE;
    case 1: return PERSON_FIRST_NAME;
    case 2: return PERSON_SURNAME;
    case 3: return PERSON_HONOURS;
    case 4: return PERSON_ADDRESS_LINE1;
    case 5: return PERSON_ADDRESS_LINE2;
    case 6: return PERSON_POSTTOWN;
    case 7: return PERSON_COUNTY;
    case 8: return PERSON_COUNTRY;
    case 9: return PERSON_NATIONALITY;
    case 10: return PERSON_CORPORATE_NUMBER;
    case 11: return PERSON_COUNTRY_REGISTRATION;
    case 12: return PROCESSING_DATE;
    case 13: return FORMAT_OF_SUPPLY;
    case 14: return MIGRATION_FLAG;
    case 15: return TAPE_REFERENCE_NUMBER;
    case 16: return IDENTIFIER_DATA_SOURCE;
    case 17: return OFFICER_KEY;
    case 18: return LOOKUP_DOB;
    case 19: return PERSON_NUMBER_PREFIX_MATCHED;
    case 20: return entity;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: PERSON_TITLE = (java.lang.CharSequence)value$; break;
    case 1: PERSON_FIRST_NAME = (java.lang.CharSequence)value$; break;
    case 2: PERSON_SURNAME = (java.lang.CharSequence)value$; break;
    case 3: PERSON_HONOURS = (java.lang.CharSequence)value$; break;
    case 4: PERSON_ADDRESS_LINE1 = (java.lang.CharSequence)value$; break;
    case 5: PERSON_ADDRESS_LINE2 = (java.lang.CharSequence)value$; break;
    case 6: PERSON_POSTTOWN = (java.lang.CharSequence)value$; break;
    case 7: PERSON_COUNTY = (java.lang.CharSequence)value$; break;
    case 8: PERSON_COUNTRY = (java.lang.CharSequence)value$; break;
    case 9: PERSON_NATIONALITY = (java.lang.CharSequence)value$; break;
    case 10: PERSON_CORPORATE_NUMBER = (java.lang.CharSequence)value$; break;
    case 11: PERSON_COUNTRY_REGISTRATION = (java.lang.CharSequence)value$; break;
    case 12: PROCESSING_DATE = (java.lang.CharSequence)value$; break;
    case 13: FORMAT_OF_SUPPLY = (java.lang.CharSequence)value$; break;
    case 14: MIGRATION_FLAG = (java.lang.CharSequence)value$; break;
    case 15: TAPE_REFERENCE_NUMBER = (java.lang.CharSequence)value$; break;
    case 16: IDENTIFIER_DATA_SOURCE = (java.lang.CharSequence)value$; break;
    case 17: OFFICER_KEY = (java.lang.CharSequence)value$; break;
    case 18: LOOKUP_DOB = (java.lang.CharSequence)value$; break;
    case 19: PERSON_NUMBER_PREFIX_MATCHED = (java.lang.CharSequence)value$; break;
    case 20: entity = (com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.entity.entityFields)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'PERSON_TITLE' field.
   * Standardised disqualified person title   */
  public java.lang.CharSequence getPERSONTITLE() {
    return PERSON_TITLE;
  }

  /**
   * Sets the value of the 'PERSON_TITLE' field.
   * Standardised disqualified person title   * @param value the value to set.
   */
  public void setPERSONTITLE(java.lang.CharSequence value) {
    this.PERSON_TITLE = value;
  }

  /**
   * Gets the value of the 'PERSON_FIRST_NAME' field.
   * Standardised disqualified person first name   */
  public java.lang.CharSequence getPERSONFIRSTNAME() {
    return PERSON_FIRST_NAME;
  }

  /**
   * Sets the value of the 'PERSON_FIRST_NAME' field.
   * Standardised disqualified person first name   * @param value the value to set.
   */
  public void setPERSONFIRSTNAME(java.lang.CharSequence value) {
    this.PERSON_FIRST_NAME = value;
  }

  /**
   * Gets the value of the 'PERSON_SURNAME' field.
   * Standardised disqualified person surname   */
  public java.lang.CharSequence getPERSONSURNAME() {
    return PERSON_SURNAME;
  }

  /**
   * Sets the value of the 'PERSON_SURNAME' field.
   * Standardised disqualified person surname   * @param value the value to set.
   */
  public void setPERSONSURNAME(java.lang.CharSequence value) {
    this.PERSON_SURNAME = value;
  }

  /**
   * Gets the value of the 'PERSON_HONOURS' field.
   * Standardised disqualified person honours   */
  public java.lang.CharSequence getPERSONHONOURS() {
    return PERSON_HONOURS;
  }

  /**
   * Sets the value of the 'PERSON_HONOURS' field.
   * Standardised disqualified person honours   * @param value the value to set.
   */
  public void setPERSONHONOURS(java.lang.CharSequence value) {
    this.PERSON_HONOURS = value;
  }

  /**
   * Gets the value of the 'PERSON_ADDRESS_LINE1' field.
   * Standardised disqualified person address line1   */
  public java.lang.CharSequence getPERSONADDRESSLINE1() {
    return PERSON_ADDRESS_LINE1;
  }

  /**
   * Sets the value of the 'PERSON_ADDRESS_LINE1' field.
   * Standardised disqualified person address line1   * @param value the value to set.
   */
  public void setPERSONADDRESSLINE1(java.lang.CharSequence value) {
    this.PERSON_ADDRESS_LINE1 = value;
  }

  /**
   * Gets the value of the 'PERSON_ADDRESS_LINE2' field.
   * Standardised disqualified person address line2   */
  public java.lang.CharSequence getPERSONADDRESSLINE2() {
    return PERSON_ADDRESS_LINE2;
  }

  /**
   * Sets the value of the 'PERSON_ADDRESS_LINE2' field.
   * Standardised disqualified person address line2   * @param value the value to set.
   */
  public void setPERSONADDRESSLINE2(java.lang.CharSequence value) {
    this.PERSON_ADDRESS_LINE2 = value;
  }

  /**
   * Gets the value of the 'PERSON_POSTTOWN' field.
   * Standardised disqualified person address posttown   */
  public java.lang.CharSequence getPERSONPOSTTOWN() {
    return PERSON_POSTTOWN;
  }

  /**
   * Sets the value of the 'PERSON_POSTTOWN' field.
   * Standardised disqualified person address posttown   * @param value the value to set.
   */
  public void setPERSONPOSTTOWN(java.lang.CharSequence value) {
    this.PERSON_POSTTOWN = value;
  }

  /**
   * Gets the value of the 'PERSON_COUNTY' field.
   * Standardised disqualified person address county   */
  public java.lang.CharSequence getPERSONCOUNTY() {
    return PERSON_COUNTY;
  }

  /**
   * Sets the value of the 'PERSON_COUNTY' field.
   * Standardised disqualified person address county   * @param value the value to set.
   */
  public void setPERSONCOUNTY(java.lang.CharSequence value) {
    this.PERSON_COUNTY = value;
  }

  /**
   * Gets the value of the 'PERSON_COUNTRY' field.
   * Standardised disqualified person address country   */
  public java.lang.CharSequence getPERSONCOUNTRY() {
    return PERSON_COUNTRY;
  }

  /**
   * Sets the value of the 'PERSON_COUNTRY' field.
   * Standardised disqualified person address country   * @param value the value to set.
   */
  public void setPERSONCOUNTRY(java.lang.CharSequence value) {
    this.PERSON_COUNTRY = value;
  }

  /**
   * Gets the value of the 'PERSON_NATIONALITY' field.
   * Standardised disqualified person address nationality   */
  public java.lang.CharSequence getPERSONNATIONALITY() {
    return PERSON_NATIONALITY;
  }

  /**
   * Sets the value of the 'PERSON_NATIONALITY' field.
   * Standardised disqualified person address nationality   * @param value the value to set.
   */
  public void setPERSONNATIONALITY(java.lang.CharSequence value) {
    this.PERSON_NATIONALITY = value;
  }

  /**
   * Gets the value of the 'PERSON_CORPORATE_NUMBER' field.
   * Standardised disqualified person corporate number   */
  public java.lang.CharSequence getPERSONCORPORATENUMBER() {
    return PERSON_CORPORATE_NUMBER;
  }

  /**
   * Sets the value of the 'PERSON_CORPORATE_NUMBER' field.
   * Standardised disqualified person corporate number   * @param value the value to set.
   */
  public void setPERSONCORPORATENUMBER(java.lang.CharSequence value) {
    this.PERSON_CORPORATE_NUMBER = value;
  }

  /**
   * Gets the value of the 'PERSON_COUNTRY_REGISTRATION' field.
   * Standardised disqualified person country registration   */
  public java.lang.CharSequence getPERSONCOUNTRYREGISTRATION() {
    return PERSON_COUNTRY_REGISTRATION;
  }

  /**
   * Sets the value of the 'PERSON_COUNTRY_REGISTRATION' field.
   * Standardised disqualified person country registration   * @param value the value to set.
   */
  public void setPERSONCOUNTRYREGISTRATION(java.lang.CharSequence value) {
    this.PERSON_COUNTRY_REGISTRATION = value;
  }

  /**
   * Gets the value of the 'PROCESSING_DATE' field.
   * Date on which data loaded on Data Fabric   */
  public java.lang.CharSequence getPROCESSINGDATE() {
    return PROCESSING_DATE;
  }

  /**
   * Sets the value of the 'PROCESSING_DATE' field.
   * Date on which data loaded on Data Fabric   * @param value the value to set.
   */
  public void setPROCESSINGDATE(java.lang.CharSequence value) {
    this.PROCESSING_DATE = value;
  }

  /**
   * Gets the value of the 'FORMAT_OF_SUPPLY' field.
   * Indicates format of supplied file   */
  public java.lang.CharSequence getFORMATOFSUPPLY() {
    return FORMAT_OF_SUPPLY;
  }

  /**
   * Sets the value of the 'FORMAT_OF_SUPPLY' field.
   * Indicates format of supplied file   * @param value the value to set.
   */
  public void setFORMATOFSUPPLY(java.lang.CharSequence value) {
    this.FORMAT_OF_SUPPLY = value;
  }

  /**
   * Gets the value of the 'MIGRATION_FLAG' field.
   * Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live   */
  public java.lang.CharSequence getMIGRATIONFLAG() {
    return MIGRATION_FLAG;
  }

  /**
   * Sets the value of the 'MIGRATION_FLAG' field.
   * Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live   * @param value the value to set.
   */
  public void setMIGRATIONFLAG(java.lang.CharSequence value) {
    this.MIGRATION_FLAG = value;
  }

  /**
   * Gets the value of the 'TAPE_REFERENCE_NUMBER' field.
   * Unique number assigned by Companies House to each supplied file   */
  public java.lang.CharSequence getTAPEREFERENCENUMBER() {
    return TAPE_REFERENCE_NUMBER;
  }

  /**
   * Sets the value of the 'TAPE_REFERENCE_NUMBER' field.
   * Unique number assigned by Companies House to each supplied file   * @param value the value to set.
   */
  public void setTAPEREFERENCENUMBER(java.lang.CharSequence value) {
    this.TAPE_REFERENCE_NUMBER = value;
  }

  /**
   * Gets the value of the 'IDENTIFIER_DATA_SOURCE' field.
   * Indicates source of data   */
  public java.lang.CharSequence getIDENTIFIERDATASOURCE() {
    return IDENTIFIER_DATA_SOURCE;
  }

  /**
   * Sets the value of the 'IDENTIFIER_DATA_SOURCE' field.
   * Indicates source of data   * @param value the value to set.
   */
  public void setIDENTIFIERDATASOURCE(java.lang.CharSequence value) {
    this.IDENTIFIER_DATA_SOURCE = value;
  }

  /**
   * Gets the value of the 'OFFICER_KEY' field.
   * Officer key   */
  public java.lang.CharSequence getOFFICERKEY() {
    return OFFICER_KEY;
  }

  /**
   * Sets the value of the 'OFFICER_KEY' field.
   * Officer key   * @param value the value to set.
   */
  public void setOFFICERKEY(java.lang.CharSequence value) {
    this.OFFICER_KEY = value;
  }

  /**
   * Gets the value of the 'LOOKUP_DOB' field.
   * Date of birth from lookup   */
  public java.lang.CharSequence getLOOKUPDOB() {
    return LOOKUP_DOB;
  }

  /**
   * Sets the value of the 'LOOKUP_DOB' field.
   * Date of birth from lookup   * @param value the value to set.
   */
  public void setLOOKUPDOB(java.lang.CharSequence value) {
    this.LOOKUP_DOB = value;
  }

  /**
   * Gets the value of the 'PERSON_NUMBER_PREFIX_MATCHED' field.
   * Person number prefix   */
  public java.lang.CharSequence getPERSONNUMBERPREFIXMATCHED() {
    return PERSON_NUMBER_PREFIX_MATCHED;
  }

  /**
   * Sets the value of the 'PERSON_NUMBER_PREFIX_MATCHED' field.
   * Person number prefix   * @param value the value to set.
   */
  public void setPERSONNUMBERPREFIXMATCHED(java.lang.CharSequence value) {
    this.PERSON_NUMBER_PREFIX_MATCHED = value;
  }

  /**
   * Gets the value of the 'entity' field.
   */
  public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.entity.entityFields getEntity() {
    return entity;
  }

  /**
   * Sets the value of the 'entity' field.
   * @param value the value to set.
   */
  public void setEntity(com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.entity.entityFields value) {
    this.entity = value;
  }

  /** Creates a new StandardisedFields RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder();
  }
  
  /** Creates a new StandardisedFields RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder other) {
    return new com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder(other);
  }
  
  /** Creates a new StandardisedFields RecordBuilder by copying an existing StandardisedFields instance */
  public static com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields other) {
    return new com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder(other);
  }
  
  /**
   * RecordBuilder for StandardisedFields instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StandardisedFields>
    implements org.apache.avro.data.RecordBuilder<StandardisedFields> {

    private java.lang.CharSequence PERSON_TITLE;
    private java.lang.CharSequence PERSON_FIRST_NAME;
    private java.lang.CharSequence PERSON_SURNAME;
    private java.lang.CharSequence PERSON_HONOURS;
    private java.lang.CharSequence PERSON_ADDRESS_LINE1;
    private java.lang.CharSequence PERSON_ADDRESS_LINE2;
    private java.lang.CharSequence PERSON_POSTTOWN;
    private java.lang.CharSequence PERSON_COUNTY;
    private java.lang.CharSequence PERSON_COUNTRY;
    private java.lang.CharSequence PERSON_NATIONALITY;
    private java.lang.CharSequence PERSON_CORPORATE_NUMBER;
    private java.lang.CharSequence PERSON_COUNTRY_REGISTRATION;
    private java.lang.CharSequence PROCESSING_DATE;
    private java.lang.CharSequence FORMAT_OF_SUPPLY;
    private java.lang.CharSequence MIGRATION_FLAG;
    private java.lang.CharSequence TAPE_REFERENCE_NUMBER;
    private java.lang.CharSequence IDENTIFIER_DATA_SOURCE;
    private java.lang.CharSequence OFFICER_KEY;
    private java.lang.CharSequence LOOKUP_DOB;
    private java.lang.CharSequence PERSON_NUMBER_PREFIX_MATCHED;
    private com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.entity.entityFields entity;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.PERSON_TITLE)) {
        this.PERSON_TITLE = data().deepCopy(fields()[0].schema(), other.PERSON_TITLE);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.PERSON_FIRST_NAME)) {
        this.PERSON_FIRST_NAME = data().deepCopy(fields()[1].schema(), other.PERSON_FIRST_NAME);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.PERSON_SURNAME)) {
        this.PERSON_SURNAME = data().deepCopy(fields()[2].schema(), other.PERSON_SURNAME);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.PERSON_HONOURS)) {
        this.PERSON_HONOURS = data().deepCopy(fields()[3].schema(), other.PERSON_HONOURS);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.PERSON_ADDRESS_LINE1)) {
        this.PERSON_ADDRESS_LINE1 = data().deepCopy(fields()[4].schema(), other.PERSON_ADDRESS_LINE1);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.PERSON_ADDRESS_LINE2)) {
        this.PERSON_ADDRESS_LINE2 = data().deepCopy(fields()[5].schema(), other.PERSON_ADDRESS_LINE2);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.PERSON_POSTTOWN)) {
        this.PERSON_POSTTOWN = data().deepCopy(fields()[6].schema(), other.PERSON_POSTTOWN);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.PERSON_COUNTY)) {
        this.PERSON_COUNTY = data().deepCopy(fields()[7].schema(), other.PERSON_COUNTY);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.PERSON_COUNTRY)) {
        this.PERSON_COUNTRY = data().deepCopy(fields()[8].schema(), other.PERSON_COUNTRY);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.PERSON_NATIONALITY)) {
        this.PERSON_NATIONALITY = data().deepCopy(fields()[9].schema(), other.PERSON_NATIONALITY);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.PERSON_CORPORATE_NUMBER)) {
        this.PERSON_CORPORATE_NUMBER = data().deepCopy(fields()[10].schema(), other.PERSON_CORPORATE_NUMBER);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.PERSON_COUNTRY_REGISTRATION)) {
        this.PERSON_COUNTRY_REGISTRATION = data().deepCopy(fields()[11].schema(), other.PERSON_COUNTRY_REGISTRATION);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.PROCESSING_DATE)) {
        this.PROCESSING_DATE = data().deepCopy(fields()[12].schema(), other.PROCESSING_DATE);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.FORMAT_OF_SUPPLY)) {
        this.FORMAT_OF_SUPPLY = data().deepCopy(fields()[13].schema(), other.FORMAT_OF_SUPPLY);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.MIGRATION_FLAG)) {
        this.MIGRATION_FLAG = data().deepCopy(fields()[14].schema(), other.MIGRATION_FLAG);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.TAPE_REFERENCE_NUMBER)) {
        this.TAPE_REFERENCE_NUMBER = data().deepCopy(fields()[15].schema(), other.TAPE_REFERENCE_NUMBER);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.IDENTIFIER_DATA_SOURCE)) {
        this.IDENTIFIER_DATA_SOURCE = data().deepCopy(fields()[16].schema(), other.IDENTIFIER_DATA_SOURCE);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.OFFICER_KEY)) {
        this.OFFICER_KEY = data().deepCopy(fields()[17].schema(), other.OFFICER_KEY);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.LOOKUP_DOB)) {
        this.LOOKUP_DOB = data().deepCopy(fields()[18].schema(), other.LOOKUP_DOB);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.PERSON_NUMBER_PREFIX_MATCHED)) {
        this.PERSON_NUMBER_PREFIX_MATCHED = data().deepCopy(fields()[19].schema(), other.PERSON_NUMBER_PREFIX_MATCHED);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.entity)) {
        this.entity = data().deepCopy(fields()[20].schema(), other.entity);
        fieldSetFlags()[20] = true;
      }
    }
    
    /** Creates a Builder by copying an existing StandardisedFields instance */
    private Builder(com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields other) {
            super(com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.SCHEMA$);
      if (isValidValue(fields()[0], other.PERSON_TITLE)) {
        this.PERSON_TITLE = data().deepCopy(fields()[0].schema(), other.PERSON_TITLE);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.PERSON_FIRST_NAME)) {
        this.PERSON_FIRST_NAME = data().deepCopy(fields()[1].schema(), other.PERSON_FIRST_NAME);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.PERSON_SURNAME)) {
        this.PERSON_SURNAME = data().deepCopy(fields()[2].schema(), other.PERSON_SURNAME);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.PERSON_HONOURS)) {
        this.PERSON_HONOURS = data().deepCopy(fields()[3].schema(), other.PERSON_HONOURS);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.PERSON_ADDRESS_LINE1)) {
        this.PERSON_ADDRESS_LINE1 = data().deepCopy(fields()[4].schema(), other.PERSON_ADDRESS_LINE1);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.PERSON_ADDRESS_LINE2)) {
        this.PERSON_ADDRESS_LINE2 = data().deepCopy(fields()[5].schema(), other.PERSON_ADDRESS_LINE2);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.PERSON_POSTTOWN)) {
        this.PERSON_POSTTOWN = data().deepCopy(fields()[6].schema(), other.PERSON_POSTTOWN);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.PERSON_COUNTY)) {
        this.PERSON_COUNTY = data().deepCopy(fields()[7].schema(), other.PERSON_COUNTY);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.PERSON_COUNTRY)) {
        this.PERSON_COUNTRY = data().deepCopy(fields()[8].schema(), other.PERSON_COUNTRY);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.PERSON_NATIONALITY)) {
        this.PERSON_NATIONALITY = data().deepCopy(fields()[9].schema(), other.PERSON_NATIONALITY);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.PERSON_CORPORATE_NUMBER)) {
        this.PERSON_CORPORATE_NUMBER = data().deepCopy(fields()[10].schema(), other.PERSON_CORPORATE_NUMBER);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.PERSON_COUNTRY_REGISTRATION)) {
        this.PERSON_COUNTRY_REGISTRATION = data().deepCopy(fields()[11].schema(), other.PERSON_COUNTRY_REGISTRATION);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.PROCESSING_DATE)) {
        this.PROCESSING_DATE = data().deepCopy(fields()[12].schema(), other.PROCESSING_DATE);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.FORMAT_OF_SUPPLY)) {
        this.FORMAT_OF_SUPPLY = data().deepCopy(fields()[13].schema(), other.FORMAT_OF_SUPPLY);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.MIGRATION_FLAG)) {
        this.MIGRATION_FLAG = data().deepCopy(fields()[14].schema(), other.MIGRATION_FLAG);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.TAPE_REFERENCE_NUMBER)) {
        this.TAPE_REFERENCE_NUMBER = data().deepCopy(fields()[15].schema(), other.TAPE_REFERENCE_NUMBER);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.IDENTIFIER_DATA_SOURCE)) {
        this.IDENTIFIER_DATA_SOURCE = data().deepCopy(fields()[16].schema(), other.IDENTIFIER_DATA_SOURCE);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.OFFICER_KEY)) {
        this.OFFICER_KEY = data().deepCopy(fields()[17].schema(), other.OFFICER_KEY);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.LOOKUP_DOB)) {
        this.LOOKUP_DOB = data().deepCopy(fields()[18].schema(), other.LOOKUP_DOB);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.PERSON_NUMBER_PREFIX_MATCHED)) {
        this.PERSON_NUMBER_PREFIX_MATCHED = data().deepCopy(fields()[19].schema(), other.PERSON_NUMBER_PREFIX_MATCHED);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.entity)) {
        this.entity = data().deepCopy(fields()[20].schema(), other.entity);
        fieldSetFlags()[20] = true;
      }
    }

    /** Gets the value of the 'PERSON_TITLE' field */
    public java.lang.CharSequence getPERSONTITLE() {
      return PERSON_TITLE;
    }
    
    /** Sets the value of the 'PERSON_TITLE' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setPERSONTITLE(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.PERSON_TITLE = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_TITLE' field has been set */
    public boolean hasPERSONTITLE() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'PERSON_TITLE' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearPERSONTITLE() {
      PERSON_TITLE = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_FIRST_NAME' field */
    public java.lang.CharSequence getPERSONFIRSTNAME() {
      return PERSON_FIRST_NAME;
    }
    
    /** Sets the value of the 'PERSON_FIRST_NAME' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setPERSONFIRSTNAME(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.PERSON_FIRST_NAME = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_FIRST_NAME' field has been set */
    public boolean hasPERSONFIRSTNAME() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'PERSON_FIRST_NAME' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearPERSONFIRSTNAME() {
      PERSON_FIRST_NAME = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_SURNAME' field */
    public java.lang.CharSequence getPERSONSURNAME() {
      return PERSON_SURNAME;
    }
    
    /** Sets the value of the 'PERSON_SURNAME' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setPERSONSURNAME(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.PERSON_SURNAME = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_SURNAME' field has been set */
    public boolean hasPERSONSURNAME() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'PERSON_SURNAME' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearPERSONSURNAME() {
      PERSON_SURNAME = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_HONOURS' field */
    public java.lang.CharSequence getPERSONHONOURS() {
      return PERSON_HONOURS;
    }
    
    /** Sets the value of the 'PERSON_HONOURS' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setPERSONHONOURS(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.PERSON_HONOURS = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_HONOURS' field has been set */
    public boolean hasPERSONHONOURS() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'PERSON_HONOURS' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearPERSONHONOURS() {
      PERSON_HONOURS = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_ADDRESS_LINE1' field */
    public java.lang.CharSequence getPERSONADDRESSLINE1() {
      return PERSON_ADDRESS_LINE1;
    }
    
    /** Sets the value of the 'PERSON_ADDRESS_LINE1' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setPERSONADDRESSLINE1(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.PERSON_ADDRESS_LINE1 = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_ADDRESS_LINE1' field has been set */
    public boolean hasPERSONADDRESSLINE1() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'PERSON_ADDRESS_LINE1' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearPERSONADDRESSLINE1() {
      PERSON_ADDRESS_LINE1 = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_ADDRESS_LINE2' field */
    public java.lang.CharSequence getPERSONADDRESSLINE2() {
      return PERSON_ADDRESS_LINE2;
    }
    
    /** Sets the value of the 'PERSON_ADDRESS_LINE2' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setPERSONADDRESSLINE2(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.PERSON_ADDRESS_LINE2 = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_ADDRESS_LINE2' field has been set */
    public boolean hasPERSONADDRESSLINE2() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'PERSON_ADDRESS_LINE2' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearPERSONADDRESSLINE2() {
      PERSON_ADDRESS_LINE2 = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_POSTTOWN' field */
    public java.lang.CharSequence getPERSONPOSTTOWN() {
      return PERSON_POSTTOWN;
    }
    
    /** Sets the value of the 'PERSON_POSTTOWN' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setPERSONPOSTTOWN(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.PERSON_POSTTOWN = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_POSTTOWN' field has been set */
    public boolean hasPERSONPOSTTOWN() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'PERSON_POSTTOWN' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearPERSONPOSTTOWN() {
      PERSON_POSTTOWN = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_COUNTY' field */
    public java.lang.CharSequence getPERSONCOUNTY() {
      return PERSON_COUNTY;
    }
    
    /** Sets the value of the 'PERSON_COUNTY' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setPERSONCOUNTY(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.PERSON_COUNTY = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_COUNTY' field has been set */
    public boolean hasPERSONCOUNTY() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'PERSON_COUNTY' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearPERSONCOUNTY() {
      PERSON_COUNTY = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_COUNTRY' field */
    public java.lang.CharSequence getPERSONCOUNTRY() {
      return PERSON_COUNTRY;
    }
    
    /** Sets the value of the 'PERSON_COUNTRY' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setPERSONCOUNTRY(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.PERSON_COUNTRY = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_COUNTRY' field has been set */
    public boolean hasPERSONCOUNTRY() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'PERSON_COUNTRY' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearPERSONCOUNTRY() {
      PERSON_COUNTRY = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_NATIONALITY' field */
    public java.lang.CharSequence getPERSONNATIONALITY() {
      return PERSON_NATIONALITY;
    }
    
    /** Sets the value of the 'PERSON_NATIONALITY' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setPERSONNATIONALITY(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.PERSON_NATIONALITY = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_NATIONALITY' field has been set */
    public boolean hasPERSONNATIONALITY() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'PERSON_NATIONALITY' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearPERSONNATIONALITY() {
      PERSON_NATIONALITY = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_CORPORATE_NUMBER' field */
    public java.lang.CharSequence getPERSONCORPORATENUMBER() {
      return PERSON_CORPORATE_NUMBER;
    }
    
    /** Sets the value of the 'PERSON_CORPORATE_NUMBER' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setPERSONCORPORATENUMBER(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.PERSON_CORPORATE_NUMBER = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_CORPORATE_NUMBER' field has been set */
    public boolean hasPERSONCORPORATENUMBER() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'PERSON_CORPORATE_NUMBER' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearPERSONCORPORATENUMBER() {
      PERSON_CORPORATE_NUMBER = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_COUNTRY_REGISTRATION' field */
    public java.lang.CharSequence getPERSONCOUNTRYREGISTRATION() {
      return PERSON_COUNTRY_REGISTRATION;
    }
    
    /** Sets the value of the 'PERSON_COUNTRY_REGISTRATION' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setPERSONCOUNTRYREGISTRATION(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.PERSON_COUNTRY_REGISTRATION = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_COUNTRY_REGISTRATION' field has been set */
    public boolean hasPERSONCOUNTRYREGISTRATION() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'PERSON_COUNTRY_REGISTRATION' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearPERSONCOUNTRYREGISTRATION() {
      PERSON_COUNTRY_REGISTRATION = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'PROCESSING_DATE' field */
    public java.lang.CharSequence getPROCESSINGDATE() {
      return PROCESSING_DATE;
    }
    
    /** Sets the value of the 'PROCESSING_DATE' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setPROCESSINGDATE(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.PROCESSING_DATE = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'PROCESSING_DATE' field has been set */
    public boolean hasPROCESSINGDATE() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'PROCESSING_DATE' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearPROCESSINGDATE() {
      PROCESSING_DATE = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'FORMAT_OF_SUPPLY' field */
    public java.lang.CharSequence getFORMATOFSUPPLY() {
      return FORMAT_OF_SUPPLY;
    }
    
    /** Sets the value of the 'FORMAT_OF_SUPPLY' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setFORMATOFSUPPLY(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.FORMAT_OF_SUPPLY = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'FORMAT_OF_SUPPLY' field has been set */
    public boolean hasFORMATOFSUPPLY() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'FORMAT_OF_SUPPLY' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearFORMATOFSUPPLY() {
      FORMAT_OF_SUPPLY = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'MIGRATION_FLAG' field */
    public java.lang.CharSequence getMIGRATIONFLAG() {
      return MIGRATION_FLAG;
    }
    
    /** Sets the value of the 'MIGRATION_FLAG' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setMIGRATIONFLAG(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.MIGRATION_FLAG = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'MIGRATION_FLAG' field has been set */
    public boolean hasMIGRATIONFLAG() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'MIGRATION_FLAG' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearMIGRATIONFLAG() {
      MIGRATION_FLAG = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'TAPE_REFERENCE_NUMBER' field */
    public java.lang.CharSequence getTAPEREFERENCENUMBER() {
      return TAPE_REFERENCE_NUMBER;
    }
    
    /** Sets the value of the 'TAPE_REFERENCE_NUMBER' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setTAPEREFERENCENUMBER(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.TAPE_REFERENCE_NUMBER = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'TAPE_REFERENCE_NUMBER' field has been set */
    public boolean hasTAPEREFERENCENUMBER() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'TAPE_REFERENCE_NUMBER' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearTAPEREFERENCENUMBER() {
      TAPE_REFERENCE_NUMBER = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'IDENTIFIER_DATA_SOURCE' field */
    public java.lang.CharSequence getIDENTIFIERDATASOURCE() {
      return IDENTIFIER_DATA_SOURCE;
    }
    
    /** Sets the value of the 'IDENTIFIER_DATA_SOURCE' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setIDENTIFIERDATASOURCE(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.IDENTIFIER_DATA_SOURCE = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'IDENTIFIER_DATA_SOURCE' field has been set */
    public boolean hasIDENTIFIERDATASOURCE() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'IDENTIFIER_DATA_SOURCE' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearIDENTIFIERDATASOURCE() {
      IDENTIFIER_DATA_SOURCE = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'OFFICER_KEY' field */
    public java.lang.CharSequence getOFFICERKEY() {
      return OFFICER_KEY;
    }
    
    /** Sets the value of the 'OFFICER_KEY' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setOFFICERKEY(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.OFFICER_KEY = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'OFFICER_KEY' field has been set */
    public boolean hasOFFICERKEY() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'OFFICER_KEY' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearOFFICERKEY() {
      OFFICER_KEY = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'LOOKUP_DOB' field */
    public java.lang.CharSequence getLOOKUPDOB() {
      return LOOKUP_DOB;
    }
    
    /** Sets the value of the 'LOOKUP_DOB' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setLOOKUPDOB(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.LOOKUP_DOB = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'LOOKUP_DOB' field has been set */
    public boolean hasLOOKUPDOB() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'LOOKUP_DOB' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearLOOKUPDOB() {
      LOOKUP_DOB = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_NUMBER_PREFIX_MATCHED' field */
    public java.lang.CharSequence getPERSONNUMBERPREFIXMATCHED() {
      return PERSON_NUMBER_PREFIX_MATCHED;
    }
    
    /** Sets the value of the 'PERSON_NUMBER_PREFIX_MATCHED' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setPERSONNUMBERPREFIXMATCHED(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.PERSON_NUMBER_PREFIX_MATCHED = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_NUMBER_PREFIX_MATCHED' field has been set */
    public boolean hasPERSONNUMBERPREFIXMATCHED() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'PERSON_NUMBER_PREFIX_MATCHED' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearPERSONNUMBERPREFIXMATCHED() {
      PERSON_NUMBER_PREFIX_MATCHED = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'entity' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.entity.entityFields getEntity() {
      return entity;
    }
    
    /** Sets the value of the 'entity' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder setEntity(com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.entity.entityFields value) {
      validate(fields()[20], value);
      this.entity = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'entity' field has been set */
    public boolean hasEntity() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'entity' field */
    public com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.StandardisedFields.Builder clearEntity() {
      entity = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    @Override
    public StandardisedFields build() {
      try {
        StandardisedFields record = new StandardisedFields();
        record.PERSON_TITLE = fieldSetFlags()[0] ? this.PERSON_TITLE : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.PERSON_FIRST_NAME = fieldSetFlags()[1] ? this.PERSON_FIRST_NAME : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.PERSON_SURNAME = fieldSetFlags()[2] ? this.PERSON_SURNAME : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.PERSON_HONOURS = fieldSetFlags()[3] ? this.PERSON_HONOURS : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.PERSON_ADDRESS_LINE1 = fieldSetFlags()[4] ? this.PERSON_ADDRESS_LINE1 : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.PERSON_ADDRESS_LINE2 = fieldSetFlags()[5] ? this.PERSON_ADDRESS_LINE2 : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.PERSON_POSTTOWN = fieldSetFlags()[6] ? this.PERSON_POSTTOWN : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.PERSON_COUNTY = fieldSetFlags()[7] ? this.PERSON_COUNTY : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.PERSON_COUNTRY = fieldSetFlags()[8] ? this.PERSON_COUNTRY : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.PERSON_NATIONALITY = fieldSetFlags()[9] ? this.PERSON_NATIONALITY : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.PERSON_CORPORATE_NUMBER = fieldSetFlags()[10] ? this.PERSON_CORPORATE_NUMBER : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.PERSON_COUNTRY_REGISTRATION = fieldSetFlags()[11] ? this.PERSON_COUNTRY_REGISTRATION : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.PROCESSING_DATE = fieldSetFlags()[12] ? this.PROCESSING_DATE : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.FORMAT_OF_SUPPLY = fieldSetFlags()[13] ? this.FORMAT_OF_SUPPLY : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.MIGRATION_FLAG = fieldSetFlags()[14] ? this.MIGRATION_FLAG : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.TAPE_REFERENCE_NUMBER = fieldSetFlags()[15] ? this.TAPE_REFERENCE_NUMBER : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.IDENTIFIER_DATA_SOURCE = fieldSetFlags()[16] ? this.IDENTIFIER_DATA_SOURCE : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.OFFICER_KEY = fieldSetFlags()[17] ? this.OFFICER_KEY : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.LOOKUP_DOB = fieldSetFlags()[18] ? this.LOOKUP_DOB : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.PERSON_NUMBER_PREFIX_MATCHED = fieldSetFlags()[19] ? this.PERSON_NUMBER_PREFIX_MATCHED : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.entity = fieldSetFlags()[20] ? this.entity : (com.equifax.fabric.uk.ingestion.officerdisqualified.standardisedfields.entity.entityFields) defaultValue(fields()[20]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
