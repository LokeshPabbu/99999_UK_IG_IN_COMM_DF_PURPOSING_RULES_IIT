/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class StandardisedFields extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StandardisedFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields\",\"fields\":[{\"name\":\"companyRegisteredNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Company registration number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"personPrefix\",\"type\":[\"null\",\"string\"],\"doc\":\"First 8 bytes of Person Number field, Unique number assigned to URA data by Companies House\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"personSuffix\",\"type\":[\"null\",\"string\"],\"doc\":\"Last 4 bytes of Person Number field, For each update from Companies House Suffix count gets incremented\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"formatOfSupply\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates format of supplied file\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"migrationFlag\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"processingDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Date on which data loaded on Data Fabric\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"entity\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"entityFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.entity\",\"fields\":[{\"name\":\"commercial\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"commercialFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.entity.commercial\",\"fields\":[{\"name\":\"legacyIds\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"legacyIdFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.entity.commercial.legacyids\",\"fields\":[{\"name\":\"LEGACY_ID_COMPANY_REGISTERED_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Company Number\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"identifiers\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"identifierFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.entity.commercial.identifiers\",\"fields\":[{\"name\":\"NAME_BUSINESS_COMPANY_TYPE\",\"type\":[\"null\",\"string\"],\"doc\":\"Type of company - L for Limited\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_BUSINESS_VAT\",\"type\":[\"null\",\"string\"],\"doc\":\"VAT number field\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_BUSINESS_EMAIL\",\"type\":[\"null\",\"string\"],\"doc\":\"EMAIL ID field\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_DISSOLVED_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Dissolution Date field\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_INCORPORATION_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Date of incorporation in CCYYMMDD format\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_UPDATE_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"This is load date and will be a system date \",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_DATA_SOURCE\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates source of data\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"website\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Supplied Websites\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"phones\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Supplied Phone number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"names\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Standardised Company Names as per Keying & Linking inputs\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"addresses\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Standardised postcode as per Keying & Linking inputs\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"discoveryData\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"discoveryDataFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.entity.commercial.discoverydata\",\"fields\":[{\"name\":\"DISCOVERY_ACCOUNT_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Account Number for INSIGHT_ACCOUNT\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_CLIENT_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Client Number for INSIGHT_ACCOUNT and CCDS_ACCOUNT asset\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_FACILITY_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Facility Number for CCDS_ACCOUNT\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_DEFENDENT_ID\",\"type\":[\"null\",\"string\"],\"doc\":\"Defendent ID for COURT_JUDGMENT\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_DRC_ID\",\"type\":[\"null\",\"string\"],\"doc\":\"DRC_ID for NONLIMITED_REGISTER\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_URN\",\"type\":[\"null\",\"string\"],\"doc\":\"Unique reference number of COMPANY_CIFAS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_CASE_ID\",\"type\":[\"null\",\"string\"],\"doc\":\"Case ID of COMPANY_CIFAS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_CLN_BUSINESS_NAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Cleansed business name\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null}]}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Company registration number */
  @Deprecated public java.lang.CharSequence companyRegisteredNumber;
  /** First 8 bytes of Person Number field, Unique number assigned to URA data by Companies House */
  @Deprecated public java.lang.CharSequence personPrefix;
  /** Last 4 bytes of Person Number field, For each update from Companies House Suffix count gets incremented */
  @Deprecated public java.lang.CharSequence personSuffix;
  /** Indicates format of supplied file */
  @Deprecated public java.lang.CharSequence formatOfSupply;
  /** Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live */
  @Deprecated public java.lang.CharSequence migrationFlag;
  /** Date on which data loaded on Data Fabric */
  @Deprecated public java.lang.CharSequence processingDate;
  @Deprecated public com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.entity.entityFields entity;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public StandardisedFields() {}

  /**
   * All-args constructor.
   */
  public StandardisedFields(java.lang.CharSequence companyRegisteredNumber, java.lang.CharSequence personPrefix, java.lang.CharSequence personSuffix, java.lang.CharSequence formatOfSupply, java.lang.CharSequence migrationFlag, java.lang.CharSequence processingDate, com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.entity.entityFields entity) {
    this.companyRegisteredNumber = companyRegisteredNumber;
    this.personPrefix = personPrefix;
    this.personSuffix = personSuffix;
    this.formatOfSupply = formatOfSupply;
    this.migrationFlag = migrationFlag;
    this.processingDate = processingDate;
    this.entity = entity;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return companyRegisteredNumber;
    case 1: return personPrefix;
    case 2: return personSuffix;
    case 3: return formatOfSupply;
    case 4: return migrationFlag;
    case 5: return processingDate;
    case 6: return entity;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: companyRegisteredNumber = (java.lang.CharSequence)value$; break;
    case 1: personPrefix = (java.lang.CharSequence)value$; break;
    case 2: personSuffix = (java.lang.CharSequence)value$; break;
    case 3: formatOfSupply = (java.lang.CharSequence)value$; break;
    case 4: migrationFlag = (java.lang.CharSequence)value$; break;
    case 5: processingDate = (java.lang.CharSequence)value$; break;
    case 6: entity = (com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.entity.entityFields)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'companyRegisteredNumber' field.
   * Company registration number   */
  public java.lang.CharSequence getCompanyRegisteredNumber() {
    return companyRegisteredNumber;
  }

  /**
   * Sets the value of the 'companyRegisteredNumber' field.
   * Company registration number   * @param value the value to set.
   */
  public void setCompanyRegisteredNumber(java.lang.CharSequence value) {
    this.companyRegisteredNumber = value;
  }

  /**
   * Gets the value of the 'personPrefix' field.
   * First 8 bytes of Person Number field, Unique number assigned to URA data by Companies House   */
  public java.lang.CharSequence getPersonPrefix() {
    return personPrefix;
  }

  /**
   * Sets the value of the 'personPrefix' field.
   * First 8 bytes of Person Number field, Unique number assigned to URA data by Companies House   * @param value the value to set.
   */
  public void setPersonPrefix(java.lang.CharSequence value) {
    this.personPrefix = value;
  }

  /**
   * Gets the value of the 'personSuffix' field.
   * Last 4 bytes of Person Number field, For each update from Companies House Suffix count gets incremented   */
  public java.lang.CharSequence getPersonSuffix() {
    return personSuffix;
  }

  /**
   * Sets the value of the 'personSuffix' field.
   * Last 4 bytes of Person Number field, For each update from Companies House Suffix count gets incremented   * @param value the value to set.
   */
  public void setPersonSuffix(java.lang.CharSequence value) {
    this.personSuffix = value;
  }

  /**
   * Gets the value of the 'formatOfSupply' field.
   * Indicates format of supplied file   */
  public java.lang.CharSequence getFormatOfSupply() {
    return formatOfSupply;
  }

  /**
   * Sets the value of the 'formatOfSupply' field.
   * Indicates format of supplied file   * @param value the value to set.
   */
  public void setFormatOfSupply(java.lang.CharSequence value) {
    this.formatOfSupply = value;
  }

  /**
   * Gets the value of the 'migrationFlag' field.
   * Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live   */
  public java.lang.CharSequence getMigrationFlag() {
    return migrationFlag;
  }

  /**
   * Sets the value of the 'migrationFlag' field.
   * Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live   * @param value the value to set.
   */
  public void setMigrationFlag(java.lang.CharSequence value) {
    this.migrationFlag = value;
  }

  /**
   * Gets the value of the 'processingDate' field.
   * Date on which data loaded on Data Fabric   */
  public java.lang.CharSequence getProcessingDate() {
    return processingDate;
  }

  /**
   * Sets the value of the 'processingDate' field.
   * Date on which data loaded on Data Fabric   * @param value the value to set.
   */
  public void setProcessingDate(java.lang.CharSequence value) {
    this.processingDate = value;
  }

  /**
   * Gets the value of the 'entity' field.
   */
  public com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.entity.entityFields getEntity() {
    return entity;
  }

  /**
   * Sets the value of the 'entity' field.
   * @param value the value to set.
   */
  public void setEntity(com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.entity.entityFields value) {
    this.entity = value;
  }

  /** Creates a new StandardisedFields RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder();
  }
  
  /** Creates a new StandardisedFields RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder other) {
    return new com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder(other);
  }
  
  /** Creates a new StandardisedFields RecordBuilder by copying an existing StandardisedFields instance */
  public static com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields other) {
    return new com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder(other);
  }
  
  /**
   * RecordBuilder for StandardisedFields instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StandardisedFields>
    implements org.apache.avro.data.RecordBuilder<StandardisedFields> {

    private java.lang.CharSequence companyRegisteredNumber;
    private java.lang.CharSequence personPrefix;
    private java.lang.CharSequence personSuffix;
    private java.lang.CharSequence formatOfSupply;
    private java.lang.CharSequence migrationFlag;
    private java.lang.CharSequence processingDate;
    private com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.entity.entityFields entity;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.companyRegisteredNumber)) {
        this.companyRegisteredNumber = data().deepCopy(fields()[0].schema(), other.companyRegisteredNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.personPrefix)) {
        this.personPrefix = data().deepCopy(fields()[1].schema(), other.personPrefix);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.personSuffix)) {
        this.personSuffix = data().deepCopy(fields()[2].schema(), other.personSuffix);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.formatOfSupply)) {
        this.formatOfSupply = data().deepCopy(fields()[3].schema(), other.formatOfSupply);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.migrationFlag)) {
        this.migrationFlag = data().deepCopy(fields()[4].schema(), other.migrationFlag);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.processingDate)) {
        this.processingDate = data().deepCopy(fields()[5].schema(), other.processingDate);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.entity)) {
        this.entity = data().deepCopy(fields()[6].schema(), other.entity);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing StandardisedFields instance */
    private Builder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields other) {
            super(com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.SCHEMA$);
      if (isValidValue(fields()[0], other.companyRegisteredNumber)) {
        this.companyRegisteredNumber = data().deepCopy(fields()[0].schema(), other.companyRegisteredNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.personPrefix)) {
        this.personPrefix = data().deepCopy(fields()[1].schema(), other.personPrefix);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.personSuffix)) {
        this.personSuffix = data().deepCopy(fields()[2].schema(), other.personSuffix);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.formatOfSupply)) {
        this.formatOfSupply = data().deepCopy(fields()[3].schema(), other.formatOfSupply);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.migrationFlag)) {
        this.migrationFlag = data().deepCopy(fields()[4].schema(), other.migrationFlag);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.processingDate)) {
        this.processingDate = data().deepCopy(fields()[5].schema(), other.processingDate);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.entity)) {
        this.entity = data().deepCopy(fields()[6].schema(), other.entity);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'companyRegisteredNumber' field */
    public java.lang.CharSequence getCompanyRegisteredNumber() {
      return companyRegisteredNumber;
    }
    
    /** Sets the value of the 'companyRegisteredNumber' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder setCompanyRegisteredNumber(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.companyRegisteredNumber = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'companyRegisteredNumber' field has been set */
    public boolean hasCompanyRegisteredNumber() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'companyRegisteredNumber' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder clearCompanyRegisteredNumber() {
      companyRegisteredNumber = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'personPrefix' field */
    public java.lang.CharSequence getPersonPrefix() {
      return personPrefix;
    }
    
    /** Sets the value of the 'personPrefix' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder setPersonPrefix(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.personPrefix = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'personPrefix' field has been set */
    public boolean hasPersonPrefix() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'personPrefix' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder clearPersonPrefix() {
      personPrefix = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'personSuffix' field */
    public java.lang.CharSequence getPersonSuffix() {
      return personSuffix;
    }
    
    /** Sets the value of the 'personSuffix' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder setPersonSuffix(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.personSuffix = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'personSuffix' field has been set */
    public boolean hasPersonSuffix() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'personSuffix' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder clearPersonSuffix() {
      personSuffix = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'formatOfSupply' field */
    public java.lang.CharSequence getFormatOfSupply() {
      return formatOfSupply;
    }
    
    /** Sets the value of the 'formatOfSupply' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder setFormatOfSupply(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.formatOfSupply = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'formatOfSupply' field has been set */
    public boolean hasFormatOfSupply() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'formatOfSupply' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder clearFormatOfSupply() {
      formatOfSupply = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'migrationFlag' field */
    public java.lang.CharSequence getMigrationFlag() {
      return migrationFlag;
    }
    
    /** Sets the value of the 'migrationFlag' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder setMigrationFlag(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.migrationFlag = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'migrationFlag' field has been set */
    public boolean hasMigrationFlag() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'migrationFlag' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder clearMigrationFlag() {
      migrationFlag = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'processingDate' field */
    public java.lang.CharSequence getProcessingDate() {
      return processingDate;
    }
    
    /** Sets the value of the 'processingDate' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder setProcessingDate(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.processingDate = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'processingDate' field has been set */
    public boolean hasProcessingDate() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'processingDate' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder clearProcessingDate() {
      processingDate = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'entity' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.entity.entityFields getEntity() {
      return entity;
    }
    
    /** Sets the value of the 'entity' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder setEntity(com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.entity.entityFields value) {
      validate(fields()[6], value);
      this.entity = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'entity' field has been set */
    public boolean hasEntity() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'entity' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.StandardisedFields.Builder clearEntity() {
      entity = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public StandardisedFields build() {
      try {
        StandardisedFields record = new StandardisedFields();
        record.companyRegisteredNumber = fieldSetFlags()[0] ? this.companyRegisteredNumber : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.personPrefix = fieldSetFlags()[1] ? this.personPrefix : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.personSuffix = fieldSetFlags()[2] ? this.personSuffix : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.formatOfSupply = fieldSetFlags()[3] ? this.formatOfSupply : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.migrationFlag = fieldSetFlags()[4] ? this.migrationFlag : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.processingDate = fieldSetFlags()[5] ? this.processingDate : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.entity = fieldSetFlags()[6] ? this.entity : (com.equifax.fabric.uk.ingestion.officerresidentialaddr.standardisedfields.entity.entityFields) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
