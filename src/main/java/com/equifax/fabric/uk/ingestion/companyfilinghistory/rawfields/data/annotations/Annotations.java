/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Annotations extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Annotations\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations\",\"fields\":[{\"name\":\"annotation\",\"type\":[\"null\",\"string\"],\"doc\":\"The annotation text\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"date\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the annotation was added\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"A description of the annotation. For enumeration descriptions see description section in the enumeration mappings file\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The annotation text */
  @Deprecated public java.lang.CharSequence annotation;
  /** The date the annotation was added */
  @Deprecated public java.lang.CharSequence date;
  /** A description of the annotation. For enumeration descriptions see description section in the enumeration mappings file */
  @Deprecated public java.lang.CharSequence description;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Annotations() {}

  /**
   * All-args constructor.
   */
  public Annotations(java.lang.CharSequence annotation, java.lang.CharSequence date, java.lang.CharSequence description) {
    this.annotation = annotation;
    this.date = date;
    this.description = description;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return annotation;
    case 1: return date;
    case 2: return description;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: annotation = (java.lang.CharSequence)value$; break;
    case 1: date = (java.lang.CharSequence)value$; break;
    case 2: description = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'annotation' field.
   * The annotation text   */
  public java.lang.CharSequence getAnnotation() {
    return annotation;
  }

  /**
   * Sets the value of the 'annotation' field.
   * The annotation text   * @param value the value to set.
   */
  public void setAnnotation(java.lang.CharSequence value) {
    this.annotation = value;
  }

  /**
   * Gets the value of the 'date' field.
   * The date the annotation was added   */
  public java.lang.CharSequence getDate() {
    return date;
  }

  /**
   * Sets the value of the 'date' field.
   * The date the annotation was added   * @param value the value to set.
   */
  public void setDate(java.lang.CharSequence value) {
    this.date = value;
  }

  /**
   * Gets the value of the 'description' field.
   * A description of the annotation. For enumeration descriptions see description section in the enumeration mappings file   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * A description of the annotation. For enumeration descriptions see description section in the enumeration mappings file   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /** Creates a new Annotations RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations.Builder();
  }
  
  /** Creates a new Annotations RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations.Builder other) {
    return new com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations.Builder(other);
  }
  
  /** Creates a new Annotations RecordBuilder by copying an existing Annotations instance */
  public static com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations other) {
    return new com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations.Builder(other);
  }
  
  /**
   * RecordBuilder for Annotations instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Annotations>
    implements org.apache.avro.data.RecordBuilder<Annotations> {

    private java.lang.CharSequence annotation;
    private java.lang.CharSequence date;
    private java.lang.CharSequence description;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.annotation)) {
        this.annotation = data().deepCopy(fields()[0].schema(), other.annotation);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.date)) {
        this.date = data().deepCopy(fields()[1].schema(), other.date);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Annotations instance */
    private Builder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations other) {
            super(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations.SCHEMA$);
      if (isValidValue(fields()[0], other.annotation)) {
        this.annotation = data().deepCopy(fields()[0].schema(), other.annotation);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.date)) {
        this.date = data().deepCopy(fields()[1].schema(), other.date);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'annotation' field */
    public java.lang.CharSequence getAnnotation() {
      return annotation;
    }
    
    /** Sets the value of the 'annotation' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations.Builder setAnnotation(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.annotation = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'annotation' field has been set */
    public boolean hasAnnotation() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'annotation' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations.Builder clearAnnotation() {
      annotation = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'date' field */
    public java.lang.CharSequence getDate() {
      return date;
    }
    
    /** Sets the value of the 'date' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations.Builder setDate(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.date = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'date' field has been set */
    public boolean hasDate() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'date' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations.Builder clearDate() {
      date = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.CharSequence getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.description = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'description' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.annotations.Annotations.Builder clearDescription() {
      description = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public Annotations build() {
      try {
        Annotations record = new Annotations();
        record.annotation = fieldSetFlags()[0] ? this.annotation : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.date = fieldSetFlags()[1] ? this.date : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.description = fieldSetFlags()[2] ? this.description : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
