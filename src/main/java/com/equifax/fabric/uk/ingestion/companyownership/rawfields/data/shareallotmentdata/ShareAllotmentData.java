/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ShareAllotmentData extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ShareAllotmentData\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata\",\"fields\":[{\"name\":\"docRef\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareallotment data document reference\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"companyName\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareallotment data Company Name\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"formType\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareallotment data form type\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"docDate\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareallotment data document date\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dateAdded\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareallotment data date added\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dateProcessed\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareallotment data date processed\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"numOfShareholders\",\"type\":[\"null\",\"string\"],\"doc\":\"Number of shareholders\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"totalIssuedShareCapital\",\"type\":[\"null\",\"string\"],\"doc\":\"Total Issued Share Capital\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"deleteFlag\",\"type\":[\"null\",\"string\"],\"doc\":\"Delete Flag\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"freeLoadSN\",\"type\":[\"null\",\"string\"],\"doc\":\"Free Load SN\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"documentFlag\",\"type\":[\"null\",\"string\"],\"doc\":\"Document Flag\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"fullListFlag\",\"type\":[\"null\",\"string\"],\"doc\":\"Full List Flag\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"bulkListFlag\",\"type\":[\"null\",\"string\"],\"doc\":\"BulkList Flag\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"badTotalFlag\",\"type\":[\"null\",\"string\"],\"doc\":\"Bad Total Flag\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"bankCode\",\"type\":[\"null\",\"string\"],\"doc\":\"Bank Code\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"shareClassDetails\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ShareClassDetails\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails\",\"fields\":[{\"name\":\"currency\",\"type\":[\"null\",\"string\"],\"doc\":\"Currency\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"shareType\",\"type\":[\"null\",\"string\"],\"doc\":\"Share Type\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"numberAllotted\",\"type\":[\"null\",\"string\"],\"doc\":\"Shares Alloted Numbers\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"nominalPerShare\",\"type\":[\"null\",\"string\"],\"doc\":\"Nominal per share\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"paidPerShare\",\"type\":[\"null\",\"string\"],\"doc\":\"Paid per share\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"percentTreated\",\"type\":[\"null\",\"string\"],\"doc\":\"Percent Treated\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"percentCash\",\"type\":[\"null\",\"string\"],\"doc\":\"Percent Cash\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"consideration\",\"type\":[\"null\",\"string\"],\"doc\":\"Shares Considerations\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dateProcessed\",\"type\":[\"null\",\"string\"],\"doc\":\"Shares date processed\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"deleteFlag\",\"type\":[\"null\",\"string\"],\"doc\":\"Shares delete flag\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"freeLoadSN\",\"type\":[\"null\",\"string\"],\"doc\":\"Shares Free loan SN\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"classOfShares\",\"type\":[\"null\",\"string\"],\"doc\":\"Class of shares\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"sharesIssued\",\"type\":[\"null\",\"string\"],\"doc\":\"Shares issued\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"aggregatedNominalValue\",\"type\":[\"null\",\"string\"],\"doc\":\"Aggregated nominal value\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"shareValue\",\"type\":[\"null\",\"string\"],\"doc\":\"Share value\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"badTotalFlag\",\"type\":[\"null\",\"string\"],\"doc\":\"Bad Total Flag\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"stdClassOfShares\",\"type\":[\"null\",\"string\"],\"doc\":\"Share allotment data - Class of shares\",\"default\":null,\"dataClassification\":\"3\"}]}},\"default\":[]},{\"name\":\"shareHolderDetails\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ShareHolderDetails\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails\",\"fields\":[{\"name\":\"title\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder title\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"firstName\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder firstname\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"lastName\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder lastname\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"address\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"Shareholder address\",\"default\":[],\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"postCode\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder address postcode\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"shareType\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder share type\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"numberAllotted\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder number allotted\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ijFlag\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder Flag\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dateProcessed\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder date processed\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"deleteFlag\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder delete flag\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"freeLoadSN\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder free loan SN\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"companyOrIndividual\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder company or individual flag\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"shareHolderNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"classOfShares\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder Class of shares\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"numberOfShares\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder number of shares\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"aggregateValue\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder aggregate value\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"issueFlag\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder issue flag\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"shareIssueNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder share issue number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"companyRegNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder company registration number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"stdClassOfShares\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareholder Class of shares\",\"default\":null,\"dataClassification\":\"3\"}]}},\"default\":[]},{\"name\":\"review\",\"type\":[\"null\",\"string\"],\"doc\":\"Shareallottment data review\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Shareallotment data document reference */
  @Deprecated public java.lang.CharSequence docRef;
  /** Shareallotment data Company Name */
  @Deprecated public java.lang.CharSequence companyName;
  /** Shareallotment data form type */
  @Deprecated public java.lang.CharSequence formType;
  /** Shareallotment data document date */
  @Deprecated public java.lang.CharSequence docDate;
  /** Shareallotment data date added */
  @Deprecated public java.lang.CharSequence dateAdded;
  /** Shareallotment data date processed */
  @Deprecated public java.lang.CharSequence dateProcessed;
  /** Number of shareholders */
  @Deprecated public java.lang.CharSequence numOfShareholders;
  /** Total Issued Share Capital */
  @Deprecated public java.lang.CharSequence totalIssuedShareCapital;
  /** Delete Flag */
  @Deprecated public java.lang.CharSequence deleteFlag;
  /** Free Load SN */
  @Deprecated public java.lang.CharSequence freeLoadSN;
  /** Document Flag */
  @Deprecated public java.lang.CharSequence documentFlag;
  /** Full List Flag */
  @Deprecated public java.lang.CharSequence fullListFlag;
  /** BulkList Flag */
  @Deprecated public java.lang.CharSequence bulkListFlag;
  /** Bad Total Flag */
  @Deprecated public java.lang.CharSequence badTotalFlag;
  /** Bank Code */
  @Deprecated public java.lang.CharSequence bankCode;
  @Deprecated public java.util.List<com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails> shareClassDetails;
  @Deprecated public java.util.List<com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails> shareHolderDetails;
  /** Shareallottment data review */
  @Deprecated public java.lang.CharSequence review;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ShareAllotmentData() {}

  /**
   * All-args constructor.
   */
  public ShareAllotmentData(java.lang.CharSequence docRef, java.lang.CharSequence companyName, java.lang.CharSequence formType, java.lang.CharSequence docDate, java.lang.CharSequence dateAdded, java.lang.CharSequence dateProcessed, java.lang.CharSequence numOfShareholders, java.lang.CharSequence totalIssuedShareCapital, java.lang.CharSequence deleteFlag, java.lang.CharSequence freeLoadSN, java.lang.CharSequence documentFlag, java.lang.CharSequence fullListFlag, java.lang.CharSequence bulkListFlag, java.lang.CharSequence badTotalFlag, java.lang.CharSequence bankCode, java.util.List<com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails> shareClassDetails, java.util.List<com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails> shareHolderDetails, java.lang.CharSequence review) {
    this.docRef = docRef;
    this.companyName = companyName;
    this.formType = formType;
    this.docDate = docDate;
    this.dateAdded = dateAdded;
    this.dateProcessed = dateProcessed;
    this.numOfShareholders = numOfShareholders;
    this.totalIssuedShareCapital = totalIssuedShareCapital;
    this.deleteFlag = deleteFlag;
    this.freeLoadSN = freeLoadSN;
    this.documentFlag = documentFlag;
    this.fullListFlag = fullListFlag;
    this.bulkListFlag = bulkListFlag;
    this.badTotalFlag = badTotalFlag;
    this.bankCode = bankCode;
    this.shareClassDetails = shareClassDetails;
    this.shareHolderDetails = shareHolderDetails;
    this.review = review;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return docRef;
    case 1: return companyName;
    case 2: return formType;
    case 3: return docDate;
    case 4: return dateAdded;
    case 5: return dateProcessed;
    case 6: return numOfShareholders;
    case 7: return totalIssuedShareCapital;
    case 8: return deleteFlag;
    case 9: return freeLoadSN;
    case 10: return documentFlag;
    case 11: return fullListFlag;
    case 12: return bulkListFlag;
    case 13: return badTotalFlag;
    case 14: return bankCode;
    case 15: return shareClassDetails;
    case 16: return shareHolderDetails;
    case 17: return review;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: docRef = (java.lang.CharSequence)value$; break;
    case 1: companyName = (java.lang.CharSequence)value$; break;
    case 2: formType = (java.lang.CharSequence)value$; break;
    case 3: docDate = (java.lang.CharSequence)value$; break;
    case 4: dateAdded = (java.lang.CharSequence)value$; break;
    case 5: dateProcessed = (java.lang.CharSequence)value$; break;
    case 6: numOfShareholders = (java.lang.CharSequence)value$; break;
    case 7: totalIssuedShareCapital = (java.lang.CharSequence)value$; break;
    case 8: deleteFlag = (java.lang.CharSequence)value$; break;
    case 9: freeLoadSN = (java.lang.CharSequence)value$; break;
    case 10: documentFlag = (java.lang.CharSequence)value$; break;
    case 11: fullListFlag = (java.lang.CharSequence)value$; break;
    case 12: bulkListFlag = (java.lang.CharSequence)value$; break;
    case 13: badTotalFlag = (java.lang.CharSequence)value$; break;
    case 14: bankCode = (java.lang.CharSequence)value$; break;
    case 15: shareClassDetails = (java.util.List<com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails>)value$; break;
    case 16: shareHolderDetails = (java.util.List<com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails>)value$; break;
    case 17: review = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'docRef' field.
   * Shareallotment data document reference   */
  public java.lang.CharSequence getDocRef() {
    return docRef;
  }

  /**
   * Sets the value of the 'docRef' field.
   * Shareallotment data document reference   * @param value the value to set.
   */
  public void setDocRef(java.lang.CharSequence value) {
    this.docRef = value;
  }

  /**
   * Gets the value of the 'companyName' field.
   * Shareallotment data Company Name   */
  public java.lang.CharSequence getCompanyName() {
    return companyName;
  }

  /**
   * Sets the value of the 'companyName' field.
   * Shareallotment data Company Name   * @param value the value to set.
   */
  public void setCompanyName(java.lang.CharSequence value) {
    this.companyName = value;
  }

  /**
   * Gets the value of the 'formType' field.
   * Shareallotment data form type   */
  public java.lang.CharSequence getFormType() {
    return formType;
  }

  /**
   * Sets the value of the 'formType' field.
   * Shareallotment data form type   * @param value the value to set.
   */
  public void setFormType(java.lang.CharSequence value) {
    this.formType = value;
  }

  /**
   * Gets the value of the 'docDate' field.
   * Shareallotment data document date   */
  public java.lang.CharSequence getDocDate() {
    return docDate;
  }

  /**
   * Sets the value of the 'docDate' field.
   * Shareallotment data document date   * @param value the value to set.
   */
  public void setDocDate(java.lang.CharSequence value) {
    this.docDate = value;
  }

  /**
   * Gets the value of the 'dateAdded' field.
   * Shareallotment data date added   */
  public java.lang.CharSequence getDateAdded() {
    return dateAdded;
  }

  /**
   * Sets the value of the 'dateAdded' field.
   * Shareallotment data date added   * @param value the value to set.
   */
  public void setDateAdded(java.lang.CharSequence value) {
    this.dateAdded = value;
  }

  /**
   * Gets the value of the 'dateProcessed' field.
   * Shareallotment data date processed   */
  public java.lang.CharSequence getDateProcessed() {
    return dateProcessed;
  }

  /**
   * Sets the value of the 'dateProcessed' field.
   * Shareallotment data date processed   * @param value the value to set.
   */
  public void setDateProcessed(java.lang.CharSequence value) {
    this.dateProcessed = value;
  }

  /**
   * Gets the value of the 'numOfShareholders' field.
   * Number of shareholders   */
  public java.lang.CharSequence getNumOfShareholders() {
    return numOfShareholders;
  }

  /**
   * Sets the value of the 'numOfShareholders' field.
   * Number of shareholders   * @param value the value to set.
   */
  public void setNumOfShareholders(java.lang.CharSequence value) {
    this.numOfShareholders = value;
  }

  /**
   * Gets the value of the 'totalIssuedShareCapital' field.
   * Total Issued Share Capital   */
  public java.lang.CharSequence getTotalIssuedShareCapital() {
    return totalIssuedShareCapital;
  }

  /**
   * Sets the value of the 'totalIssuedShareCapital' field.
   * Total Issued Share Capital   * @param value the value to set.
   */
  public void setTotalIssuedShareCapital(java.lang.CharSequence value) {
    this.totalIssuedShareCapital = value;
  }

  /**
   * Gets the value of the 'deleteFlag' field.
   * Delete Flag   */
  public java.lang.CharSequence getDeleteFlag() {
    return deleteFlag;
  }

  /**
   * Sets the value of the 'deleteFlag' field.
   * Delete Flag   * @param value the value to set.
   */
  public void setDeleteFlag(java.lang.CharSequence value) {
    this.deleteFlag = value;
  }

  /**
   * Gets the value of the 'freeLoadSN' field.
   * Free Load SN   */
  public java.lang.CharSequence getFreeLoadSN() {
    return freeLoadSN;
  }

  /**
   * Sets the value of the 'freeLoadSN' field.
   * Free Load SN   * @param value the value to set.
   */
  public void setFreeLoadSN(java.lang.CharSequence value) {
    this.freeLoadSN = value;
  }

  /**
   * Gets the value of the 'documentFlag' field.
   * Document Flag   */
  public java.lang.CharSequence getDocumentFlag() {
    return documentFlag;
  }

  /**
   * Sets the value of the 'documentFlag' field.
   * Document Flag   * @param value the value to set.
   */
  public void setDocumentFlag(java.lang.CharSequence value) {
    this.documentFlag = value;
  }

  /**
   * Gets the value of the 'fullListFlag' field.
   * Full List Flag   */
  public java.lang.CharSequence getFullListFlag() {
    return fullListFlag;
  }

  /**
   * Sets the value of the 'fullListFlag' field.
   * Full List Flag   * @param value the value to set.
   */
  public void setFullListFlag(java.lang.CharSequence value) {
    this.fullListFlag = value;
  }

  /**
   * Gets the value of the 'bulkListFlag' field.
   * BulkList Flag   */
  public java.lang.CharSequence getBulkListFlag() {
    return bulkListFlag;
  }

  /**
   * Sets the value of the 'bulkListFlag' field.
   * BulkList Flag   * @param value the value to set.
   */
  public void setBulkListFlag(java.lang.CharSequence value) {
    this.bulkListFlag = value;
  }

  /**
   * Gets the value of the 'badTotalFlag' field.
   * Bad Total Flag   */
  public java.lang.CharSequence getBadTotalFlag() {
    return badTotalFlag;
  }

  /**
   * Sets the value of the 'badTotalFlag' field.
   * Bad Total Flag   * @param value the value to set.
   */
  public void setBadTotalFlag(java.lang.CharSequence value) {
    this.badTotalFlag = value;
  }

  /**
   * Gets the value of the 'bankCode' field.
   * Bank Code   */
  public java.lang.CharSequence getBankCode() {
    return bankCode;
  }

  /**
   * Sets the value of the 'bankCode' field.
   * Bank Code   * @param value the value to set.
   */
  public void setBankCode(java.lang.CharSequence value) {
    this.bankCode = value;
  }

  /**
   * Gets the value of the 'shareClassDetails' field.
   */
  public java.util.List<com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails> getShareClassDetails() {
    return shareClassDetails;
  }

  /**
   * Sets the value of the 'shareClassDetails' field.
   * @param value the value to set.
   */
  public void setShareClassDetails(java.util.List<com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails> value) {
    this.shareClassDetails = value;
  }

  /**
   * Gets the value of the 'shareHolderDetails' field.
   */
  public java.util.List<com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails> getShareHolderDetails() {
    return shareHolderDetails;
  }

  /**
   * Sets the value of the 'shareHolderDetails' field.
   * @param value the value to set.
   */
  public void setShareHolderDetails(java.util.List<com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails> value) {
    this.shareHolderDetails = value;
  }

  /**
   * Gets the value of the 'review' field.
   * Shareallottment data review   */
  public java.lang.CharSequence getReview() {
    return review;
  }

  /**
   * Sets the value of the 'review' field.
   * Shareallottment data review   * @param value the value to set.
   */
  public void setReview(java.lang.CharSequence value) {
    this.review = value;
  }

  /** Creates a new ShareAllotmentData RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder();
  }
  
  /** Creates a new ShareAllotmentData RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder other) {
    return new com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder(other);
  }
  
  /** Creates a new ShareAllotmentData RecordBuilder by copying an existing ShareAllotmentData instance */
  public static com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData other) {
    return new com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder(other);
  }
  
  /**
   * RecordBuilder for ShareAllotmentData instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ShareAllotmentData>
    implements org.apache.avro.data.RecordBuilder<ShareAllotmentData> {

    private java.lang.CharSequence docRef;
    private java.lang.CharSequence companyName;
    private java.lang.CharSequence formType;
    private java.lang.CharSequence docDate;
    private java.lang.CharSequence dateAdded;
    private java.lang.CharSequence dateProcessed;
    private java.lang.CharSequence numOfShareholders;
    private java.lang.CharSequence totalIssuedShareCapital;
    private java.lang.CharSequence deleteFlag;
    private java.lang.CharSequence freeLoadSN;
    private java.lang.CharSequence documentFlag;
    private java.lang.CharSequence fullListFlag;
    private java.lang.CharSequence bulkListFlag;
    private java.lang.CharSequence badTotalFlag;
    private java.lang.CharSequence bankCode;
    private java.util.List<com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails> shareClassDetails;
    private java.util.List<com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails> shareHolderDetails;
    private java.lang.CharSequence review;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.docRef)) {
        this.docRef = data().deepCopy(fields()[0].schema(), other.docRef);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.companyName)) {
        this.companyName = data().deepCopy(fields()[1].schema(), other.companyName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.formType)) {
        this.formType = data().deepCopy(fields()[2].schema(), other.formType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.docDate)) {
        this.docDate = data().deepCopy(fields()[3].schema(), other.docDate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.dateAdded)) {
        this.dateAdded = data().deepCopy(fields()[4].schema(), other.dateAdded);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.dateProcessed)) {
        this.dateProcessed = data().deepCopy(fields()[5].schema(), other.dateProcessed);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.numOfShareholders)) {
        this.numOfShareholders = data().deepCopy(fields()[6].schema(), other.numOfShareholders);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.totalIssuedShareCapital)) {
        this.totalIssuedShareCapital = data().deepCopy(fields()[7].schema(), other.totalIssuedShareCapital);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.deleteFlag)) {
        this.deleteFlag = data().deepCopy(fields()[8].schema(), other.deleteFlag);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.freeLoadSN)) {
        this.freeLoadSN = data().deepCopy(fields()[9].schema(), other.freeLoadSN);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.documentFlag)) {
        this.documentFlag = data().deepCopy(fields()[10].schema(), other.documentFlag);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.fullListFlag)) {
        this.fullListFlag = data().deepCopy(fields()[11].schema(), other.fullListFlag);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.bulkListFlag)) {
        this.bulkListFlag = data().deepCopy(fields()[12].schema(), other.bulkListFlag);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.badTotalFlag)) {
        this.badTotalFlag = data().deepCopy(fields()[13].schema(), other.badTotalFlag);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.bankCode)) {
        this.bankCode = data().deepCopy(fields()[14].schema(), other.bankCode);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.shareClassDetails)) {
        this.shareClassDetails = data().deepCopy(fields()[15].schema(), other.shareClassDetails);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.shareHolderDetails)) {
        this.shareHolderDetails = data().deepCopy(fields()[16].schema(), other.shareHolderDetails);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.review)) {
        this.review = data().deepCopy(fields()[17].schema(), other.review);
        fieldSetFlags()[17] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ShareAllotmentData instance */
    private Builder(com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData other) {
            super(com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.SCHEMA$);
      if (isValidValue(fields()[0], other.docRef)) {
        this.docRef = data().deepCopy(fields()[0].schema(), other.docRef);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.companyName)) {
        this.companyName = data().deepCopy(fields()[1].schema(), other.companyName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.formType)) {
        this.formType = data().deepCopy(fields()[2].schema(), other.formType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.docDate)) {
        this.docDate = data().deepCopy(fields()[3].schema(), other.docDate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.dateAdded)) {
        this.dateAdded = data().deepCopy(fields()[4].schema(), other.dateAdded);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.dateProcessed)) {
        this.dateProcessed = data().deepCopy(fields()[5].schema(), other.dateProcessed);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.numOfShareholders)) {
        this.numOfShareholders = data().deepCopy(fields()[6].schema(), other.numOfShareholders);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.totalIssuedShareCapital)) {
        this.totalIssuedShareCapital = data().deepCopy(fields()[7].schema(), other.totalIssuedShareCapital);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.deleteFlag)) {
        this.deleteFlag = data().deepCopy(fields()[8].schema(), other.deleteFlag);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.freeLoadSN)) {
        this.freeLoadSN = data().deepCopy(fields()[9].schema(), other.freeLoadSN);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.documentFlag)) {
        this.documentFlag = data().deepCopy(fields()[10].schema(), other.documentFlag);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.fullListFlag)) {
        this.fullListFlag = data().deepCopy(fields()[11].schema(), other.fullListFlag);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.bulkListFlag)) {
        this.bulkListFlag = data().deepCopy(fields()[12].schema(), other.bulkListFlag);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.badTotalFlag)) {
        this.badTotalFlag = data().deepCopy(fields()[13].schema(), other.badTotalFlag);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.bankCode)) {
        this.bankCode = data().deepCopy(fields()[14].schema(), other.bankCode);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.shareClassDetails)) {
        this.shareClassDetails = data().deepCopy(fields()[15].schema(), other.shareClassDetails);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.shareHolderDetails)) {
        this.shareHolderDetails = data().deepCopy(fields()[16].schema(), other.shareHolderDetails);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.review)) {
        this.review = data().deepCopy(fields()[17].schema(), other.review);
        fieldSetFlags()[17] = true;
      }
    }

    /** Gets the value of the 'docRef' field */
    public java.lang.CharSequence getDocRef() {
      return docRef;
    }
    
    /** Sets the value of the 'docRef' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder setDocRef(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.docRef = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'docRef' field has been set */
    public boolean hasDocRef() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'docRef' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder clearDocRef() {
      docRef = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'companyName' field */
    public java.lang.CharSequence getCompanyName() {
      return companyName;
    }
    
    /** Sets the value of the 'companyName' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder setCompanyName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.companyName = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'companyName' field has been set */
    public boolean hasCompanyName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'companyName' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder clearCompanyName() {
      companyName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'formType' field */
    public java.lang.CharSequence getFormType() {
      return formType;
    }
    
    /** Sets the value of the 'formType' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder setFormType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.formType = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'formType' field has been set */
    public boolean hasFormType() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'formType' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder clearFormType() {
      formType = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'docDate' field */
    public java.lang.CharSequence getDocDate() {
      return docDate;
    }
    
    /** Sets the value of the 'docDate' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder setDocDate(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.docDate = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'docDate' field has been set */
    public boolean hasDocDate() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'docDate' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder clearDocDate() {
      docDate = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'dateAdded' field */
    public java.lang.CharSequence getDateAdded() {
      return dateAdded;
    }
    
    /** Sets the value of the 'dateAdded' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder setDateAdded(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.dateAdded = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'dateAdded' field has been set */
    public boolean hasDateAdded() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'dateAdded' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder clearDateAdded() {
      dateAdded = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'dateProcessed' field */
    public java.lang.CharSequence getDateProcessed() {
      return dateProcessed;
    }
    
    /** Sets the value of the 'dateProcessed' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder setDateProcessed(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.dateProcessed = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'dateProcessed' field has been set */
    public boolean hasDateProcessed() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'dateProcessed' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder clearDateProcessed() {
      dateProcessed = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'numOfShareholders' field */
    public java.lang.CharSequence getNumOfShareholders() {
      return numOfShareholders;
    }
    
    /** Sets the value of the 'numOfShareholders' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder setNumOfShareholders(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.numOfShareholders = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'numOfShareholders' field has been set */
    public boolean hasNumOfShareholders() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'numOfShareholders' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder clearNumOfShareholders() {
      numOfShareholders = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'totalIssuedShareCapital' field */
    public java.lang.CharSequence getTotalIssuedShareCapital() {
      return totalIssuedShareCapital;
    }
    
    /** Sets the value of the 'totalIssuedShareCapital' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder setTotalIssuedShareCapital(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.totalIssuedShareCapital = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'totalIssuedShareCapital' field has been set */
    public boolean hasTotalIssuedShareCapital() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'totalIssuedShareCapital' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder clearTotalIssuedShareCapital() {
      totalIssuedShareCapital = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'deleteFlag' field */
    public java.lang.CharSequence getDeleteFlag() {
      return deleteFlag;
    }
    
    /** Sets the value of the 'deleteFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder setDeleteFlag(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.deleteFlag = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'deleteFlag' field has been set */
    public boolean hasDeleteFlag() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'deleteFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder clearDeleteFlag() {
      deleteFlag = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'freeLoadSN' field */
    public java.lang.CharSequence getFreeLoadSN() {
      return freeLoadSN;
    }
    
    /** Sets the value of the 'freeLoadSN' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder setFreeLoadSN(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.freeLoadSN = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'freeLoadSN' field has been set */
    public boolean hasFreeLoadSN() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'freeLoadSN' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder clearFreeLoadSN() {
      freeLoadSN = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'documentFlag' field */
    public java.lang.CharSequence getDocumentFlag() {
      return documentFlag;
    }
    
    /** Sets the value of the 'documentFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder setDocumentFlag(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.documentFlag = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'documentFlag' field has been set */
    public boolean hasDocumentFlag() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'documentFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder clearDocumentFlag() {
      documentFlag = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'fullListFlag' field */
    public java.lang.CharSequence getFullListFlag() {
      return fullListFlag;
    }
    
    /** Sets the value of the 'fullListFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder setFullListFlag(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.fullListFlag = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'fullListFlag' field has been set */
    public boolean hasFullListFlag() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'fullListFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder clearFullListFlag() {
      fullListFlag = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'bulkListFlag' field */
    public java.lang.CharSequence getBulkListFlag() {
      return bulkListFlag;
    }
    
    /** Sets the value of the 'bulkListFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder setBulkListFlag(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.bulkListFlag = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'bulkListFlag' field has been set */
    public boolean hasBulkListFlag() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'bulkListFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder clearBulkListFlag() {
      bulkListFlag = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'badTotalFlag' field */
    public java.lang.CharSequence getBadTotalFlag() {
      return badTotalFlag;
    }
    
    /** Sets the value of the 'badTotalFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder setBadTotalFlag(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.badTotalFlag = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'badTotalFlag' field has been set */
    public boolean hasBadTotalFlag() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'badTotalFlag' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder clearBadTotalFlag() {
      badTotalFlag = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'bankCode' field */
    public java.lang.CharSequence getBankCode() {
      return bankCode;
    }
    
    /** Sets the value of the 'bankCode' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder setBankCode(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.bankCode = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'bankCode' field has been set */
    public boolean hasBankCode() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'bankCode' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder clearBankCode() {
      bankCode = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'shareClassDetails' field */
    public java.util.List<com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails> getShareClassDetails() {
      return shareClassDetails;
    }
    
    /** Sets the value of the 'shareClassDetails' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder setShareClassDetails(java.util.List<com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails> value) {
      validate(fields()[15], value);
      this.shareClassDetails = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'shareClassDetails' field has been set */
    public boolean hasShareClassDetails() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'shareClassDetails' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder clearShareClassDetails() {
      shareClassDetails = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'shareHolderDetails' field */
    public java.util.List<com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails> getShareHolderDetails() {
      return shareHolderDetails;
    }
    
    /** Sets the value of the 'shareHolderDetails' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder setShareHolderDetails(java.util.List<com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails> value) {
      validate(fields()[16], value);
      this.shareHolderDetails = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'shareHolderDetails' field has been set */
    public boolean hasShareHolderDetails() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'shareHolderDetails' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder clearShareHolderDetails() {
      shareHolderDetails = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'review' field */
    public java.lang.CharSequence getReview() {
      return review;
    }
    
    /** Sets the value of the 'review' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder setReview(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.review = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'review' field has been set */
    public boolean hasReview() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'review' field */
    public com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.ShareAllotmentData.Builder clearReview() {
      review = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    @Override
    public ShareAllotmentData build() {
      try {
        ShareAllotmentData record = new ShareAllotmentData();
        record.docRef = fieldSetFlags()[0] ? this.docRef : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.companyName = fieldSetFlags()[1] ? this.companyName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.formType = fieldSetFlags()[2] ? this.formType : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.docDate = fieldSetFlags()[3] ? this.docDate : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.dateAdded = fieldSetFlags()[4] ? this.dateAdded : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.dateProcessed = fieldSetFlags()[5] ? this.dateProcessed : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.numOfShareholders = fieldSetFlags()[6] ? this.numOfShareholders : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.totalIssuedShareCapital = fieldSetFlags()[7] ? this.totalIssuedShareCapital : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.deleteFlag = fieldSetFlags()[8] ? this.deleteFlag : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.freeLoadSN = fieldSetFlags()[9] ? this.freeLoadSN : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.documentFlag = fieldSetFlags()[10] ? this.documentFlag : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.fullListFlag = fieldSetFlags()[11] ? this.fullListFlag : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.bulkListFlag = fieldSetFlags()[12] ? this.bulkListFlag : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.badTotalFlag = fieldSetFlags()[13] ? this.badTotalFlag : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.bankCode = fieldSetFlags()[14] ? this.bankCode : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.shareClassDetails = fieldSetFlags()[15] ? this.shareClassDetails : (java.util.List<com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareclassdetails.ShareClassDetails>) defaultValue(fields()[15]);
        record.shareHolderDetails = fieldSetFlags()[16] ? this.shareHolderDetails : (java.util.List<com.equifax.fabric.uk.ingestion.companyownership.rawfields.data.shareallotmentdata.shareholderdetails.ShareHolderDetails>) defaultValue(fields()[16]);
        record.review = fieldSetFlags()[17] ? this.review : (java.lang.CharSequence) defaultValue(fields()[17]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
