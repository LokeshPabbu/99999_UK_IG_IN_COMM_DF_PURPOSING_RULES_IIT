/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Event extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Event\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event\",\"fields\":[{\"name\":\"fields_changed\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"Array of fields that have been changed by this event. Nested fields are referenced by dot notation e.g. links.document_metadata\",\"default\":[],\"dataClassification\":\"3\"},{\"name\":\"published_at\",\"type\":[\"null\",\"string\"],\"doc\":\"The date and time the data notification was raised\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"timepoint\",\"type\":[\"null\",\"string\"],\"doc\":\"The point-in-time identifier for this stream document. Use to re-establish a connection to the stream at this point.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"doc\":\"The type of event denoted by this stream document. Possible values are: changed deleted\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Array of fields that have been changed by this event. Nested fields are referenced by dot notation e.g. links.document_metadata */
  @Deprecated public java.util.List<java.lang.CharSequence> fields_changed;
  /** The date and time the data notification was raised */
  @Deprecated public java.lang.CharSequence published_at;
  /** The point-in-time identifier for this stream document. Use to re-establish a connection to the stream at this point. */
  @Deprecated public java.lang.CharSequence timepoint;
  /** The type of event denoted by this stream document. Possible values are: changed deleted */
  @Deprecated public java.lang.CharSequence type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Event() {}

  /**
   * All-args constructor.
   */
  public Event(java.util.List<java.lang.CharSequence> fields_changed, java.lang.CharSequence published_at, java.lang.CharSequence timepoint, java.lang.CharSequence type) {
    this.fields_changed = fields_changed;
    this.published_at = published_at;
    this.timepoint = timepoint;
    this.type = type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return fields_changed;
    case 1: return published_at;
    case 2: return timepoint;
    case 3: return type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: fields_changed = (java.util.List<java.lang.CharSequence>)value$; break;
    case 1: published_at = (java.lang.CharSequence)value$; break;
    case 2: timepoint = (java.lang.CharSequence)value$; break;
    case 3: type = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'fields_changed' field.
   * Array of fields that have been changed by this event. Nested fields are referenced by dot notation e.g. links.document_metadata   */
  public java.util.List<java.lang.CharSequence> getFieldsChanged() {
    return fields_changed;
  }

  /**
   * Sets the value of the 'fields_changed' field.
   * Array of fields that have been changed by this event. Nested fields are referenced by dot notation e.g. links.document_metadata   * @param value the value to set.
   */
  public void setFieldsChanged(java.util.List<java.lang.CharSequence> value) {
    this.fields_changed = value;
  }

  /**
   * Gets the value of the 'published_at' field.
   * The date and time the data notification was raised   */
  public java.lang.CharSequence getPublishedAt() {
    return published_at;
  }

  /**
   * Sets the value of the 'published_at' field.
   * The date and time the data notification was raised   * @param value the value to set.
   */
  public void setPublishedAt(java.lang.CharSequence value) {
    this.published_at = value;
  }

  /**
   * Gets the value of the 'timepoint' field.
   * The point-in-time identifier for this stream document. Use to re-establish a connection to the stream at this point.   */
  public java.lang.CharSequence getTimepoint() {
    return timepoint;
  }

  /**
   * Sets the value of the 'timepoint' field.
   * The point-in-time identifier for this stream document. Use to re-establish a connection to the stream at this point.   * @param value the value to set.
   */
  public void setTimepoint(java.lang.CharSequence value) {
    this.timepoint = value;
  }

  /**
   * Gets the value of the 'type' field.
   * The type of event denoted by this stream document. Possible values are: changed deleted   */
  public java.lang.CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * The type of event denoted by this stream document. Possible values are: changed deleted   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /** Creates a new Event RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event.Builder();
  }
  
  /** Creates a new Event RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event.Builder newBuilder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event.Builder other) {
    return new com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event.Builder(other);
  }
  
  /** Creates a new Event RecordBuilder by copying an existing Event instance */
  public static com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event.Builder newBuilder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event other) {
    return new com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event.Builder(other);
  }
  
  /**
   * RecordBuilder for Event instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Event>
    implements org.apache.avro.data.RecordBuilder<Event> {

    private java.util.List<java.lang.CharSequence> fields_changed;
    private java.lang.CharSequence published_at;
    private java.lang.CharSequence timepoint;
    private java.lang.CharSequence type;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.fields_changed)) {
        this.fields_changed = data().deepCopy(fields()[0].schema(), other.fields_changed);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.published_at)) {
        this.published_at = data().deepCopy(fields()[1].schema(), other.published_at);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timepoint)) {
        this.timepoint = data().deepCopy(fields()[2].schema(), other.timepoint);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type)) {
        this.type = data().deepCopy(fields()[3].schema(), other.type);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Event instance */
    private Builder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event other) {
            super(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event.SCHEMA$);
      if (isValidValue(fields()[0], other.fields_changed)) {
        this.fields_changed = data().deepCopy(fields()[0].schema(), other.fields_changed);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.published_at)) {
        this.published_at = data().deepCopy(fields()[1].schema(), other.published_at);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timepoint)) {
        this.timepoint = data().deepCopy(fields()[2].schema(), other.timepoint);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type)) {
        this.type = data().deepCopy(fields()[3].schema(), other.type);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'fields_changed' field */
    public java.util.List<java.lang.CharSequence> getFieldsChanged() {
      return fields_changed;
    }
    
    /** Sets the value of the 'fields_changed' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event.Builder setFieldsChanged(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[0], value);
      this.fields_changed = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'fields_changed' field has been set */
    public boolean hasFieldsChanged() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'fields_changed' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event.Builder clearFieldsChanged() {
      fields_changed = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'published_at' field */
    public java.lang.CharSequence getPublishedAt() {
      return published_at;
    }
    
    /** Sets the value of the 'published_at' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event.Builder setPublishedAt(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.published_at = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'published_at' field has been set */
    public boolean hasPublishedAt() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'published_at' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event.Builder clearPublishedAt() {
      published_at = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'timepoint' field */
    public java.lang.CharSequence getTimepoint() {
      return timepoint;
    }
    
    /** Sets the value of the 'timepoint' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event.Builder setTimepoint(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.timepoint = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'timepoint' field has been set */
    public boolean hasTimepoint() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'timepoint' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event.Builder clearTimepoint() {
      timepoint = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public java.lang.CharSequence getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event.Builder setType(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.type = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'type' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event.Builder clearType() {
      type = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public Event build() {
      try {
        Event record = new Event();
        record.fields_changed = fieldSetFlags()[0] ? this.fields_changed : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[0]);
        record.published_at = fieldSetFlags()[1] ? this.published_at : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.timepoint = fieldSetFlags()[2] ? this.timepoint : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.type = fieldSetFlags()[3] ? this.type : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
