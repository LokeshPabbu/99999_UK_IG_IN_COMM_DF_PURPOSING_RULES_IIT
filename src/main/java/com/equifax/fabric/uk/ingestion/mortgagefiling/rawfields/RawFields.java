/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RawFields extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RawFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields\",\"fields\":[{\"name\":\"data\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Data\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data\",\"fields\":[{\"name\":\"acquired_on\",\"type\":[\"null\",\"string\"],\"doc\":\"The company charges resource data. The date the property or undertaking was acquired on\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"assests_ceased_released\",\"type\":[\"null\",\"string\"],\"doc\":\"Cease/release information about the charge. For enumeration descriptions see assets-ceased-released section in the enumeration mappings  Possible values are:  property-ceased-to-belong  part-property-release-and-ceased-to-belong  part-property-released  part-property-ceased-to-belong  whole-property-released  multiple-filings  whole-property-released-and-ceased-to-belong\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"charge_code\",\"type\":[\"null\",\"string\"],\"doc\":\"The charge code is a replacement of the mortgage description\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"charge_number\",\"type\":[\"null\",\"string\"],\"doc\":\"The charge number is used to reference an individual charge\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"classification\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Classification\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.classification\",\"fields\":[{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"Details of the charge classification\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"doc\":\"The type of charge classication. For enumeration descriptions see classificationDesc section in the enumeration mappings  Possible values are:  charge-description  nature-of-charge\",\"default\":null,\"dataClassification\":\"3\"}]}],\"doc\":\"Classification information\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"covering_instrument_date\",\"type\":[\"null\",\"string\"],\"doc\":\"The date by which the series of debentures were created\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"created_on\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the charge was created\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"delivered_on\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the charge was submitted to Companies House\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"etag\",\"type\":[\"null\",\"string\"],\"doc\":\"etag\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"doc\":\"The id of the charge\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"insolvency_cases\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"InsolvencyCases\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.insolvencycases\",\"fields\":[{\"name\":\"case_number\",\"type\":[\"null\",\"string\"],\"doc\":\"The number of this insolvency case\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"links\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Links\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.insolvencycases.links\",\"fields\":[{\"name\":\"case\",\"type\":[\"null\",\"string\"],\"doc\":\"Link to the insolvency case data\",\"default\":null,\"dataClassification\":\"3\"}]}],\"doc\":\"The resources related to this insolvency case\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"transaction_id\",\"type\":[\"null\",\"string\"],\"doc\":\"The id of the insolvency filing\",\"default\":null,\"dataClassification\":\"3\"}]}}],\"doc\":\"Transactions that have been filed for the charge.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"links\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Links\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.links\",\"fields\":[{\"name\":\"self\",\"type\":[\"null\",\"string\"],\"doc\":\"Link to the this charge data\",\"default\":null,\"dataClassification\":\"3\"}]}],\"doc\":\"The resources related to this charge\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"more_than_four_persons_entitled\",\"type\":[\"null\",\"string\"],\"doc\":\"Charge has more than four person entitled\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"particulars\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Particulars\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.particulars\",\"fields\":[{\"name\":\"chargor_acting_as_bare_trustee\",\"type\":[\"null\",\"string\"],\"doc\":\"The chargor is acting as a bare trustee for the property\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"contains_fixed_charge\",\"type\":[\"null\",\"string\"],\"doc\":\"The charge contains a fixed charge\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"contains_floating_charge\",\"type\":[\"null\",\"string\"],\"doc\":\"The charge contains a floating charge\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"contains_negative_pledge\",\"type\":[\"null\",\"string\"],\"doc\":\"The charge contains a negative pledge\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"Details of charge particulars\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"floating_charge_covers_all\",\"type\":[\"null\",\"string\"],\"doc\":\"The floating charge covers all the property or undertaking or the company\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"doc\":\"The type of charge particulars. For enumeration descriptions see particular-description section in the enumeration mappings Possible values are:short-particulars charged-property-description charged-property-or-undertaking-description  brief-description\",\"default\":null,\"dataClassification\":\"3\"}]}],\"doc\":\"Details of charge or undertaking\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"persons_entitled\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PersonsEntitled\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.personsentitled\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"doc\":\"The name of the person entitled.\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"}]}}],\"doc\":\"People that are entitled to the charge\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"resolved_on\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the issue was resolved on\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"satisfied_on\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the charge was satisfied\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"scottish_alterations\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ScottishAlterations\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations\",\"fields\":[{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"Alteration descriptions for Scottish companies\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"has_alterations_to_order\",\"type\":[\"null\",\"string\"],\"doc\":\"The charge has alterations to order\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"has_alterations_to_prohibitions\",\"type\":[\"null\",\"string\"],\"doc\":\"The charge has alterations to prohibitions\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"has_alterations_to_provisions\",\"type\":[\"null\",\"string\"],\"doc\":\"The charge has provisions restricting the creation of further charges\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"doc\":\"Type of alteration details for Scottish companies\",\"default\":null,\"dataClassification\":\"3\"}]}],\"doc\":\"Information about alterations for Scottish companies\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"secured_details\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"SecuredDetails\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.secureddetails\",\"fields\":[{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"Details of the amount or obligation secured by the charge\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"doc\":\"The type of secured details. For enumeration descriptions see secured-details-description section in the enumeration mappings. Possible values are:amount-secured obligations-secured\",\"default\":null,\"dataClassification\":\"3\"}]}],\"doc\":\"Information about what is secured against this charge\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"status\",\"type\":[\"null\",\"string\"],\"doc\":\"The status of the charge. For enumeration descriptions see status section in the enumeration ma","ppings Possible values are: outstanding fully-satisfied part-satisfied satisfied\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"transactions\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Transactions\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactions\",\"fields\":[{\"name\":\"delivered_on\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the filing was submitted to Companies House\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"filing_type\",\"type\":[\"null\",\"string\"],\"doc\":\"Filing type which created, updated or satisfied the charge\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"insolvency_case_number\",\"type\":[\"null\",\"string\"],\"doc\":\"The insolvency case related to this filing\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"links\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Links\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.transactionid.links\",\"fields\":[{\"name\":\"filing\",\"type\":[\"null\",\"string\"],\"doc\":\"Link to the charge filing data\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"insolvency_case\",\"type\":[\"null\",\"string\"],\"doc\":\"Link to the insolvency case related to this filing\",\"default\":null,\"dataClassification\":\"3\"}]}],\"doc\":\"The resources related to this filing\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"transaction_id\",\"type\":[\"null\",\"string\"],\"doc\":\"The id of the filing\",\"default\":null,\"dataClassification\":\"3\"}]}}],\"doc\":\"Transactions that have been filed for the charge.\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"event\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Event\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event\",\"fields\":[{\"name\":\"fields_changed\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"Array of fields that have been changed by this event. Nested fields are referenced by dot notation e.g. links.document_metadata\",\"default\":[],\"dataClassification\":\"3\"},{\"name\":\"published_at\",\"type\":[\"null\",\"string\"],\"doc\":\"The date and time the data notification was raised\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"timepoint\",\"type\":[\"null\",\"string\"],\"doc\":\"The point-in-time identifier for this stream document. Use to re-establish a connection to the stream at this point.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"doc\":\"The type of event denoted by this stream document. Possible values are: changed deleted\",\"default\":null,\"dataClassification\":\"3\"}]}],\"doc\":\"Link to the related resource\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"resource_id\",\"type\":[\"null\",\"string\"],\"doc\":\"The ID of the resource.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"resource_kind\",\"type\":[\"null\",\"string\"],\"doc\":\"The type of resource contained within the stream document. Possible values are: company-profile#company-profile filing-history#filing-history\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"resource_uri\",\"type\":[\"null\",\"string\"],\"doc\":\"The URI of the resource.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"FILE_NAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied file name\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"etag\",\"type\":[\"null\",\"string\"],\"doc\":\"The ETag of the resource.\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"part_satisfied_count\",\"type\":[\"null\",\"string\"],\"doc\":\"Number of satisfied charges\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"satisfied_count\",\"type\":[\"null\",\"string\"],\"doc\":\"Number of satisfied charges\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"total_count\",\"type\":[\"null\",\"string\"],\"doc\":\"Total number of charges returned by the API (filtering applies).\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"unfiletered_count\",\"type\":[\"null\",\"string\"],\"doc\":\"Number of satisfied charges\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"companyRegisteredNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Company Number\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.Data data;
  /** Link to the related resource */
  @Deprecated public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event event;
  /** The ID of the resource. */
  @Deprecated public java.lang.CharSequence resource_id;
  /** The type of resource contained within the stream document. Possible values are: company-profile#company-profile filing-history#filing-history */
  @Deprecated public java.lang.CharSequence resource_kind;
  /** The URI of the resource. */
  @Deprecated public java.lang.CharSequence resource_uri;
  /** Supplied file name */
  @Deprecated public java.lang.CharSequence FILE_NAME;
  /** The ETag of the resource. */
  @Deprecated public java.lang.CharSequence etag;
  /** Number of satisfied charges */
  @Deprecated public java.lang.CharSequence part_satisfied_count;
  /** Number of satisfied charges */
  @Deprecated public java.lang.CharSequence satisfied_count;
  /** Total number of charges returned by the API (filtering applies). */
  @Deprecated public java.lang.CharSequence total_count;
  /** Number of satisfied charges */
  @Deprecated public java.lang.CharSequence unfiletered_count;
  /** Company Number */
  @Deprecated public java.lang.CharSequence companyRegisteredNumber;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public RawFields() {}

  /**
   * All-args constructor.
   */
  public RawFields(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.Data data, com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event event, java.lang.CharSequence resource_id, java.lang.CharSequence resource_kind, java.lang.CharSequence resource_uri, java.lang.CharSequence FILE_NAME, java.lang.CharSequence etag, java.lang.CharSequence part_satisfied_count, java.lang.CharSequence satisfied_count, java.lang.CharSequence total_count, java.lang.CharSequence unfiletered_count, java.lang.CharSequence companyRegisteredNumber) {
    this.data = data;
    this.event = event;
    this.resource_id = resource_id;
    this.resource_kind = resource_kind;
    this.resource_uri = resource_uri;
    this.FILE_NAME = FILE_NAME;
    this.etag = etag;
    this.part_satisfied_count = part_satisfied_count;
    this.satisfied_count = satisfied_count;
    this.total_count = total_count;
    this.unfiletered_count = unfiletered_count;
    this.companyRegisteredNumber = companyRegisteredNumber;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return data;
    case 1: return event;
    case 2: return resource_id;
    case 3: return resource_kind;
    case 4: return resource_uri;
    case 5: return FILE_NAME;
    case 6: return etag;
    case 7: return part_satisfied_count;
    case 8: return satisfied_count;
    case 9: return total_count;
    case 10: return unfiletered_count;
    case 11: return companyRegisteredNumber;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: data = (com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.Data)value$; break;
    case 1: event = (com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event)value$; break;
    case 2: resource_id = (java.lang.CharSequence)value$; break;
    case 3: resource_kind = (java.lang.CharSequence)value$; break;
    case 4: resource_uri = (java.lang.CharSequence)value$; break;
    case 5: FILE_NAME = (java.lang.CharSequence)value$; break;
    case 6: etag = (java.lang.CharSequence)value$; break;
    case 7: part_satisfied_count = (java.lang.CharSequence)value$; break;
    case 8: satisfied_count = (java.lang.CharSequence)value$; break;
    case 9: total_count = (java.lang.CharSequence)value$; break;
    case 10: unfiletered_count = (java.lang.CharSequence)value$; break;
    case 11: companyRegisteredNumber = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'data' field.
   */
  public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.Data getData() {
    return data;
  }

  /**
   * Sets the value of the 'data' field.
   * @param value the value to set.
   */
  public void setData(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.Data value) {
    this.data = value;
  }

  /**
   * Gets the value of the 'event' field.
   * Link to the related resource   */
  public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event getEvent() {
    return event;
  }

  /**
   * Sets the value of the 'event' field.
   * Link to the related resource   * @param value the value to set.
   */
  public void setEvent(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event value) {
    this.event = value;
  }

  /**
   * Gets the value of the 'resource_id' field.
   * The ID of the resource.   */
  public java.lang.CharSequence getResourceId() {
    return resource_id;
  }

  /**
   * Sets the value of the 'resource_id' field.
   * The ID of the resource.   * @param value the value to set.
   */
  public void setResourceId(java.lang.CharSequence value) {
    this.resource_id = value;
  }

  /**
   * Gets the value of the 'resource_kind' field.
   * The type of resource contained within the stream document. Possible values are: company-profile#company-profile filing-history#filing-history   */
  public java.lang.CharSequence getResourceKind() {
    return resource_kind;
  }

  /**
   * Sets the value of the 'resource_kind' field.
   * The type of resource contained within the stream document. Possible values are: company-profile#company-profile filing-history#filing-history   * @param value the value to set.
   */
  public void setResourceKind(java.lang.CharSequence value) {
    this.resource_kind = value;
  }

  /**
   * Gets the value of the 'resource_uri' field.
   * The URI of the resource.   */
  public java.lang.CharSequence getResourceUri() {
    return resource_uri;
  }

  /**
   * Sets the value of the 'resource_uri' field.
   * The URI of the resource.   * @param value the value to set.
   */
  public void setResourceUri(java.lang.CharSequence value) {
    this.resource_uri = value;
  }

  /**
   * Gets the value of the 'FILE_NAME' field.
   * Supplied file name   */
  public java.lang.CharSequence getFILENAME() {
    return FILE_NAME;
  }

  /**
   * Sets the value of the 'FILE_NAME' field.
   * Supplied file name   * @param value the value to set.
   */
  public void setFILENAME(java.lang.CharSequence value) {
    this.FILE_NAME = value;
  }

  /**
   * Gets the value of the 'etag' field.
   * The ETag of the resource.   */
  public java.lang.CharSequence getEtag() {
    return etag;
  }

  /**
   * Sets the value of the 'etag' field.
   * The ETag of the resource.   * @param value the value to set.
   */
  public void setEtag(java.lang.CharSequence value) {
    this.etag = value;
  }

  /**
   * Gets the value of the 'part_satisfied_count' field.
   * Number of satisfied charges   */
  public java.lang.CharSequence getPartSatisfiedCount() {
    return part_satisfied_count;
  }

  /**
   * Sets the value of the 'part_satisfied_count' field.
   * Number of satisfied charges   * @param value the value to set.
   */
  public void setPartSatisfiedCount(java.lang.CharSequence value) {
    this.part_satisfied_count = value;
  }

  /**
   * Gets the value of the 'satisfied_count' field.
   * Number of satisfied charges   */
  public java.lang.CharSequence getSatisfiedCount() {
    return satisfied_count;
  }

  /**
   * Sets the value of the 'satisfied_count' field.
   * Number of satisfied charges   * @param value the value to set.
   */
  public void setSatisfiedCount(java.lang.CharSequence value) {
    this.satisfied_count = value;
  }

  /**
   * Gets the value of the 'total_count' field.
   * Total number of charges returned by the API (filtering applies).   */
  public java.lang.CharSequence getTotalCount() {
    return total_count;
  }

  /**
   * Sets the value of the 'total_count' field.
   * Total number of charges returned by the API (filtering applies).   * @param value the value to set.
   */
  public void setTotalCount(java.lang.CharSequence value) {
    this.total_count = value;
  }

  /**
   * Gets the value of the 'unfiletered_count' field.
   * Number of satisfied charges   */
  public java.lang.CharSequence getUnfileteredCount() {
    return unfiletered_count;
  }

  /**
   * Sets the value of the 'unfiletered_count' field.
   * Number of satisfied charges   * @param value the value to set.
   */
  public void setUnfileteredCount(java.lang.CharSequence value) {
    this.unfiletered_count = value;
  }

  /**
   * Gets the value of the 'companyRegisteredNumber' field.
   * Company Number   */
  public java.lang.CharSequence getCompanyRegisteredNumber() {
    return companyRegisteredNumber;
  }

  /**
   * Sets the value of the 'companyRegisteredNumber' field.
   * Company Number   * @param value the value to set.
   */
  public void setCompanyRegisteredNumber(java.lang.CharSequence value) {
    this.companyRegisteredNumber = value;
  }

  /** Creates a new RawFields RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder();
  }
  
  /** Creates a new RawFields RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder other) {
    return new com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder(other);
  }
  
  /** Creates a new RawFields RecordBuilder by copying an existing RawFields instance */
  public static com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields other) {
    return new com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder(other);
  }
  
  /**
   * RecordBuilder for RawFields instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RawFields>
    implements org.apache.avro.data.RecordBuilder<RawFields> {

    private com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.Data data;
    private com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event event;
    private java.lang.CharSequence resource_id;
    private java.lang.CharSequence resource_kind;
    private java.lang.CharSequence resource_uri;
    private java.lang.CharSequence FILE_NAME;
    private java.lang.CharSequence etag;
    private java.lang.CharSequence part_satisfied_count;
    private java.lang.CharSequence satisfied_count;
    private java.lang.CharSequence total_count;
    private java.lang.CharSequence unfiletered_count;
    private java.lang.CharSequence companyRegisteredNumber;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.data)) {
        this.data = data().deepCopy(fields()[0].schema(), other.data);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.event)) {
        this.event = data().deepCopy(fields()[1].schema(), other.event);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.resource_id)) {
        this.resource_id = data().deepCopy(fields()[2].schema(), other.resource_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.resource_kind)) {
        this.resource_kind = data().deepCopy(fields()[3].schema(), other.resource_kind);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.resource_uri)) {
        this.resource_uri = data().deepCopy(fields()[4].schema(), other.resource_uri);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.FILE_NAME)) {
        this.FILE_NAME = data().deepCopy(fields()[5].schema(), other.FILE_NAME);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.etag)) {
        this.etag = data().deepCopy(fields()[6].schema(), other.etag);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.part_satisfied_count)) {
        this.part_satisfied_count = data().deepCopy(fields()[7].schema(), other.part_satisfied_count);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.satisfied_count)) {
        this.satisfied_count = data().deepCopy(fields()[8].schema(), other.satisfied_count);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.total_count)) {
        this.total_count = data().deepCopy(fields()[9].schema(), other.total_count);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.unfiletered_count)) {
        this.unfiletered_count = data().deepCopy(fields()[10].schema(), other.unfiletered_count);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.companyRegisteredNumber)) {
        this.companyRegisteredNumber = data().deepCopy(fields()[11].schema(), other.companyRegisteredNumber);
        fieldSetFlags()[11] = true;
      }
    }
    
    /** Creates a Builder by copying an existing RawFields instance */
    private Builder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields other) {
            super(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.SCHEMA$);
      if (isValidValue(fields()[0], other.data)) {
        this.data = data().deepCopy(fields()[0].schema(), other.data);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.event)) {
        this.event = data().deepCopy(fields()[1].schema(), other.event);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.resource_id)) {
        this.resource_id = data().deepCopy(fields()[2].schema(), other.resource_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.resource_kind)) {
        this.resource_kind = data().deepCopy(fields()[3].schema(), other.resource_kind);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.resource_uri)) {
        this.resource_uri = data().deepCopy(fields()[4].schema(), other.resource_uri);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.FILE_NAME)) {
        this.FILE_NAME = data().deepCopy(fields()[5].schema(), other.FILE_NAME);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.etag)) {
        this.etag = data().deepCopy(fields()[6].schema(), other.etag);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.part_satisfied_count)) {
        this.part_satisfied_count = data().deepCopy(fields()[7].schema(), other.part_satisfied_count);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.satisfied_count)) {
        this.satisfied_count = data().deepCopy(fields()[8].schema(), other.satisfied_count);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.total_count)) {
        this.total_count = data().deepCopy(fields()[9].schema(), other.total_count);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.unfiletered_count)) {
        this.unfiletered_count = data().deepCopy(fields()[10].schema(), other.unfiletered_count);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.companyRegisteredNumber)) {
        this.companyRegisteredNumber = data().deepCopy(fields()[11].schema(), other.companyRegisteredNumber);
        fieldSetFlags()[11] = true;
      }
    }

    /** Gets the value of the 'data' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.Data getData() {
      return data;
    }
    
    /** Sets the value of the 'data' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder setData(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.Data value) {
      validate(fields()[0], value);
      this.data = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'data' field has been set */
    public boolean hasData() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'data' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder clearData() {
      data = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'event' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event getEvent() {
      return event;
    }
    
    /** Sets the value of the 'event' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder setEvent(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event value) {
      validate(fields()[1], value);
      this.event = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'event' field has been set */
    public boolean hasEvent() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'event' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder clearEvent() {
      event = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'resource_id' field */
    public java.lang.CharSequence getResourceId() {
      return resource_id;
    }
    
    /** Sets the value of the 'resource_id' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder setResourceId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.resource_id = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'resource_id' field has been set */
    public boolean hasResourceId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'resource_id' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder clearResourceId() {
      resource_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'resource_kind' field */
    public java.lang.CharSequence getResourceKind() {
      return resource_kind;
    }
    
    /** Sets the value of the 'resource_kind' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder setResourceKind(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.resource_kind = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'resource_kind' field has been set */
    public boolean hasResourceKind() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'resource_kind' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder clearResourceKind() {
      resource_kind = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'resource_uri' field */
    public java.lang.CharSequence getResourceUri() {
      return resource_uri;
    }
    
    /** Sets the value of the 'resource_uri' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder setResourceUri(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.resource_uri = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'resource_uri' field has been set */
    public boolean hasResourceUri() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'resource_uri' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder clearResourceUri() {
      resource_uri = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'FILE_NAME' field */
    public java.lang.CharSequence getFILENAME() {
      return FILE_NAME;
    }
    
    /** Sets the value of the 'FILE_NAME' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder setFILENAME(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.FILE_NAME = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'FILE_NAME' field has been set */
    public boolean hasFILENAME() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'FILE_NAME' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder clearFILENAME() {
      FILE_NAME = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'etag' field */
    public java.lang.CharSequence getEtag() {
      return etag;
    }
    
    /** Sets the value of the 'etag' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder setEtag(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.etag = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'etag' field has been set */
    public boolean hasEtag() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'etag' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder clearEtag() {
      etag = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'part_satisfied_count' field */
    public java.lang.CharSequence getPartSatisfiedCount() {
      return part_satisfied_count;
    }
    
    /** Sets the value of the 'part_satisfied_count' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder setPartSatisfiedCount(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.part_satisfied_count = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'part_satisfied_count' field has been set */
    public boolean hasPartSatisfiedCount() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'part_satisfied_count' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder clearPartSatisfiedCount() {
      part_satisfied_count = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'satisfied_count' field */
    public java.lang.CharSequence getSatisfiedCount() {
      return satisfied_count;
    }
    
    /** Sets the value of the 'satisfied_count' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder setSatisfiedCount(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.satisfied_count = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'satisfied_count' field has been set */
    public boolean hasSatisfiedCount() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'satisfied_count' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder clearSatisfiedCount() {
      satisfied_count = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'total_count' field */
    public java.lang.CharSequence getTotalCount() {
      return total_count;
    }
    
    /** Sets the value of the 'total_count' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder setTotalCount(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.total_count = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'total_count' field has been set */
    public boolean hasTotalCount() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'total_count' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder clearTotalCount() {
      total_count = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'unfiletered_count' field */
    public java.lang.CharSequence getUnfileteredCount() {
      return unfiletered_count;
    }
    
    /** Sets the value of the 'unfiletered_count' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder setUnfileteredCount(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.unfiletered_count = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'unfiletered_count' field has been set */
    public boolean hasUnfileteredCount() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'unfiletered_count' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder clearUnfileteredCount() {
      unfiletered_count = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'companyRegisteredNumber' field */
    public java.lang.CharSequence getCompanyRegisteredNumber() {
      return companyRegisteredNumber;
    }
    
    /** Sets the value of the 'companyRegisteredNumber' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder setCompanyRegisteredNumber(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.companyRegisteredNumber = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'companyRegisteredNumber' field has been set */
    public boolean hasCompanyRegisteredNumber() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'companyRegisteredNumber' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.RawFields.Builder clearCompanyRegisteredNumber() {
      companyRegisteredNumber = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    public RawFields build() {
      try {
        RawFields record = new RawFields();
        record.data = fieldSetFlags()[0] ? this.data : (com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.Data) defaultValue(fields()[0]);
        record.event = fieldSetFlags()[1] ? this.event : (com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.event.Event) defaultValue(fields()[1]);
        record.resource_id = fieldSetFlags()[2] ? this.resource_id : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.resource_kind = fieldSetFlags()[3] ? this.resource_kind : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.resource_uri = fieldSetFlags()[4] ? this.resource_uri : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.FILE_NAME = fieldSetFlags()[5] ? this.FILE_NAME : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.etag = fieldSetFlags()[6] ? this.etag : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.part_satisfied_count = fieldSetFlags()[7] ? this.part_satisfied_count : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.satisfied_count = fieldSetFlags()[8] ? this.satisfied_count : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.total_count = fieldSetFlags()[9] ? this.total_count : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.unfiletered_count = fieldSetFlags()[10] ? this.unfiletered_count : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.companyRegisteredNumber = fieldSetFlags()[11] ? this.companyRegisteredNumber : (java.lang.CharSequence) defaultValue(fields()[11]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
