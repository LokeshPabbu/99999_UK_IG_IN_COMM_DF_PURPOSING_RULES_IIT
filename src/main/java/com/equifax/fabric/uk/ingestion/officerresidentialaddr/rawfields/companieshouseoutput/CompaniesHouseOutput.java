/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CompaniesHouseOutput extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CompaniesHouseOutput\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput\",\"fields\":[{\"name\":\"corporateBody\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CorporateBody\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody\",\"fields\":[{\"name\":\"incorporationNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Company Number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"doc\":\"Company Name\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"changeType\",\"type\":[\"null\",\"string\"],\"doc\":\"Change Type - appointment, termination ,change ,correction ,secureRemoval ,merge\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"transactionType\",\"type\":[\"null\",\"string\"],\"doc\":\"Transaction Type\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"transactionId\",\"type\":[\"null\",\"string\"],\"doc\":\"Transaction ID\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"officer\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"officercorporateBodycompaniesHouseOutput\",\"fields\":[{\"name\":\"externalNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer Person number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dateOfBirth\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer Date of birth\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"residentialAddress\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"residentialAddressofficercorporateBodycompaniesHouseOutput\",\"fields\":[{\"name\":\"houseNameNum\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address house name/number\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"street\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address street\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"area\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address area\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"postTown\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address posttown\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"region\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address region\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"country\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address country\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"postCode\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address postcode\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"sameAsServiceAddress\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address same as service address indicator\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null}]}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody corporateBody;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public CompaniesHouseOutput() {}

  /**
   * All-args constructor.
   */
  public CompaniesHouseOutput(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody corporateBody) {
    this.corporateBody = corporateBody;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return corporateBody;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: corporateBody = (com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'corporateBody' field.
   */
  public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody getCorporateBody() {
    return corporateBody;
  }

  /**
   * Sets the value of the 'corporateBody' field.
   * @param value the value to set.
   */
  public void setCorporateBody(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody value) {
    this.corporateBody = value;
  }

  /** Creates a new CompaniesHouseOutput RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.CompaniesHouseOutput.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.CompaniesHouseOutput.Builder();
  }
  
  /** Creates a new CompaniesHouseOutput RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.CompaniesHouseOutput.Builder newBuilder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.CompaniesHouseOutput.Builder other) {
    return new com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.CompaniesHouseOutput.Builder(other);
  }
  
  /** Creates a new CompaniesHouseOutput RecordBuilder by copying an existing CompaniesHouseOutput instance */
  public static com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.CompaniesHouseOutput.Builder newBuilder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.CompaniesHouseOutput other) {
    return new com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.CompaniesHouseOutput.Builder(other);
  }
  
  /**
   * RecordBuilder for CompaniesHouseOutput instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CompaniesHouseOutput>
    implements org.apache.avro.data.RecordBuilder<CompaniesHouseOutput> {

    private com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody corporateBody;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.CompaniesHouseOutput.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.CompaniesHouseOutput.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.corporateBody)) {
        this.corporateBody = data().deepCopy(fields()[0].schema(), other.corporateBody);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing CompaniesHouseOutput instance */
    private Builder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.CompaniesHouseOutput other) {
            super(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.CompaniesHouseOutput.SCHEMA$);
      if (isValidValue(fields()[0], other.corporateBody)) {
        this.corporateBody = data().deepCopy(fields()[0].schema(), other.corporateBody);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'corporateBody' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody getCorporateBody() {
      return corporateBody;
    }
    
    /** Sets the value of the 'corporateBody' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.CompaniesHouseOutput.Builder setCorporateBody(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody value) {
      validate(fields()[0], value);
      this.corporateBody = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'corporateBody' field has been set */
    public boolean hasCorporateBody() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'corporateBody' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.CompaniesHouseOutput.Builder clearCorporateBody() {
      corporateBody = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public CompaniesHouseOutput build() {
      try {
        CompaniesHouseOutput record = new CompaniesHouseOutput();
        record.corporateBody = fieldSetFlags()[0] ? this.corporateBody : (com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
