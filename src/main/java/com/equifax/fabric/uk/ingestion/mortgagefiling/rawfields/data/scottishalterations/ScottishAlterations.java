/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ScottishAlterations extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ScottishAlterations\",\"namespace\":\"com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations\",\"fields\":[{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"Alteration descriptions for Scottish companies\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"has_alterations_to_order\",\"type\":[\"null\",\"string\"],\"doc\":\"The charge has alterations to order\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"has_alterations_to_prohibitions\",\"type\":[\"null\",\"string\"],\"doc\":\"The charge has alterations to prohibitions\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"has_alterations_to_provisions\",\"type\":[\"null\",\"string\"],\"doc\":\"The charge has provisions restricting the creation of further charges\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"doc\":\"Type of alteration details for Scottish companies\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Alteration descriptions for Scottish companies */
  @Deprecated public java.lang.CharSequence description;
  /** The charge has alterations to order */
  @Deprecated public java.lang.CharSequence has_alterations_to_order;
  /** The charge has alterations to prohibitions */
  @Deprecated public java.lang.CharSequence has_alterations_to_prohibitions;
  /** The charge has provisions restricting the creation of further charges */
  @Deprecated public java.lang.CharSequence has_alterations_to_provisions;
  /** Type of alteration details for Scottish companies */
  @Deprecated public java.lang.CharSequence type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ScottishAlterations() {}

  /**
   * All-args constructor.
   */
  public ScottishAlterations(java.lang.CharSequence description, java.lang.CharSequence has_alterations_to_order, java.lang.CharSequence has_alterations_to_prohibitions, java.lang.CharSequence has_alterations_to_provisions, java.lang.CharSequence type) {
    this.description = description;
    this.has_alterations_to_order = has_alterations_to_order;
    this.has_alterations_to_prohibitions = has_alterations_to_prohibitions;
    this.has_alterations_to_provisions = has_alterations_to_provisions;
    this.type = type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return description;
    case 1: return has_alterations_to_order;
    case 2: return has_alterations_to_prohibitions;
    case 3: return has_alterations_to_provisions;
    case 4: return type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: description = (java.lang.CharSequence)value$; break;
    case 1: has_alterations_to_order = (java.lang.CharSequence)value$; break;
    case 2: has_alterations_to_prohibitions = (java.lang.CharSequence)value$; break;
    case 3: has_alterations_to_provisions = (java.lang.CharSequence)value$; break;
    case 4: type = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'description' field.
   * Alteration descriptions for Scottish companies   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * Alteration descriptions for Scottish companies   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'has_alterations_to_order' field.
   * The charge has alterations to order   */
  public java.lang.CharSequence getHasAlterationsToOrder() {
    return has_alterations_to_order;
  }

  /**
   * Sets the value of the 'has_alterations_to_order' field.
   * The charge has alterations to order   * @param value the value to set.
   */
  public void setHasAlterationsToOrder(java.lang.CharSequence value) {
    this.has_alterations_to_order = value;
  }

  /**
   * Gets the value of the 'has_alterations_to_prohibitions' field.
   * The charge has alterations to prohibitions   */
  public java.lang.CharSequence getHasAlterationsToProhibitions() {
    return has_alterations_to_prohibitions;
  }

  /**
   * Sets the value of the 'has_alterations_to_prohibitions' field.
   * The charge has alterations to prohibitions   * @param value the value to set.
   */
  public void setHasAlterationsToProhibitions(java.lang.CharSequence value) {
    this.has_alterations_to_prohibitions = value;
  }

  /**
   * Gets the value of the 'has_alterations_to_provisions' field.
   * The charge has provisions restricting the creation of further charges   */
  public java.lang.CharSequence getHasAlterationsToProvisions() {
    return has_alterations_to_provisions;
  }

  /**
   * Sets the value of the 'has_alterations_to_provisions' field.
   * The charge has provisions restricting the creation of further charges   * @param value the value to set.
   */
  public void setHasAlterationsToProvisions(java.lang.CharSequence value) {
    this.has_alterations_to_provisions = value;
  }

  /**
   * Gets the value of the 'type' field.
   * Type of alteration details for Scottish companies   */
  public java.lang.CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * Type of alteration details for Scottish companies   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /** Creates a new ScottishAlterations RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.Builder();
  }
  
  /** Creates a new ScottishAlterations RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.Builder newBuilder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.Builder other) {
    return new com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.Builder(other);
  }
  
  /** Creates a new ScottishAlterations RecordBuilder by copying an existing ScottishAlterations instance */
  public static com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.Builder newBuilder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations other) {
    return new com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.Builder(other);
  }
  
  /**
   * RecordBuilder for ScottishAlterations instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ScottishAlterations>
    implements org.apache.avro.data.RecordBuilder<ScottishAlterations> {

    private java.lang.CharSequence description;
    private java.lang.CharSequence has_alterations_to_order;
    private java.lang.CharSequence has_alterations_to_prohibitions;
    private java.lang.CharSequence has_alterations_to_provisions;
    private java.lang.CharSequence type;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.description)) {
        this.description = data().deepCopy(fields()[0].schema(), other.description);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.has_alterations_to_order)) {
        this.has_alterations_to_order = data().deepCopy(fields()[1].schema(), other.has_alterations_to_order);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.has_alterations_to_prohibitions)) {
        this.has_alterations_to_prohibitions = data().deepCopy(fields()[2].schema(), other.has_alterations_to_prohibitions);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.has_alterations_to_provisions)) {
        this.has_alterations_to_provisions = data().deepCopy(fields()[3].schema(), other.has_alterations_to_provisions);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.type)) {
        this.type = data().deepCopy(fields()[4].schema(), other.type);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ScottishAlterations instance */
    private Builder(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations other) {
            super(com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.SCHEMA$);
      if (isValidValue(fields()[0], other.description)) {
        this.description = data().deepCopy(fields()[0].schema(), other.description);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.has_alterations_to_order)) {
        this.has_alterations_to_order = data().deepCopy(fields()[1].schema(), other.has_alterations_to_order);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.has_alterations_to_prohibitions)) {
        this.has_alterations_to_prohibitions = data().deepCopy(fields()[2].schema(), other.has_alterations_to_prohibitions);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.has_alterations_to_provisions)) {
        this.has_alterations_to_provisions = data().deepCopy(fields()[3].schema(), other.has_alterations_to_provisions);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.type)) {
        this.type = data().deepCopy(fields()[4].schema(), other.type);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'description' field */
    public java.lang.CharSequence getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.description = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'description' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.Builder clearDescription() {
      description = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'has_alterations_to_order' field */
    public java.lang.CharSequence getHasAlterationsToOrder() {
      return has_alterations_to_order;
    }
    
    /** Sets the value of the 'has_alterations_to_order' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.Builder setHasAlterationsToOrder(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.has_alterations_to_order = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'has_alterations_to_order' field has been set */
    public boolean hasHasAlterationsToOrder() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'has_alterations_to_order' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.Builder clearHasAlterationsToOrder() {
      has_alterations_to_order = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'has_alterations_to_prohibitions' field */
    public java.lang.CharSequence getHasAlterationsToProhibitions() {
      return has_alterations_to_prohibitions;
    }
    
    /** Sets the value of the 'has_alterations_to_prohibitions' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.Builder setHasAlterationsToProhibitions(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.has_alterations_to_prohibitions = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'has_alterations_to_prohibitions' field has been set */
    public boolean hasHasAlterationsToProhibitions() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'has_alterations_to_prohibitions' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.Builder clearHasAlterationsToProhibitions() {
      has_alterations_to_prohibitions = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'has_alterations_to_provisions' field */
    public java.lang.CharSequence getHasAlterationsToProvisions() {
      return has_alterations_to_provisions;
    }
    
    /** Sets the value of the 'has_alterations_to_provisions' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.Builder setHasAlterationsToProvisions(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.has_alterations_to_provisions = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'has_alterations_to_provisions' field has been set */
    public boolean hasHasAlterationsToProvisions() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'has_alterations_to_provisions' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.Builder clearHasAlterationsToProvisions() {
      has_alterations_to_provisions = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public java.lang.CharSequence getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.Builder setType(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.type = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'type' field */
    public com.equifax.fabric.uk.ingestion.mortgagefiling.rawfields.data.scottishalterations.ScottishAlterations.Builder clearType() {
      type = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public ScottishAlterations build() {
      try {
        ScottishAlterations record = new ScottishAlterations();
        record.description = fieldSetFlags()[0] ? this.description : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.has_alterations_to_order = fieldSetFlags()[1] ? this.has_alterations_to_order : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.has_alterations_to_prohibitions = fieldSetFlags()[2] ? this.has_alterations_to_prohibitions : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.has_alterations_to_provisions = fieldSetFlags()[3] ? this.has_alterations_to_provisions : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.type = fieldSetFlags()[4] ? this.type : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
