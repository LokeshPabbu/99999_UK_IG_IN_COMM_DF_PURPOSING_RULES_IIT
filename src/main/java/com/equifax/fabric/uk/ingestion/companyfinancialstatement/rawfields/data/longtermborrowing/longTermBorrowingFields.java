/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class longTermBorrowingFields extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"longTermBorrowingFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing\",\"fields\":[{\"name\":\"bankLoans\",\"type\":[\"null\",\"string\"],\"doc\":\"Long Term Borrowing - Bank Loans\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"financeLeaseAndHirePurchase\",\"type\":[\"null\",\"string\"],\"doc\":\"Long Term Borrowing - Finance Lease and Hire Purchase\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"hirePurchaseLoan\",\"type\":[\"null\",\"string\"],\"doc\":\"Long Term Borrowing - Hire Purchase Loan\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"financeLeaseObligation\",\"type\":[\"null\",\"string\"],\"doc\":\"Long Term Borrowing - Finance Lease Obligation\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"otherLongTermBorrowing\",\"type\":[\"null\",\"string\"],\"doc\":\"Long Term Borrowing - Other Long Term Borrowing\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Long Term Borrowing - Bank Loans */
  @Deprecated public java.lang.CharSequence bankLoans;
  /** Long Term Borrowing - Finance Lease and Hire Purchase */
  @Deprecated public java.lang.CharSequence financeLeaseAndHirePurchase;
  /** Long Term Borrowing - Hire Purchase Loan */
  @Deprecated public java.lang.CharSequence hirePurchaseLoan;
  /** Long Term Borrowing - Finance Lease Obligation */
  @Deprecated public java.lang.CharSequence financeLeaseObligation;
  /** Long Term Borrowing - Other Long Term Borrowing */
  @Deprecated public java.lang.CharSequence otherLongTermBorrowing;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public longTermBorrowingFields() {}

  /**
   * All-args constructor.
   */
  public longTermBorrowingFields(java.lang.CharSequence bankLoans, java.lang.CharSequence financeLeaseAndHirePurchase, java.lang.CharSequence hirePurchaseLoan, java.lang.CharSequence financeLeaseObligation, java.lang.CharSequence otherLongTermBorrowing) {
    this.bankLoans = bankLoans;
    this.financeLeaseAndHirePurchase = financeLeaseAndHirePurchase;
    this.hirePurchaseLoan = hirePurchaseLoan;
    this.financeLeaseObligation = financeLeaseObligation;
    this.otherLongTermBorrowing = otherLongTermBorrowing;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return bankLoans;
    case 1: return financeLeaseAndHirePurchase;
    case 2: return hirePurchaseLoan;
    case 3: return financeLeaseObligation;
    case 4: return otherLongTermBorrowing;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: bankLoans = (java.lang.CharSequence)value$; break;
    case 1: financeLeaseAndHirePurchase = (java.lang.CharSequence)value$; break;
    case 2: hirePurchaseLoan = (java.lang.CharSequence)value$; break;
    case 3: financeLeaseObligation = (java.lang.CharSequence)value$; break;
    case 4: otherLongTermBorrowing = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'bankLoans' field.
   * Long Term Borrowing - Bank Loans   */
  public java.lang.CharSequence getBankLoans() {
    return bankLoans;
  }

  /**
   * Sets the value of the 'bankLoans' field.
   * Long Term Borrowing - Bank Loans   * @param value the value to set.
   */
  public void setBankLoans(java.lang.CharSequence value) {
    this.bankLoans = value;
  }

  /**
   * Gets the value of the 'financeLeaseAndHirePurchase' field.
   * Long Term Borrowing - Finance Lease and Hire Purchase   */
  public java.lang.CharSequence getFinanceLeaseAndHirePurchase() {
    return financeLeaseAndHirePurchase;
  }

  /**
   * Sets the value of the 'financeLeaseAndHirePurchase' field.
   * Long Term Borrowing - Finance Lease and Hire Purchase   * @param value the value to set.
   */
  public void setFinanceLeaseAndHirePurchase(java.lang.CharSequence value) {
    this.financeLeaseAndHirePurchase = value;
  }

  /**
   * Gets the value of the 'hirePurchaseLoan' field.
   * Long Term Borrowing - Hire Purchase Loan   */
  public java.lang.CharSequence getHirePurchaseLoan() {
    return hirePurchaseLoan;
  }

  /**
   * Sets the value of the 'hirePurchaseLoan' field.
   * Long Term Borrowing - Hire Purchase Loan   * @param value the value to set.
   */
  public void setHirePurchaseLoan(java.lang.CharSequence value) {
    this.hirePurchaseLoan = value;
  }

  /**
   * Gets the value of the 'financeLeaseObligation' field.
   * Long Term Borrowing - Finance Lease Obligation   */
  public java.lang.CharSequence getFinanceLeaseObligation() {
    return financeLeaseObligation;
  }

  /**
   * Sets the value of the 'financeLeaseObligation' field.
   * Long Term Borrowing - Finance Lease Obligation   * @param value the value to set.
   */
  public void setFinanceLeaseObligation(java.lang.CharSequence value) {
    this.financeLeaseObligation = value;
  }

  /**
   * Gets the value of the 'otherLongTermBorrowing' field.
   * Long Term Borrowing - Other Long Term Borrowing   */
  public java.lang.CharSequence getOtherLongTermBorrowing() {
    return otherLongTermBorrowing;
  }

  /**
   * Sets the value of the 'otherLongTermBorrowing' field.
   * Long Term Borrowing - Other Long Term Borrowing   * @param value the value to set.
   */
  public void setOtherLongTermBorrowing(java.lang.CharSequence value) {
    this.otherLongTermBorrowing = value;
  }

  /** Creates a new longTermBorrowingFields RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.Builder();
  }
  
  /** Creates a new longTermBorrowingFields RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.Builder other) {
    return new com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.Builder(other);
  }
  
  /** Creates a new longTermBorrowingFields RecordBuilder by copying an existing longTermBorrowingFields instance */
  public static com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields other) {
    return new com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.Builder(other);
  }
  
  /**
   * RecordBuilder for longTermBorrowingFields instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<longTermBorrowingFields>
    implements org.apache.avro.data.RecordBuilder<longTermBorrowingFields> {

    private java.lang.CharSequence bankLoans;
    private java.lang.CharSequence financeLeaseAndHirePurchase;
    private java.lang.CharSequence hirePurchaseLoan;
    private java.lang.CharSequence financeLeaseObligation;
    private java.lang.CharSequence otherLongTermBorrowing;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.bankLoans)) {
        this.bankLoans = data().deepCopy(fields()[0].schema(), other.bankLoans);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.financeLeaseAndHirePurchase)) {
        this.financeLeaseAndHirePurchase = data().deepCopy(fields()[1].schema(), other.financeLeaseAndHirePurchase);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.hirePurchaseLoan)) {
        this.hirePurchaseLoan = data().deepCopy(fields()[2].schema(), other.hirePurchaseLoan);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.financeLeaseObligation)) {
        this.financeLeaseObligation = data().deepCopy(fields()[3].schema(), other.financeLeaseObligation);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.otherLongTermBorrowing)) {
        this.otherLongTermBorrowing = data().deepCopy(fields()[4].schema(), other.otherLongTermBorrowing);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing longTermBorrowingFields instance */
    private Builder(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields other) {
            super(com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.SCHEMA$);
      if (isValidValue(fields()[0], other.bankLoans)) {
        this.bankLoans = data().deepCopy(fields()[0].schema(), other.bankLoans);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.financeLeaseAndHirePurchase)) {
        this.financeLeaseAndHirePurchase = data().deepCopy(fields()[1].schema(), other.financeLeaseAndHirePurchase);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.hirePurchaseLoan)) {
        this.hirePurchaseLoan = data().deepCopy(fields()[2].schema(), other.hirePurchaseLoan);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.financeLeaseObligation)) {
        this.financeLeaseObligation = data().deepCopy(fields()[3].schema(), other.financeLeaseObligation);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.otherLongTermBorrowing)) {
        this.otherLongTermBorrowing = data().deepCopy(fields()[4].schema(), other.otherLongTermBorrowing);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'bankLoans' field */
    public java.lang.CharSequence getBankLoans() {
      return bankLoans;
    }
    
    /** Sets the value of the 'bankLoans' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.Builder setBankLoans(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.bankLoans = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'bankLoans' field has been set */
    public boolean hasBankLoans() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'bankLoans' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.Builder clearBankLoans() {
      bankLoans = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'financeLeaseAndHirePurchase' field */
    public java.lang.CharSequence getFinanceLeaseAndHirePurchase() {
      return financeLeaseAndHirePurchase;
    }
    
    /** Sets the value of the 'financeLeaseAndHirePurchase' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.Builder setFinanceLeaseAndHirePurchase(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.financeLeaseAndHirePurchase = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'financeLeaseAndHirePurchase' field has been set */
    public boolean hasFinanceLeaseAndHirePurchase() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'financeLeaseAndHirePurchase' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.Builder clearFinanceLeaseAndHirePurchase() {
      financeLeaseAndHirePurchase = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'hirePurchaseLoan' field */
    public java.lang.CharSequence getHirePurchaseLoan() {
      return hirePurchaseLoan;
    }
    
    /** Sets the value of the 'hirePurchaseLoan' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.Builder setHirePurchaseLoan(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.hirePurchaseLoan = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'hirePurchaseLoan' field has been set */
    public boolean hasHirePurchaseLoan() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'hirePurchaseLoan' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.Builder clearHirePurchaseLoan() {
      hirePurchaseLoan = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'financeLeaseObligation' field */
    public java.lang.CharSequence getFinanceLeaseObligation() {
      return financeLeaseObligation;
    }
    
    /** Sets the value of the 'financeLeaseObligation' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.Builder setFinanceLeaseObligation(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.financeLeaseObligation = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'financeLeaseObligation' field has been set */
    public boolean hasFinanceLeaseObligation() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'financeLeaseObligation' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.Builder clearFinanceLeaseObligation() {
      financeLeaseObligation = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'otherLongTermBorrowing' field */
    public java.lang.CharSequence getOtherLongTermBorrowing() {
      return otherLongTermBorrowing;
    }
    
    /** Sets the value of the 'otherLongTermBorrowing' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.Builder setOtherLongTermBorrowing(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.otherLongTermBorrowing = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'otherLongTermBorrowing' field has been set */
    public boolean hasOtherLongTermBorrowing() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'otherLongTermBorrowing' field */
    public com.equifax.fabric.uk.ingestion.companyfinancialstatement.rawfields.data.longtermborrowing.longTermBorrowingFields.Builder clearOtherLongTermBorrowing() {
      otherLongTermBorrowing = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public longTermBorrowingFields build() {
      try {
        longTermBorrowingFields record = new longTermBorrowingFields();
        record.bankLoans = fieldSetFlags()[0] ? this.bankLoans : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.financeLeaseAndHirePurchase = fieldSetFlags()[1] ? this.financeLeaseAndHirePurchase : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.hirePurchaseLoan = fieldSetFlags()[2] ? this.hirePurchaseLoan : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.financeLeaseObligation = fieldSetFlags()[3] ? this.financeLeaseObligation : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.otherLongTermBorrowing = fieldSetFlags()[4] ? this.otherLongTermBorrowing : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
