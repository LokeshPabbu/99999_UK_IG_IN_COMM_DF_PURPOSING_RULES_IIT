/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.nonlimitedregister.header;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class headerFields extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"headerFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.nonlimitedregister.header\",\"fields\":[{\"name\":\"RUN_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Unique number assigned by Companies House to each supplied file\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DATE_CREATED\",\"type\":[\"null\",\"string\"],\"doc\":\"Header - Date created\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"TIME_CREATED\",\"type\":[\"null\",\"string\"],\"doc\":\"Header - Time created\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Unique number assigned by Companies House to each supplied file */
  @Deprecated public java.lang.CharSequence RUN_NUMBER;
  /** Header - Date created */
  @Deprecated public java.lang.CharSequence DATE_CREATED;
  /** Header - Time created */
  @Deprecated public java.lang.CharSequence TIME_CREATED;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public headerFields() {}

  /**
   * All-args constructor.
   */
  public headerFields(java.lang.CharSequence RUN_NUMBER, java.lang.CharSequence DATE_CREATED, java.lang.CharSequence TIME_CREATED) {
    this.RUN_NUMBER = RUN_NUMBER;
    this.DATE_CREATED = DATE_CREATED;
    this.TIME_CREATED = TIME_CREATED;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return RUN_NUMBER;
    case 1: return DATE_CREATED;
    case 2: return TIME_CREATED;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: RUN_NUMBER = (java.lang.CharSequence)value$; break;
    case 1: DATE_CREATED = (java.lang.CharSequence)value$; break;
    case 2: TIME_CREATED = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'RUN_NUMBER' field.
   * Unique number assigned by Companies House to each supplied file   */
  public java.lang.CharSequence getRUNNUMBER() {
    return RUN_NUMBER;
  }

  /**
   * Sets the value of the 'RUN_NUMBER' field.
   * Unique number assigned by Companies House to each supplied file   * @param value the value to set.
   */
  public void setRUNNUMBER(java.lang.CharSequence value) {
    this.RUN_NUMBER = value;
  }

  /**
   * Gets the value of the 'DATE_CREATED' field.
   * Header - Date created   */
  public java.lang.CharSequence getDATECREATED() {
    return DATE_CREATED;
  }

  /**
   * Sets the value of the 'DATE_CREATED' field.
   * Header - Date created   * @param value the value to set.
   */
  public void setDATECREATED(java.lang.CharSequence value) {
    this.DATE_CREATED = value;
  }

  /**
   * Gets the value of the 'TIME_CREATED' field.
   * Header - Time created   */
  public java.lang.CharSequence getTIMECREATED() {
    return TIME_CREATED;
  }

  /**
   * Sets the value of the 'TIME_CREATED' field.
   * Header - Time created   * @param value the value to set.
   */
  public void setTIMECREATED(java.lang.CharSequence value) {
    this.TIME_CREATED = value;
  }

  /** Creates a new headerFields RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.nonlimitedregister.header.headerFields.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.nonlimitedregister.header.headerFields.Builder();
  }
  
  /** Creates a new headerFields RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.nonlimitedregister.header.headerFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.nonlimitedregister.header.headerFields.Builder other) {
    return new com.equifax.fabric.uk.ingestion.nonlimitedregister.header.headerFields.Builder(other);
  }
  
  /** Creates a new headerFields RecordBuilder by copying an existing headerFields instance */
  public static com.equifax.fabric.uk.ingestion.nonlimitedregister.header.headerFields.Builder newBuilder(com.equifax.fabric.uk.ingestion.nonlimitedregister.header.headerFields other) {
    return new com.equifax.fabric.uk.ingestion.nonlimitedregister.header.headerFields.Builder(other);
  }
  
  /**
   * RecordBuilder for headerFields instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<headerFields>
    implements org.apache.avro.data.RecordBuilder<headerFields> {

    private java.lang.CharSequence RUN_NUMBER;
    private java.lang.CharSequence DATE_CREATED;
    private java.lang.CharSequence TIME_CREATED;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.nonlimitedregister.header.headerFields.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.nonlimitedregister.header.headerFields.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.RUN_NUMBER)) {
        this.RUN_NUMBER = data().deepCopy(fields()[0].schema(), other.RUN_NUMBER);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.DATE_CREATED)) {
        this.DATE_CREATED = data().deepCopy(fields()[1].schema(), other.DATE_CREATED);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.TIME_CREATED)) {
        this.TIME_CREATED = data().deepCopy(fields()[2].schema(), other.TIME_CREATED);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing headerFields instance */
    private Builder(com.equifax.fabric.uk.ingestion.nonlimitedregister.header.headerFields other) {
            super(com.equifax.fabric.uk.ingestion.nonlimitedregister.header.headerFields.SCHEMA$);
      if (isValidValue(fields()[0], other.RUN_NUMBER)) {
        this.RUN_NUMBER = data().deepCopy(fields()[0].schema(), other.RUN_NUMBER);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.DATE_CREATED)) {
        this.DATE_CREATED = data().deepCopy(fields()[1].schema(), other.DATE_CREATED);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.TIME_CREATED)) {
        this.TIME_CREATED = data().deepCopy(fields()[2].schema(), other.TIME_CREATED);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'RUN_NUMBER' field */
    public java.lang.CharSequence getRUNNUMBER() {
      return RUN_NUMBER;
    }
    
    /** Sets the value of the 'RUN_NUMBER' field */
    public com.equifax.fabric.uk.ingestion.nonlimitedregister.header.headerFields.Builder setRUNNUMBER(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.RUN_NUMBER = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'RUN_NUMBER' field has been set */
    public boolean hasRUNNUMBER() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'RUN_NUMBER' field */
    public com.equifax.fabric.uk.ingestion.nonlimitedregister.header.headerFields.Builder clearRUNNUMBER() {
      RUN_NUMBER = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'DATE_CREATED' field */
    public java.lang.CharSequence getDATECREATED() {
      return DATE_CREATED;
    }
    
    /** Sets the value of the 'DATE_CREATED' field */
    public com.equifax.fabric.uk.ingestion.nonlimitedregister.header.headerFields.Builder setDATECREATED(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.DATE_CREATED = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'DATE_CREATED' field has been set */
    public boolean hasDATECREATED() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'DATE_CREATED' field */
    public com.equifax.fabric.uk.ingestion.nonlimitedregister.header.headerFields.Builder clearDATECREATED() {
      DATE_CREATED = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'TIME_CREATED' field */
    public java.lang.CharSequence getTIMECREATED() {
      return TIME_CREATED;
    }
    
    /** Sets the value of the 'TIME_CREATED' field */
    public com.equifax.fabric.uk.ingestion.nonlimitedregister.header.headerFields.Builder setTIMECREATED(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.TIME_CREATED = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'TIME_CREATED' field has been set */
    public boolean hasTIMECREATED() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'TIME_CREATED' field */
    public com.equifax.fabric.uk.ingestion.nonlimitedregister.header.headerFields.Builder clearTIMECREATED() {
      TIME_CREATED = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public headerFields build() {
      try {
        headerFields record = new headerFields();
        record.RUN_NUMBER = fieldSetFlags()[0] ? this.RUN_NUMBER : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.DATE_CREATED = fieldSetFlags()[1] ? this.DATE_CREATED : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.TIME_CREATED = fieldSetFlags()[2] ? this.TIME_CREATED : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
