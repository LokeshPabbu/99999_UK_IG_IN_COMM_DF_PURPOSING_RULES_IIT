/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase\",\"fields\":[{\"name\":\"FlatOrUnit\",\"type\":[\"null\",\"string\"],\"doc\":\"Address Line - Flat or Unit\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"HouseName\",\"type\":[\"null\",\"string\"],\"doc\":\"Address Line - House Name\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"HouseNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Address Line - House Number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"Street\",\"type\":[\"null\",\"string\"],\"doc\":\"Address Line - Street\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"District\",\"type\":[\"null\",\"string\"],\"doc\":\"Address Line - District\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"Town\",\"type\":[\"null\",\"string\"],\"doc\":\"Address Line - Town\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"County\",\"type\":[\"null\",\"string\"],\"doc\":\"County\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"Postcode\",\"type\":[\"null\",\"string\"],\"doc\":\"Postcode\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Address Line - Flat or Unit */
  @Deprecated public java.lang.CharSequence FlatOrUnit;
  /** Address Line - House Name */
  @Deprecated public java.lang.CharSequence HouseName;
  /** Address Line - House Number */
  @Deprecated public java.lang.CharSequence HouseNumber;
  /** Address Line - Street */
  @Deprecated public java.lang.CharSequence Street;
  /** Address Line - District */
  @Deprecated public java.lang.CharSequence District;
  /** Address Line - Town */
  @Deprecated public java.lang.CharSequence Town;
  /** County */
  @Deprecated public java.lang.CharSequence County;
  /** Postcode */
  @Deprecated public java.lang.CharSequence Postcode;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse() {}

  /**
   * All-args constructor.
   */
  public AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse(java.lang.CharSequence FlatOrUnit, java.lang.CharSequence HouseName, java.lang.CharSequence HouseNumber, java.lang.CharSequence Street, java.lang.CharSequence District, java.lang.CharSequence Town, java.lang.CharSequence County, java.lang.CharSequence Postcode) {
    this.FlatOrUnit = FlatOrUnit;
    this.HouseName = HouseName;
    this.HouseNumber = HouseNumber;
    this.Street = Street;
    this.District = District;
    this.Town = Town;
    this.County = County;
    this.Postcode = Postcode;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return FlatOrUnit;
    case 1: return HouseName;
    case 2: return HouseNumber;
    case 3: return Street;
    case 4: return District;
    case 5: return Town;
    case 6: return County;
    case 7: return Postcode;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: FlatOrUnit = (java.lang.CharSequence)value$; break;
    case 1: HouseName = (java.lang.CharSequence)value$; break;
    case 2: HouseNumber = (java.lang.CharSequence)value$; break;
    case 3: Street = (java.lang.CharSequence)value$; break;
    case 4: District = (java.lang.CharSequence)value$; break;
    case 5: Town = (java.lang.CharSequence)value$; break;
    case 6: County = (java.lang.CharSequence)value$; break;
    case 7: Postcode = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'FlatOrUnit' field.
   * Address Line - Flat or Unit   */
  public java.lang.CharSequence getFlatOrUnit() {
    return FlatOrUnit;
  }

  /**
   * Sets the value of the 'FlatOrUnit' field.
   * Address Line - Flat or Unit   * @param value the value to set.
   */
  public void setFlatOrUnit(java.lang.CharSequence value) {
    this.FlatOrUnit = value;
  }

  /**
   * Gets the value of the 'HouseName' field.
   * Address Line - House Name   */
  public java.lang.CharSequence getHouseName() {
    return HouseName;
  }

  /**
   * Sets the value of the 'HouseName' field.
   * Address Line - House Name   * @param value the value to set.
   */
  public void setHouseName(java.lang.CharSequence value) {
    this.HouseName = value;
  }

  /**
   * Gets the value of the 'HouseNumber' field.
   * Address Line - House Number   */
  public java.lang.CharSequence getHouseNumber() {
    return HouseNumber;
  }

  /**
   * Sets the value of the 'HouseNumber' field.
   * Address Line - House Number   * @param value the value to set.
   */
  public void setHouseNumber(java.lang.CharSequence value) {
    this.HouseNumber = value;
  }

  /**
   * Gets the value of the 'Street' field.
   * Address Line - Street   */
  public java.lang.CharSequence getStreet() {
    return Street;
  }

  /**
   * Sets the value of the 'Street' field.
   * Address Line - Street   * @param value the value to set.
   */
  public void setStreet(java.lang.CharSequence value) {
    this.Street = value;
  }

  /**
   * Gets the value of the 'District' field.
   * Address Line - District   */
  public java.lang.CharSequence getDistrict() {
    return District;
  }

  /**
   * Sets the value of the 'District' field.
   * Address Line - District   * @param value the value to set.
   */
  public void setDistrict(java.lang.CharSequence value) {
    this.District = value;
  }

  /**
   * Gets the value of the 'Town' field.
   * Address Line - Town   */
  public java.lang.CharSequence getTown() {
    return Town;
  }

  /**
   * Sets the value of the 'Town' field.
   * Address Line - Town   * @param value the value to set.
   */
  public void setTown(java.lang.CharSequence value) {
    this.Town = value;
  }

  /**
   * Gets the value of the 'County' field.
   * County   */
  public java.lang.CharSequence getCounty() {
    return County;
  }

  /**
   * Sets the value of the 'County' field.
   * County   * @param value the value to set.
   */
  public void setCounty(java.lang.CharSequence value) {
    this.County = value;
  }

  /**
   * Gets the value of the 'Postcode' field.
   * Postcode   */
  public java.lang.CharSequence getPostcode() {
    return Postcode;
  }

  /**
   * Sets the value of the 'Postcode' field.
   * Postcode   * @param value the value to set.
   */
  public void setPostcode(java.lang.CharSequence value) {
    this.Postcode = value;
  }

  /** Creates a new AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder();
  }
  
  /** Creates a new AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder newBuilder(com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder other) {
    return new com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder(other);
  }
  
  /** Creates a new AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse RecordBuilder by copying an existing AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse instance */
  public static com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder newBuilder(com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse other) {
    return new com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder(other);
  }
  
  /**
   * RecordBuilder for AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse>
    implements org.apache.avro.data.RecordBuilder<AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse> {

    private java.lang.CharSequence FlatOrUnit;
    private java.lang.CharSequence HouseName;
    private java.lang.CharSequence HouseNumber;
    private java.lang.CharSequence Street;
    private java.lang.CharSequence District;
    private java.lang.CharSequence Town;
    private java.lang.CharSequence County;
    private java.lang.CharSequence Postcode;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.FlatOrUnit)) {
        this.FlatOrUnit = data().deepCopy(fields()[0].schema(), other.FlatOrUnit);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.HouseName)) {
        this.HouseName = data().deepCopy(fields()[1].schema(), other.HouseName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.HouseNumber)) {
        this.HouseNumber = data().deepCopy(fields()[2].schema(), other.HouseNumber);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Street)) {
        this.Street = data().deepCopy(fields()[3].schema(), other.Street);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.District)) {
        this.District = data().deepCopy(fields()[4].schema(), other.District);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Town)) {
        this.Town = data().deepCopy(fields()[5].schema(), other.Town);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.County)) {
        this.County = data().deepCopy(fields()[6].schema(), other.County);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.Postcode)) {
        this.Postcode = data().deepCopy(fields()[7].schema(), other.Postcode);
        fieldSetFlags()[7] = true;
      }
    }
    
    /** Creates a Builder by copying an existing AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse instance */
    private Builder(com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse other) {
            super(com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.SCHEMA$);
      if (isValidValue(fields()[0], other.FlatOrUnit)) {
        this.FlatOrUnit = data().deepCopy(fields()[0].schema(), other.FlatOrUnit);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.HouseName)) {
        this.HouseName = data().deepCopy(fields()[1].schema(), other.HouseName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.HouseNumber)) {
        this.HouseNumber = data().deepCopy(fields()[2].schema(), other.HouseNumber);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Street)) {
        this.Street = data().deepCopy(fields()[3].schema(), other.Street);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.District)) {
        this.District = data().deepCopy(fields()[4].schema(), other.District);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Town)) {
        this.Town = data().deepCopy(fields()[5].schema(), other.Town);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.County)) {
        this.County = data().deepCopy(fields()[6].schema(), other.County);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.Postcode)) {
        this.Postcode = data().deepCopy(fields()[7].schema(), other.Postcode);
        fieldSetFlags()[7] = true;
      }
    }

    /** Gets the value of the 'FlatOrUnit' field */
    public java.lang.CharSequence getFlatOrUnit() {
      return FlatOrUnit;
    }
    
    /** Sets the value of the 'FlatOrUnit' field */
    public com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder setFlatOrUnit(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.FlatOrUnit = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'FlatOrUnit' field has been set */
    public boolean hasFlatOrUnit() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'FlatOrUnit' field */
    public com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder clearFlatOrUnit() {
      FlatOrUnit = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'HouseName' field */
    public java.lang.CharSequence getHouseName() {
      return HouseName;
    }
    
    /** Sets the value of the 'HouseName' field */
    public com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder setHouseName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.HouseName = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'HouseName' field has been set */
    public boolean hasHouseName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'HouseName' field */
    public com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder clearHouseName() {
      HouseName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'HouseNumber' field */
    public java.lang.CharSequence getHouseNumber() {
      return HouseNumber;
    }
    
    /** Sets the value of the 'HouseNumber' field */
    public com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder setHouseNumber(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.HouseNumber = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'HouseNumber' field has been set */
    public boolean hasHouseNumber() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'HouseNumber' field */
    public com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder clearHouseNumber() {
      HouseNumber = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'Street' field */
    public java.lang.CharSequence getStreet() {
      return Street;
    }
    
    /** Sets the value of the 'Street' field */
    public com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder setStreet(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.Street = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'Street' field has been set */
    public boolean hasStreet() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'Street' field */
    public com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder clearStreet() {
      Street = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'District' field */
    public java.lang.CharSequence getDistrict() {
      return District;
    }
    
    /** Sets the value of the 'District' field */
    public com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder setDistrict(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.District = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'District' field has been set */
    public boolean hasDistrict() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'District' field */
    public com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder clearDistrict() {
      District = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'Town' field */
    public java.lang.CharSequence getTown() {
      return Town;
    }
    
    /** Sets the value of the 'Town' field */
    public com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder setTown(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.Town = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'Town' field has been set */
    public boolean hasTown() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'Town' field */
    public com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder clearTown() {
      Town = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'County' field */
    public java.lang.CharSequence getCounty() {
      return County;
    }
    
    /** Sets the value of the 'County' field */
    public com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder setCounty(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.County = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'County' field has been set */
    public boolean hasCounty() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'County' field */
    public com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder clearCounty() {
      County = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'Postcode' field */
    public java.lang.CharSequence getPostcode() {
      return Postcode;
    }
    
    /** Sets the value of the 'Postcode' field */
    public com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder setPostcode(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.Postcode = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'Postcode' field has been set */
    public boolean hasPostcode() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'Postcode' field */
    public com.equifax.fabric.uk.ingestion.companycifas.rawfields.cifascase.AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse.Builder clearPostcode() {
      Postcode = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse build() {
      try {
        AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse record = new AddressAddressDataSubjectDataCaseDataCIFAScaseFraudDataTransferResponse();
        record.FlatOrUnit = fieldSetFlags()[0] ? this.FlatOrUnit : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.HouseName = fieldSetFlags()[1] ? this.HouseName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.HouseNumber = fieldSetFlags()[2] ? this.HouseNumber : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.Street = fieldSetFlags()[3] ? this.Street : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.District = fieldSetFlags()[4] ? this.District : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.Town = fieldSetFlags()[5] ? this.Town : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.County = fieldSetFlags()[6] ? this.County : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.Postcode = fieldSetFlags()[7] ? this.Postcode : (java.lang.CharSequence) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
