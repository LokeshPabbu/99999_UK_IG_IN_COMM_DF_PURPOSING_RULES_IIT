/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class residentialAddressofficercorporateBodycompaniesHouseOutput extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"residentialAddressofficercorporateBodycompaniesHouseOutput\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody\",\"fields\":[{\"name\":\"houseNameNum\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address house name/number\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"street\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address street\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"area\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address area\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"postTown\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address posttown\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"region\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address region\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"country\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address country\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"postCode\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address postcode\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"sameAsServiceAddress\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address same as service address indicator\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Officer residential address house name/number */
  @Deprecated public java.lang.CharSequence houseNameNum;
  /** Officer residential address street */
  @Deprecated public java.lang.CharSequence street;
  /** Officer residential address area */
  @Deprecated public java.lang.CharSequence area;
  /** Officer residential address posttown */
  @Deprecated public java.lang.CharSequence postTown;
  /** Officer residential address region */
  @Deprecated public java.lang.CharSequence region;
  /** Officer residential address country */
  @Deprecated public java.lang.CharSequence country;
  /** Officer residential address postcode */
  @Deprecated public java.lang.CharSequence postCode;
  /** Officer residential address same as service address indicator */
  @Deprecated public java.lang.CharSequence sameAsServiceAddress;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public residentialAddressofficercorporateBodycompaniesHouseOutput() {}

  /**
   * All-args constructor.
   */
  public residentialAddressofficercorporateBodycompaniesHouseOutput(java.lang.CharSequence houseNameNum, java.lang.CharSequence street, java.lang.CharSequence area, java.lang.CharSequence postTown, java.lang.CharSequence region, java.lang.CharSequence country, java.lang.CharSequence postCode, java.lang.CharSequence sameAsServiceAddress) {
    this.houseNameNum = houseNameNum;
    this.street = street;
    this.area = area;
    this.postTown = postTown;
    this.region = region;
    this.country = country;
    this.postCode = postCode;
    this.sameAsServiceAddress = sameAsServiceAddress;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return houseNameNum;
    case 1: return street;
    case 2: return area;
    case 3: return postTown;
    case 4: return region;
    case 5: return country;
    case 6: return postCode;
    case 7: return sameAsServiceAddress;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: houseNameNum = (java.lang.CharSequence)value$; break;
    case 1: street = (java.lang.CharSequence)value$; break;
    case 2: area = (java.lang.CharSequence)value$; break;
    case 3: postTown = (java.lang.CharSequence)value$; break;
    case 4: region = (java.lang.CharSequence)value$; break;
    case 5: country = (java.lang.CharSequence)value$; break;
    case 6: postCode = (java.lang.CharSequence)value$; break;
    case 7: sameAsServiceAddress = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'houseNameNum' field.
   * Officer residential address house name/number   */
  public java.lang.CharSequence getHouseNameNum() {
    return houseNameNum;
  }

  /**
   * Sets the value of the 'houseNameNum' field.
   * Officer residential address house name/number   * @param value the value to set.
   */
  public void setHouseNameNum(java.lang.CharSequence value) {
    this.houseNameNum = value;
  }

  /**
   * Gets the value of the 'street' field.
   * Officer residential address street   */
  public java.lang.CharSequence getStreet() {
    return street;
  }

  /**
   * Sets the value of the 'street' field.
   * Officer residential address street   * @param value the value to set.
   */
  public void setStreet(java.lang.CharSequence value) {
    this.street = value;
  }

  /**
   * Gets the value of the 'area' field.
   * Officer residential address area   */
  public java.lang.CharSequence getArea() {
    return area;
  }

  /**
   * Sets the value of the 'area' field.
   * Officer residential address area   * @param value the value to set.
   */
  public void setArea(java.lang.CharSequence value) {
    this.area = value;
  }

  /**
   * Gets the value of the 'postTown' field.
   * Officer residential address posttown   */
  public java.lang.CharSequence getPostTown() {
    return postTown;
  }

  /**
   * Sets the value of the 'postTown' field.
   * Officer residential address posttown   * @param value the value to set.
   */
  public void setPostTown(java.lang.CharSequence value) {
    this.postTown = value;
  }

  /**
   * Gets the value of the 'region' field.
   * Officer residential address region   */
  public java.lang.CharSequence getRegion() {
    return region;
  }

  /**
   * Sets the value of the 'region' field.
   * Officer residential address region   * @param value the value to set.
   */
  public void setRegion(java.lang.CharSequence value) {
    this.region = value;
  }

  /**
   * Gets the value of the 'country' field.
   * Officer residential address country   */
  public java.lang.CharSequence getCountry() {
    return country;
  }

  /**
   * Sets the value of the 'country' field.
   * Officer residential address country   * @param value the value to set.
   */
  public void setCountry(java.lang.CharSequence value) {
    this.country = value;
  }

  /**
   * Gets the value of the 'postCode' field.
   * Officer residential address postcode   */
  public java.lang.CharSequence getPostCode() {
    return postCode;
  }

  /**
   * Sets the value of the 'postCode' field.
   * Officer residential address postcode   * @param value the value to set.
   */
  public void setPostCode(java.lang.CharSequence value) {
    this.postCode = value;
  }

  /**
   * Gets the value of the 'sameAsServiceAddress' field.
   * Officer residential address same as service address indicator   */
  public java.lang.CharSequence getSameAsServiceAddress() {
    return sameAsServiceAddress;
  }

  /**
   * Sets the value of the 'sameAsServiceAddress' field.
   * Officer residential address same as service address indicator   * @param value the value to set.
   */
  public void setSameAsServiceAddress(java.lang.CharSequence value) {
    this.sameAsServiceAddress = value;
  }

  /** Creates a new residentialAddressofficercorporateBodycompaniesHouseOutput RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder();
  }
  
  /** Creates a new residentialAddressofficercorporateBodycompaniesHouseOutput RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder newBuilder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder other) {
    return new com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder(other);
  }
  
  /** Creates a new residentialAddressofficercorporateBodycompaniesHouseOutput RecordBuilder by copying an existing residentialAddressofficercorporateBodycompaniesHouseOutput instance */
  public static com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder newBuilder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput other) {
    return new com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder(other);
  }
  
  /**
   * RecordBuilder for residentialAddressofficercorporateBodycompaniesHouseOutput instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<residentialAddressofficercorporateBodycompaniesHouseOutput>
    implements org.apache.avro.data.RecordBuilder<residentialAddressofficercorporateBodycompaniesHouseOutput> {

    private java.lang.CharSequence houseNameNum;
    private java.lang.CharSequence street;
    private java.lang.CharSequence area;
    private java.lang.CharSequence postTown;
    private java.lang.CharSequence region;
    private java.lang.CharSequence country;
    private java.lang.CharSequence postCode;
    private java.lang.CharSequence sameAsServiceAddress;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.houseNameNum)) {
        this.houseNameNum = data().deepCopy(fields()[0].schema(), other.houseNameNum);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.street)) {
        this.street = data().deepCopy(fields()[1].schema(), other.street);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.area)) {
        this.area = data().deepCopy(fields()[2].schema(), other.area);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.postTown)) {
        this.postTown = data().deepCopy(fields()[3].schema(), other.postTown);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.region)) {
        this.region = data().deepCopy(fields()[4].schema(), other.region);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.country)) {
        this.country = data().deepCopy(fields()[5].schema(), other.country);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.postCode)) {
        this.postCode = data().deepCopy(fields()[6].schema(), other.postCode);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.sameAsServiceAddress)) {
        this.sameAsServiceAddress = data().deepCopy(fields()[7].schema(), other.sameAsServiceAddress);
        fieldSetFlags()[7] = true;
      }
    }
    
    /** Creates a Builder by copying an existing residentialAddressofficercorporateBodycompaniesHouseOutput instance */
    private Builder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput other) {
            super(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.SCHEMA$);
      if (isValidValue(fields()[0], other.houseNameNum)) {
        this.houseNameNum = data().deepCopy(fields()[0].schema(), other.houseNameNum);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.street)) {
        this.street = data().deepCopy(fields()[1].schema(), other.street);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.area)) {
        this.area = data().deepCopy(fields()[2].schema(), other.area);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.postTown)) {
        this.postTown = data().deepCopy(fields()[3].schema(), other.postTown);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.region)) {
        this.region = data().deepCopy(fields()[4].schema(), other.region);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.country)) {
        this.country = data().deepCopy(fields()[5].schema(), other.country);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.postCode)) {
        this.postCode = data().deepCopy(fields()[6].schema(), other.postCode);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.sameAsServiceAddress)) {
        this.sameAsServiceAddress = data().deepCopy(fields()[7].schema(), other.sameAsServiceAddress);
        fieldSetFlags()[7] = true;
      }
    }

    /** Gets the value of the 'houseNameNum' field */
    public java.lang.CharSequence getHouseNameNum() {
      return houseNameNum;
    }
    
    /** Sets the value of the 'houseNameNum' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder setHouseNameNum(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.houseNameNum = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'houseNameNum' field has been set */
    public boolean hasHouseNameNum() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'houseNameNum' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder clearHouseNameNum() {
      houseNameNum = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'street' field */
    public java.lang.CharSequence getStreet() {
      return street;
    }
    
    /** Sets the value of the 'street' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder setStreet(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.street = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'street' field has been set */
    public boolean hasStreet() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'street' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder clearStreet() {
      street = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'area' field */
    public java.lang.CharSequence getArea() {
      return area;
    }
    
    /** Sets the value of the 'area' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder setArea(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.area = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'area' field has been set */
    public boolean hasArea() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'area' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder clearArea() {
      area = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'postTown' field */
    public java.lang.CharSequence getPostTown() {
      return postTown;
    }
    
    /** Sets the value of the 'postTown' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder setPostTown(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.postTown = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'postTown' field has been set */
    public boolean hasPostTown() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'postTown' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder clearPostTown() {
      postTown = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'region' field */
    public java.lang.CharSequence getRegion() {
      return region;
    }
    
    /** Sets the value of the 'region' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder setRegion(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.region = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'region' field has been set */
    public boolean hasRegion() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'region' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder clearRegion() {
      region = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'country' field */
    public java.lang.CharSequence getCountry() {
      return country;
    }
    
    /** Sets the value of the 'country' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder setCountry(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.country = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'country' field has been set */
    public boolean hasCountry() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'country' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder clearCountry() {
      country = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'postCode' field */
    public java.lang.CharSequence getPostCode() {
      return postCode;
    }
    
    /** Sets the value of the 'postCode' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder setPostCode(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.postCode = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'postCode' field has been set */
    public boolean hasPostCode() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'postCode' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder clearPostCode() {
      postCode = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'sameAsServiceAddress' field */
    public java.lang.CharSequence getSameAsServiceAddress() {
      return sameAsServiceAddress;
    }
    
    /** Sets the value of the 'sameAsServiceAddress' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder setSameAsServiceAddress(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.sameAsServiceAddress = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'sameAsServiceAddress' field has been set */
    public boolean hasSameAsServiceAddress() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'sameAsServiceAddress' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.residentialAddressofficercorporateBodycompaniesHouseOutput.Builder clearSameAsServiceAddress() {
      sameAsServiceAddress = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public residentialAddressofficercorporateBodycompaniesHouseOutput build() {
      try {
        residentialAddressofficercorporateBodycompaniesHouseOutput record = new residentialAddressofficercorporateBodycompaniesHouseOutput();
        record.houseNameNum = fieldSetFlags()[0] ? this.houseNameNum : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.street = fieldSetFlags()[1] ? this.street : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.area = fieldSetFlags()[2] ? this.area : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.postTown = fieldSetFlags()[3] ? this.postTown : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.region = fieldSetFlags()[4] ? this.region : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.country = fieldSetFlags()[5] ? this.country : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.postCode = fieldSetFlags()[6] ? this.postCode : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.sameAsServiceAddress = fieldSetFlags()[7] ? this.sameAsServiceAddress : (java.lang.CharSequence) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
