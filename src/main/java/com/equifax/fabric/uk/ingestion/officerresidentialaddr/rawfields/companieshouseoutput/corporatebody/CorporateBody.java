/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CorporateBody extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CorporateBody\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody\",\"fields\":[{\"name\":\"incorporationNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Company Number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"doc\":\"Company Name\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"changeType\",\"type\":[\"null\",\"string\"],\"doc\":\"Change Type - appointment, termination ,change ,correction ,secureRemoval ,merge\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"transactionType\",\"type\":[\"null\",\"string\"],\"doc\":\"Transaction Type\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"transactionId\",\"type\":[\"null\",\"string\"],\"doc\":\"Transaction ID\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"officer\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"officercorporateBodycompaniesHouseOutput\",\"fields\":[{\"name\":\"externalNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer Person number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"dateOfBirth\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer Date of birth\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"residentialAddress\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"residentialAddressofficercorporateBodycompaniesHouseOutput\",\"fields\":[{\"name\":\"houseNameNum\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address house name/number\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"street\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address street\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"area\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address area\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"postTown\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address posttown\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"region\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address region\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"country\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address country\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"postCode\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address postcode\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"sameAsServiceAddress\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer residential address same as service address indicator\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Company Number */
  @Deprecated public java.lang.CharSequence incorporationNumber;
  /** Company Name */
  @Deprecated public java.lang.CharSequence name;
  /** Change Type - appointment, termination ,change ,correction ,secureRemoval ,merge */
  @Deprecated public java.lang.CharSequence changeType;
  /** Transaction Type */
  @Deprecated public java.lang.CharSequence transactionType;
  /** Transaction ID */
  @Deprecated public java.lang.CharSequence transactionId;
  @Deprecated public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput officer;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public CorporateBody() {}

  /**
   * All-args constructor.
   */
  public CorporateBody(java.lang.CharSequence incorporationNumber, java.lang.CharSequence name, java.lang.CharSequence changeType, java.lang.CharSequence transactionType, java.lang.CharSequence transactionId, com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput officer) {
    this.incorporationNumber = incorporationNumber;
    this.name = name;
    this.changeType = changeType;
    this.transactionType = transactionType;
    this.transactionId = transactionId;
    this.officer = officer;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return incorporationNumber;
    case 1: return name;
    case 2: return changeType;
    case 3: return transactionType;
    case 4: return transactionId;
    case 5: return officer;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: incorporationNumber = (java.lang.CharSequence)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: changeType = (java.lang.CharSequence)value$; break;
    case 3: transactionType = (java.lang.CharSequence)value$; break;
    case 4: transactionId = (java.lang.CharSequence)value$; break;
    case 5: officer = (com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'incorporationNumber' field.
   * Company Number   */
  public java.lang.CharSequence getIncorporationNumber() {
    return incorporationNumber;
  }

  /**
   * Sets the value of the 'incorporationNumber' field.
   * Company Number   * @param value the value to set.
   */
  public void setIncorporationNumber(java.lang.CharSequence value) {
    this.incorporationNumber = value;
  }

  /**
   * Gets the value of the 'name' field.
   * Company Name   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * Company Name   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'changeType' field.
   * Change Type - appointment, termination ,change ,correction ,secureRemoval ,merge   */
  public java.lang.CharSequence getChangeType() {
    return changeType;
  }

  /**
   * Sets the value of the 'changeType' field.
   * Change Type - appointment, termination ,change ,correction ,secureRemoval ,merge   * @param value the value to set.
   */
  public void setChangeType(java.lang.CharSequence value) {
    this.changeType = value;
  }

  /**
   * Gets the value of the 'transactionType' field.
   * Transaction Type   */
  public java.lang.CharSequence getTransactionType() {
    return transactionType;
  }

  /**
   * Sets the value of the 'transactionType' field.
   * Transaction Type   * @param value the value to set.
   */
  public void setTransactionType(java.lang.CharSequence value) {
    this.transactionType = value;
  }

  /**
   * Gets the value of the 'transactionId' field.
   * Transaction ID   */
  public java.lang.CharSequence getTransactionId() {
    return transactionId;
  }

  /**
   * Sets the value of the 'transactionId' field.
   * Transaction ID   * @param value the value to set.
   */
  public void setTransactionId(java.lang.CharSequence value) {
    this.transactionId = value;
  }

  /**
   * Gets the value of the 'officer' field.
   */
  public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput getOfficer() {
    return officer;
  }

  /**
   * Sets the value of the 'officer' field.
   * @param value the value to set.
   */
  public void setOfficer(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput value) {
    this.officer = value;
  }

  /** Creates a new CorporateBody RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder();
  }
  
  /** Creates a new CorporateBody RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder newBuilder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder other) {
    return new com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder(other);
  }
  
  /** Creates a new CorporateBody RecordBuilder by copying an existing CorporateBody instance */
  public static com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder newBuilder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody other) {
    return new com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder(other);
  }
  
  /**
   * RecordBuilder for CorporateBody instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CorporateBody>
    implements org.apache.avro.data.RecordBuilder<CorporateBody> {

    private java.lang.CharSequence incorporationNumber;
    private java.lang.CharSequence name;
    private java.lang.CharSequence changeType;
    private java.lang.CharSequence transactionType;
    private java.lang.CharSequence transactionId;
    private com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput officer;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.incorporationNumber)) {
        this.incorporationNumber = data().deepCopy(fields()[0].schema(), other.incorporationNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.changeType)) {
        this.changeType = data().deepCopy(fields()[2].schema(), other.changeType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.transactionType)) {
        this.transactionType = data().deepCopy(fields()[3].schema(), other.transactionType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.transactionId)) {
        this.transactionId = data().deepCopy(fields()[4].schema(), other.transactionId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.officer)) {
        this.officer = data().deepCopy(fields()[5].schema(), other.officer);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing CorporateBody instance */
    private Builder(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody other) {
            super(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.SCHEMA$);
      if (isValidValue(fields()[0], other.incorporationNumber)) {
        this.incorporationNumber = data().deepCopy(fields()[0].schema(), other.incorporationNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.changeType)) {
        this.changeType = data().deepCopy(fields()[2].schema(), other.changeType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.transactionType)) {
        this.transactionType = data().deepCopy(fields()[3].schema(), other.transactionType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.transactionId)) {
        this.transactionId = data().deepCopy(fields()[4].schema(), other.transactionId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.officer)) {
        this.officer = data().deepCopy(fields()[5].schema(), other.officer);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'incorporationNumber' field */
    public java.lang.CharSequence getIncorporationNumber() {
      return incorporationNumber;
    }
    
    /** Sets the value of the 'incorporationNumber' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder setIncorporationNumber(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.incorporationNumber = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'incorporationNumber' field has been set */
    public boolean hasIncorporationNumber() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'incorporationNumber' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder clearIncorporationNumber() {
      incorporationNumber = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'name' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'changeType' field */
    public java.lang.CharSequence getChangeType() {
      return changeType;
    }
    
    /** Sets the value of the 'changeType' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder setChangeType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.changeType = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'changeType' field has been set */
    public boolean hasChangeType() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'changeType' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder clearChangeType() {
      changeType = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'transactionType' field */
    public java.lang.CharSequence getTransactionType() {
      return transactionType;
    }
    
    /** Sets the value of the 'transactionType' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder setTransactionType(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.transactionType = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'transactionType' field has been set */
    public boolean hasTransactionType() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'transactionType' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder clearTransactionType() {
      transactionType = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'transactionId' field */
    public java.lang.CharSequence getTransactionId() {
      return transactionId;
    }
    
    /** Sets the value of the 'transactionId' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder setTransactionId(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.transactionId = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'transactionId' field has been set */
    public boolean hasTransactionId() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'transactionId' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder clearTransactionId() {
      transactionId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'officer' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput getOfficer() {
      return officer;
    }
    
    /** Sets the value of the 'officer' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder setOfficer(com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput value) {
      validate(fields()[5], value);
      this.officer = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'officer' field has been set */
    public boolean hasOfficer() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'officer' field */
    public com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.CorporateBody.Builder clearOfficer() {
      officer = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public CorporateBody build() {
      try {
        CorporateBody record = new CorporateBody();
        record.incorporationNumber = fieldSetFlags()[0] ? this.incorporationNumber : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.changeType = fieldSetFlags()[2] ? this.changeType : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.transactionType = fieldSetFlags()[3] ? this.transactionType : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.transactionId = fieldSetFlags()[4] ? this.transactionId : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.officer = fieldSetFlags()[5] ? this.officer : (com.equifax.fabric.uk.ingestion.officerresidentialaddr.rawfields.companieshouseoutput.corporatebody.officercorporateBodycompaniesHouseOutput) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
