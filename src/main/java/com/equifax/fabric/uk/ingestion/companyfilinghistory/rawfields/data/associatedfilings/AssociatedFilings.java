/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AssociatedFilings extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AssociatedFilings\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings\",\"fields\":[{\"name\":\"date\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the associated filing was processed\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"doc\":\"A description of the associated filing.For enumeration descriptions see description section in the enumeration mappings file\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"doc\":\"The type of the associated filing\",\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The date the associated filing was processed */
  @Deprecated public java.lang.CharSequence date;
  /** A description of the associated filing.For enumeration descriptions see description section in the enumeration mappings file */
  @Deprecated public java.lang.CharSequence description;
  /** The type of the associated filing */
  @Deprecated public java.lang.CharSequence type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AssociatedFilings() {}

  /**
   * All-args constructor.
   */
  public AssociatedFilings(java.lang.CharSequence date, java.lang.CharSequence description, java.lang.CharSequence type) {
    this.date = date;
    this.description = description;
    this.type = type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return date;
    case 1: return description;
    case 2: return type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: date = (java.lang.CharSequence)value$; break;
    case 1: description = (java.lang.CharSequence)value$; break;
    case 2: type = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'date' field.
   * The date the associated filing was processed   */
  public java.lang.CharSequence getDate() {
    return date;
  }

  /**
   * Sets the value of the 'date' field.
   * The date the associated filing was processed   * @param value the value to set.
   */
  public void setDate(java.lang.CharSequence value) {
    this.date = value;
  }

  /**
   * Gets the value of the 'description' field.
   * A description of the associated filing.For enumeration descriptions see description section in the enumeration mappings file   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * A description of the associated filing.For enumeration descriptions see description section in the enumeration mappings file   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'type' field.
   * The type of the associated filing   */
  public java.lang.CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * The type of the associated filing   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /** Creates a new AssociatedFilings RecordBuilder */
  public static com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings.Builder newBuilder() {
    return new com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings.Builder();
  }
  
  /** Creates a new AssociatedFilings RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings.Builder other) {
    return new com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings.Builder(other);
  }
  
  /** Creates a new AssociatedFilings RecordBuilder by copying an existing AssociatedFilings instance */
  public static com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings.Builder newBuilder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings other) {
    return new com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings.Builder(other);
  }
  
  /**
   * RecordBuilder for AssociatedFilings instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AssociatedFilings>
    implements org.apache.avro.data.RecordBuilder<AssociatedFilings> {

    private java.lang.CharSequence date;
    private java.lang.CharSequence description;
    private java.lang.CharSequence type;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.date)) {
        this.date = data().deepCopy(fields()[0].schema(), other.date);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing AssociatedFilings instance */
    private Builder(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings other) {
            super(com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings.SCHEMA$);
      if (isValidValue(fields()[0], other.date)) {
        this.date = data().deepCopy(fields()[0].schema(), other.date);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'date' field */
    public java.lang.CharSequence getDate() {
      return date;
    }
    
    /** Sets the value of the 'date' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings.Builder setDate(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.date = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'date' field has been set */
    public boolean hasDate() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'date' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings.Builder clearDate() {
      date = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.CharSequence getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.description = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'description' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings.Builder clearDescription() {
      description = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public java.lang.CharSequence getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings.Builder setType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.type = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'type' field */
    public com.equifax.fabric.uk.ingestion.companyfilinghistory.rawfields.data.associatedfilings.AssociatedFilings.Builder clearType() {
      type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public AssociatedFilings build() {
      try {
        AssociatedFilings record = new AssociatedFilings();
        record.date = fieldSetFlags()[0] ? this.date : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.description = fieldSetFlags()[1] ? this.description : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.type = fieldSetFlags()[2] ? this.type : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
