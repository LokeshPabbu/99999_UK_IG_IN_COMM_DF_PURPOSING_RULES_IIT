/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.purposing.companygroupstructure;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CompanyGroupStructure extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CompanyGroupStructure\",\"namespace\":\"com.equifax.fabric.uk.purposing.companygroupstructure\",\"fields\":[{\"name\":\"companyNumber\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"companyName\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"immediateParentCompanyNumber\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"immediateParentCompanyName\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ultimateParentCompanyNumber\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ultimateParentCompanyName\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"issuedShares\",\"type\":[{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"IssuedShared\",\"fields\":[{\"name\":\"totalIssuedType\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"totalIssuedNumber\",\"type\":[\"null\",\"int\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"totalIssuedCurrency\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"totalIssuedshareValue\",\"type\":[\"null\",\"int\"],\"default\":null,\"dataClassification\":\"3\"}]}},\"null\"],\"default\":[]},{\"name\":\"shareholders\",\"type\":[{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Shareholders\",\"fields\":[{\"name\":\"shareholderType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ShareholderType\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IndividualorJoint\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"companyNumber\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"companyName\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"title\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"5\",\"protect\":\"true\"},{\"name\":\"forename\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"5\",\"protect\":\"true\"},{\"name\":\"surname\",\"type\":[\"null\",\"string\"],\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"address1\",\"type\":[\"null\",\"string\"],\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"address2\",\"type\":[\"null\",\"string\"],\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"address3\",\"type\":[\"null\",\"string\"],\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"address4\",\"type\":[\"null\",\"string\"],\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"address5\",\"type\":[\"null\",\"string\"],\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"address6\",\"type\":[\"null\",\"string\"],\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"postcode\",\"type\":[\"null\",\"string\"],\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"percentageOfOrdinary\",\"type\":[\"null\",\"float\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"shares\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Shares\",\"fields\":[{\"name\":\"typeOfShare\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"numberOfShares\",\"type\":[\"null\",\"float\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"shareCurrency\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"joint\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"totalValueOfShares\",\"type\":[\"null\",\"float\"],\"default\":null,\"dataClassification\":\"3\"}]}},\"default\":[]}]}},\"null\"],\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence companyNumber;
  @Deprecated public java.lang.CharSequence companyName;
  @Deprecated public java.lang.CharSequence immediateParentCompanyNumber;
  @Deprecated public java.lang.CharSequence immediateParentCompanyName;
  @Deprecated public java.lang.CharSequence ultimateParentCompanyNumber;
  @Deprecated public java.lang.CharSequence ultimateParentCompanyName;
  @Deprecated public java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.IssuedShared> issuedShares;
  @Deprecated public java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders> shareholders;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public CompanyGroupStructure() {}

  /**
   * All-args constructor.
   */
  public CompanyGroupStructure(java.lang.CharSequence companyNumber, java.lang.CharSequence companyName, java.lang.CharSequence immediateParentCompanyNumber, java.lang.CharSequence immediateParentCompanyName, java.lang.CharSequence ultimateParentCompanyNumber, java.lang.CharSequence ultimateParentCompanyName, java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.IssuedShared> issuedShares, java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders> shareholders) {
    this.companyNumber = companyNumber;
    this.companyName = companyName;
    this.immediateParentCompanyNumber = immediateParentCompanyNumber;
    this.immediateParentCompanyName = immediateParentCompanyName;
    this.ultimateParentCompanyNumber = ultimateParentCompanyNumber;
    this.ultimateParentCompanyName = ultimateParentCompanyName;
    this.issuedShares = issuedShares;
    this.shareholders = shareholders;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return companyNumber;
    case 1: return companyName;
    case 2: return immediateParentCompanyNumber;
    case 3: return immediateParentCompanyName;
    case 4: return ultimateParentCompanyNumber;
    case 5: return ultimateParentCompanyName;
    case 6: return issuedShares;
    case 7: return shareholders;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: companyNumber = (java.lang.CharSequence)value$; break;
    case 1: companyName = (java.lang.CharSequence)value$; break;
    case 2: immediateParentCompanyNumber = (java.lang.CharSequence)value$; break;
    case 3: immediateParentCompanyName = (java.lang.CharSequence)value$; break;
    case 4: ultimateParentCompanyNumber = (java.lang.CharSequence)value$; break;
    case 5: ultimateParentCompanyName = (java.lang.CharSequence)value$; break;
    case 6: issuedShares = (java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.IssuedShared>)value$; break;
    case 7: shareholders = (java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'companyNumber' field.
   */
  public java.lang.CharSequence getCompanyNumber() {
    return companyNumber;
  }

  /**
   * Sets the value of the 'companyNumber' field.
   * @param value the value to set.
   */
  public void setCompanyNumber(java.lang.CharSequence value) {
    this.companyNumber = value;
  }

  /**
   * Gets the value of the 'companyName' field.
   */
  public java.lang.CharSequence getCompanyName() {
    return companyName;
  }

  /**
   * Sets the value of the 'companyName' field.
   * @param value the value to set.
   */
  public void setCompanyName(java.lang.CharSequence value) {
    this.companyName = value;
  }

  /**
   * Gets the value of the 'immediateParentCompanyNumber' field.
   */
  public java.lang.CharSequence getImmediateParentCompanyNumber() {
    return immediateParentCompanyNumber;
  }

  /**
   * Sets the value of the 'immediateParentCompanyNumber' field.
   * @param value the value to set.
   */
  public void setImmediateParentCompanyNumber(java.lang.CharSequence value) {
    this.immediateParentCompanyNumber = value;
  }

  /**
   * Gets the value of the 'immediateParentCompanyName' field.
   */
  public java.lang.CharSequence getImmediateParentCompanyName() {
    return immediateParentCompanyName;
  }

  /**
   * Sets the value of the 'immediateParentCompanyName' field.
   * @param value the value to set.
   */
  public void setImmediateParentCompanyName(java.lang.CharSequence value) {
    this.immediateParentCompanyName = value;
  }

  /**
   * Gets the value of the 'ultimateParentCompanyNumber' field.
   */
  public java.lang.CharSequence getUltimateParentCompanyNumber() {
    return ultimateParentCompanyNumber;
  }

  /**
   * Sets the value of the 'ultimateParentCompanyNumber' field.
   * @param value the value to set.
   */
  public void setUltimateParentCompanyNumber(java.lang.CharSequence value) {
    this.ultimateParentCompanyNumber = value;
  }

  /**
   * Gets the value of the 'ultimateParentCompanyName' field.
   */
  public java.lang.CharSequence getUltimateParentCompanyName() {
    return ultimateParentCompanyName;
  }

  /**
   * Sets the value of the 'ultimateParentCompanyName' field.
   * @param value the value to set.
   */
  public void setUltimateParentCompanyName(java.lang.CharSequence value) {
    this.ultimateParentCompanyName = value;
  }

  /**
   * Gets the value of the 'issuedShares' field.
   */
  public java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.IssuedShared> getIssuedShares() {
    return issuedShares;
  }

  /**
   * Sets the value of the 'issuedShares' field.
   * @param value the value to set.
   */
  public void setIssuedShares(java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.IssuedShared> value) {
    this.issuedShares = value;
  }

  /**
   * Gets the value of the 'shareholders' field.
   */
  public java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders> getShareholders() {
    return shareholders;
  }

  /**
   * Sets the value of the 'shareholders' field.
   * @param value the value to set.
   */
  public void setShareholders(java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders> value) {
    this.shareholders = value;
  }

  /** Creates a new CompanyGroupStructure RecordBuilder */
  public static com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder newBuilder() {
    return new com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder();
  }
  
  /** Creates a new CompanyGroupStructure RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder newBuilder(com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder other) {
    return new com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder(other);
  }
  
  /** Creates a new CompanyGroupStructure RecordBuilder by copying an existing CompanyGroupStructure instance */
  public static com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder newBuilder(com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure other) {
    return new com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder(other);
  }
  
  /**
   * RecordBuilder for CompanyGroupStructure instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CompanyGroupStructure>
    implements org.apache.avro.data.RecordBuilder<CompanyGroupStructure> {

    private java.lang.CharSequence companyNumber;
    private java.lang.CharSequence companyName;
    private java.lang.CharSequence immediateParentCompanyNumber;
    private java.lang.CharSequence immediateParentCompanyName;
    private java.lang.CharSequence ultimateParentCompanyNumber;
    private java.lang.CharSequence ultimateParentCompanyName;
    private java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.IssuedShared> issuedShares;
    private java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders> shareholders;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.companyNumber)) {
        this.companyNumber = data().deepCopy(fields()[0].schema(), other.companyNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.companyName)) {
        this.companyName = data().deepCopy(fields()[1].schema(), other.companyName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.immediateParentCompanyNumber)) {
        this.immediateParentCompanyNumber = data().deepCopy(fields()[2].schema(), other.immediateParentCompanyNumber);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.immediateParentCompanyName)) {
        this.immediateParentCompanyName = data().deepCopy(fields()[3].schema(), other.immediateParentCompanyName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ultimateParentCompanyNumber)) {
        this.ultimateParentCompanyNumber = data().deepCopy(fields()[4].schema(), other.ultimateParentCompanyNumber);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.ultimateParentCompanyName)) {
        this.ultimateParentCompanyName = data().deepCopy(fields()[5].schema(), other.ultimateParentCompanyName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.issuedShares)) {
        this.issuedShares = data().deepCopy(fields()[6].schema(), other.issuedShares);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.shareholders)) {
        this.shareholders = data().deepCopy(fields()[7].schema(), other.shareholders);
        fieldSetFlags()[7] = true;
      }
    }
    
    /** Creates a Builder by copying an existing CompanyGroupStructure instance */
    private Builder(com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure other) {
            super(com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.SCHEMA$);
      if (isValidValue(fields()[0], other.companyNumber)) {
        this.companyNumber = data().deepCopy(fields()[0].schema(), other.companyNumber);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.companyName)) {
        this.companyName = data().deepCopy(fields()[1].schema(), other.companyName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.immediateParentCompanyNumber)) {
        this.immediateParentCompanyNumber = data().deepCopy(fields()[2].schema(), other.immediateParentCompanyNumber);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.immediateParentCompanyName)) {
        this.immediateParentCompanyName = data().deepCopy(fields()[3].schema(), other.immediateParentCompanyName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ultimateParentCompanyNumber)) {
        this.ultimateParentCompanyNumber = data().deepCopy(fields()[4].schema(), other.ultimateParentCompanyNumber);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.ultimateParentCompanyName)) {
        this.ultimateParentCompanyName = data().deepCopy(fields()[5].schema(), other.ultimateParentCompanyName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.issuedShares)) {
        this.issuedShares = data().deepCopy(fields()[6].schema(), other.issuedShares);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.shareholders)) {
        this.shareholders = data().deepCopy(fields()[7].schema(), other.shareholders);
        fieldSetFlags()[7] = true;
      }
    }

    /** Gets the value of the 'companyNumber' field */
    public java.lang.CharSequence getCompanyNumber() {
      return companyNumber;
    }
    
    /** Sets the value of the 'companyNumber' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder setCompanyNumber(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.companyNumber = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'companyNumber' field has been set */
    public boolean hasCompanyNumber() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'companyNumber' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder clearCompanyNumber() {
      companyNumber = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'companyName' field */
    public java.lang.CharSequence getCompanyName() {
      return companyName;
    }
    
    /** Sets the value of the 'companyName' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder setCompanyName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.companyName = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'companyName' field has been set */
    public boolean hasCompanyName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'companyName' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder clearCompanyName() {
      companyName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'immediateParentCompanyNumber' field */
    public java.lang.CharSequence getImmediateParentCompanyNumber() {
      return immediateParentCompanyNumber;
    }
    
    /** Sets the value of the 'immediateParentCompanyNumber' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder setImmediateParentCompanyNumber(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.immediateParentCompanyNumber = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'immediateParentCompanyNumber' field has been set */
    public boolean hasImmediateParentCompanyNumber() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'immediateParentCompanyNumber' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder clearImmediateParentCompanyNumber() {
      immediateParentCompanyNumber = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'immediateParentCompanyName' field */
    public java.lang.CharSequence getImmediateParentCompanyName() {
      return immediateParentCompanyName;
    }
    
    /** Sets the value of the 'immediateParentCompanyName' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder setImmediateParentCompanyName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.immediateParentCompanyName = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'immediateParentCompanyName' field has been set */
    public boolean hasImmediateParentCompanyName() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'immediateParentCompanyName' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder clearImmediateParentCompanyName() {
      immediateParentCompanyName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'ultimateParentCompanyNumber' field */
    public java.lang.CharSequence getUltimateParentCompanyNumber() {
      return ultimateParentCompanyNumber;
    }
    
    /** Sets the value of the 'ultimateParentCompanyNumber' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder setUltimateParentCompanyNumber(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.ultimateParentCompanyNumber = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'ultimateParentCompanyNumber' field has been set */
    public boolean hasUltimateParentCompanyNumber() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'ultimateParentCompanyNumber' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder clearUltimateParentCompanyNumber() {
      ultimateParentCompanyNumber = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'ultimateParentCompanyName' field */
    public java.lang.CharSequence getUltimateParentCompanyName() {
      return ultimateParentCompanyName;
    }
    
    /** Sets the value of the 'ultimateParentCompanyName' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder setUltimateParentCompanyName(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.ultimateParentCompanyName = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'ultimateParentCompanyName' field has been set */
    public boolean hasUltimateParentCompanyName() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'ultimateParentCompanyName' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder clearUltimateParentCompanyName() {
      ultimateParentCompanyName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'issuedShares' field */
    public java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.IssuedShared> getIssuedShares() {
      return issuedShares;
    }
    
    /** Sets the value of the 'issuedShares' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder setIssuedShares(java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.IssuedShared> value) {
      validate(fields()[6], value);
      this.issuedShares = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'issuedShares' field has been set */
    public boolean hasIssuedShares() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'issuedShares' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder clearIssuedShares() {
      issuedShares = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'shareholders' field */
    public java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders> getShareholders() {
      return shareholders;
    }
    
    /** Sets the value of the 'shareholders' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder setShareholders(java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders> value) {
      validate(fields()[7], value);
      this.shareholders = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'shareholders' field has been set */
    public boolean hasShareholders() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'shareholders' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.CompanyGroupStructure.Builder clearShareholders() {
      shareholders = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public CompanyGroupStructure build() {
      try {
        CompanyGroupStructure record = new CompanyGroupStructure();
        record.companyNumber = fieldSetFlags()[0] ? this.companyNumber : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.companyName = fieldSetFlags()[1] ? this.companyName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.immediateParentCompanyNumber = fieldSetFlags()[2] ? this.immediateParentCompanyNumber : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.immediateParentCompanyName = fieldSetFlags()[3] ? this.immediateParentCompanyName : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.ultimateParentCompanyNumber = fieldSetFlags()[4] ? this.ultimateParentCompanyNumber : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.ultimateParentCompanyName = fieldSetFlags()[5] ? this.ultimateParentCompanyName : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.issuedShares = fieldSetFlags()[6] ? this.issuedShares : (java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.IssuedShared>) defaultValue(fields()[6]);
        record.shareholders = fieldSetFlags()[7] ? this.shareholders : (java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders>) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
