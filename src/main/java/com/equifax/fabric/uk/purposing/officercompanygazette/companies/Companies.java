/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.purposing.officercompanygazette.companies;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Companies extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Companies\",\"namespace\":\"com.equifax.fabric.uk.purposing.officercompanygazette.companies\",\"fields\":[{\"name\":\"COMPANY_REGISTERED_NUMBER\",\"type\":[\"null\",\"string\"],\"dataClassification\":\"3\"},{\"name\":\"COMPANY_GAZETTES\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CompanyGazettes\",\"namespace\":\"com.equifax.fabric.uk.purposing.officercompanygazette.companies.companygazzette\",\"fields\":[{\"name\":\"movementType\",\"type\":[\"null\",\"string\"],\"dataClassification\":\"3\"},{\"name\":\"actionDate\",\"type\":[\"null\",\"string\"],\"dataClassification\":\"3\"}]}}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence COMPANY_REGISTERED_NUMBER;
  @Deprecated public java.util.List<com.equifax.fabric.uk.purposing.officercompanygazette.companies.companygazzette.CompanyGazettes> COMPANY_GAZETTES;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Companies() {}

  /**
   * All-args constructor.
   */
  public Companies(java.lang.CharSequence COMPANY_REGISTERED_NUMBER, java.util.List<com.equifax.fabric.uk.purposing.officercompanygazette.companies.companygazzette.CompanyGazettes> COMPANY_GAZETTES) {
    this.COMPANY_REGISTERED_NUMBER = COMPANY_REGISTERED_NUMBER;
    this.COMPANY_GAZETTES = COMPANY_GAZETTES;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return COMPANY_REGISTERED_NUMBER;
    case 1: return COMPANY_GAZETTES;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: COMPANY_REGISTERED_NUMBER = (java.lang.CharSequence)value$; break;
    case 1: COMPANY_GAZETTES = (java.util.List<com.equifax.fabric.uk.purposing.officercompanygazette.companies.companygazzette.CompanyGazettes>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'COMPANY_REGISTERED_NUMBER' field.
   */
  public java.lang.CharSequence getCOMPANYREGISTEREDNUMBER() {
    return COMPANY_REGISTERED_NUMBER;
  }

  /**
   * Sets the value of the 'COMPANY_REGISTERED_NUMBER' field.
   * @param value the value to set.
   */
  public void setCOMPANYREGISTEREDNUMBER(java.lang.CharSequence value) {
    this.COMPANY_REGISTERED_NUMBER = value;
  }

  /**
   * Gets the value of the 'COMPANY_GAZETTES' field.
   */
  public java.util.List<com.equifax.fabric.uk.purposing.officercompanygazette.companies.companygazzette.CompanyGazettes> getCOMPANYGAZETTES() {
    return COMPANY_GAZETTES;
  }

  /**
   * Sets the value of the 'COMPANY_GAZETTES' field.
   * @param value the value to set.
   */
  public void setCOMPANYGAZETTES(java.util.List<com.equifax.fabric.uk.purposing.officercompanygazette.companies.companygazzette.CompanyGazettes> value) {
    this.COMPANY_GAZETTES = value;
  }

  /** Creates a new Companies RecordBuilder */
  public static com.equifax.fabric.uk.purposing.officercompanygazette.companies.Companies.Builder newBuilder() {
    return new com.equifax.fabric.uk.purposing.officercompanygazette.companies.Companies.Builder();
  }
  
  /** Creates a new Companies RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.purposing.officercompanygazette.companies.Companies.Builder newBuilder(com.equifax.fabric.uk.purposing.officercompanygazette.companies.Companies.Builder other) {
    return new com.equifax.fabric.uk.purposing.officercompanygazette.companies.Companies.Builder(other);
  }
  
  /** Creates a new Companies RecordBuilder by copying an existing Companies instance */
  public static com.equifax.fabric.uk.purposing.officercompanygazette.companies.Companies.Builder newBuilder(com.equifax.fabric.uk.purposing.officercompanygazette.companies.Companies other) {
    return new com.equifax.fabric.uk.purposing.officercompanygazette.companies.Companies.Builder(other);
  }
  
  /**
   * RecordBuilder for Companies instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Companies>
    implements org.apache.avro.data.RecordBuilder<Companies> {

    private java.lang.CharSequence COMPANY_REGISTERED_NUMBER;
    private java.util.List<com.equifax.fabric.uk.purposing.officercompanygazette.companies.companygazzette.CompanyGazettes> COMPANY_GAZETTES;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.purposing.officercompanygazette.companies.Companies.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.purposing.officercompanygazette.companies.Companies.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.COMPANY_REGISTERED_NUMBER)) {
        this.COMPANY_REGISTERED_NUMBER = data().deepCopy(fields()[0].schema(), other.COMPANY_REGISTERED_NUMBER);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.COMPANY_GAZETTES)) {
        this.COMPANY_GAZETTES = data().deepCopy(fields()[1].schema(), other.COMPANY_GAZETTES);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Companies instance */
    private Builder(com.equifax.fabric.uk.purposing.officercompanygazette.companies.Companies other) {
            super(com.equifax.fabric.uk.purposing.officercompanygazette.companies.Companies.SCHEMA$);
      if (isValidValue(fields()[0], other.COMPANY_REGISTERED_NUMBER)) {
        this.COMPANY_REGISTERED_NUMBER = data().deepCopy(fields()[0].schema(), other.COMPANY_REGISTERED_NUMBER);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.COMPANY_GAZETTES)) {
        this.COMPANY_GAZETTES = data().deepCopy(fields()[1].schema(), other.COMPANY_GAZETTES);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'COMPANY_REGISTERED_NUMBER' field */
    public java.lang.CharSequence getCOMPANYREGISTEREDNUMBER() {
      return COMPANY_REGISTERED_NUMBER;
    }
    
    /** Sets the value of the 'COMPANY_REGISTERED_NUMBER' field */
    public com.equifax.fabric.uk.purposing.officercompanygazette.companies.Companies.Builder setCOMPANYREGISTEREDNUMBER(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.COMPANY_REGISTERED_NUMBER = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'COMPANY_REGISTERED_NUMBER' field has been set */
    public boolean hasCOMPANYREGISTEREDNUMBER() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'COMPANY_REGISTERED_NUMBER' field */
    public com.equifax.fabric.uk.purposing.officercompanygazette.companies.Companies.Builder clearCOMPANYREGISTEREDNUMBER() {
      COMPANY_REGISTERED_NUMBER = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'COMPANY_GAZETTES' field */
    public java.util.List<com.equifax.fabric.uk.purposing.officercompanygazette.companies.companygazzette.CompanyGazettes> getCOMPANYGAZETTES() {
      return COMPANY_GAZETTES;
    }
    
    /** Sets the value of the 'COMPANY_GAZETTES' field */
    public com.equifax.fabric.uk.purposing.officercompanygazette.companies.Companies.Builder setCOMPANYGAZETTES(java.util.List<com.equifax.fabric.uk.purposing.officercompanygazette.companies.companygazzette.CompanyGazettes> value) {
      validate(fields()[1], value);
      this.COMPANY_GAZETTES = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'COMPANY_GAZETTES' field has been set */
    public boolean hasCOMPANYGAZETTES() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'COMPANY_GAZETTES' field */
    public com.equifax.fabric.uk.purposing.officercompanygazette.companies.Companies.Builder clearCOMPANYGAZETTES() {
      COMPANY_GAZETTES = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public Companies build() {
      try {
        Companies record = new Companies();
        record.COMPANY_REGISTERED_NUMBER = fieldSetFlags()[0] ? this.COMPANY_REGISTERED_NUMBER : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.COMPANY_GAZETTES = fieldSetFlags()[1] ? this.COMPANY_GAZETTES : (java.util.List<com.equifax.fabric.uk.purposing.officercompanygazette.companies.companygazzette.CompanyGazettes>) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
