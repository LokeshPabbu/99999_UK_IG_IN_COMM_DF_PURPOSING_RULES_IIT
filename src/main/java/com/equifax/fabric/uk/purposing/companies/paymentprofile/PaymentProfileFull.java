/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.purposing.companies.paymentprofile;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PaymentProfileFull extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PaymentProfileFull\",\"namespace\":\"com.equifax.fabric.uk.purposing.companies.paymentprofile\",\"fields\":[{\"name\":\"DATE\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"FLAG\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"CURRENT_BALANCE\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"CURRENT_BALANCE_CREDIT_IND\",\"type\":[\"null\",\"string\"],\"doc\":\"Current Balance Credit Indicator\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ORIGINAL_DEFAULT_BALANCE\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"CREDIT_LIMIT\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PAYMENT_AMOUNT\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PREVIOUS_STATEMENT_BALANCE\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PAYMENT_CREDIT_IND\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PROMOTION_ACTIVITY_FLAG\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"VALUE_OF_CASH_ADVANCES\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"NUMBER_OF_CASH_ADVANCES\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"AVERAGE_BALANCE\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"AVERAGE_BALANCE_CREDIT_IND\",\"type\":[\"null\",\"string\"],\"doc\":\"Average Balance Credit Indicator\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"MINIMUM_BALANCE\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"MINIMUM_BALANCE_CREDIT_IND\",\"type\":[\"null\",\"string\"],\"doc\":\"Minimum Balance Credit Indicator\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"MAXIMUM_BALANCE\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"MAXIMUM_BALANCE_CREDIT_IND\",\"type\":[\"null\",\"string\"],\"doc\":\"Maximum Balance Credit Indicator\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"CREDIT_TURNOVER\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"CREDIT_TURNOVER_NET_GROSS\",\"type\":[\"null\",\"string\"],\"doc\":\"Credit Turnover Net/Gross\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DEBIT_TURNOVER\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DEBIT_TURNOVER_NET_GROSS\",\"type\":[\"null\",\"string\"],\"doc\":\"Debit Turnover Net/Gross\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"REJECTED_PAYMENTS\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"MAX_DURATION_OF_EXCESS\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"SPECIAL_INSTRUCTION_IND\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"ACCOUNT_TYPE\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"CLOSE_DATE\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DEFAULT_SATISFACTION_DATE\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"FLAG_SETTINGS\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"TRF_TO_CONSOLIDATED_DEBT_ACNT\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"REPAYMENT_PERIOD\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"MONTHLY_PAYMENT\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PAYMENT_FREQUENCY\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"FILE_CREATION_DATE\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"USABLE_STATUS_ID\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"REJECTION_FLAG\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PREVIOUS_STATEMENT_BALANCE_IND\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"RUN_DATE\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence DATE;
  @Deprecated public java.lang.CharSequence FLAG;
  @Deprecated public java.lang.CharSequence CURRENT_BALANCE;
  /** Current Balance Credit Indicator */
  @Deprecated public java.lang.CharSequence CURRENT_BALANCE_CREDIT_IND;
  @Deprecated public java.lang.CharSequence ORIGINAL_DEFAULT_BALANCE;
  @Deprecated public java.lang.CharSequence CREDIT_LIMIT;
  @Deprecated public java.lang.CharSequence PAYMENT_AMOUNT;
  @Deprecated public java.lang.CharSequence PREVIOUS_STATEMENT_BALANCE;
  @Deprecated public java.lang.CharSequence PAYMENT_CREDIT_IND;
  @Deprecated public java.lang.CharSequence PROMOTION_ACTIVITY_FLAG;
  @Deprecated public java.lang.CharSequence VALUE_OF_CASH_ADVANCES;
  @Deprecated public java.lang.CharSequence NUMBER_OF_CASH_ADVANCES;
  @Deprecated public java.lang.CharSequence AVERAGE_BALANCE;
  /** Average Balance Credit Indicator */
  @Deprecated public java.lang.CharSequence AVERAGE_BALANCE_CREDIT_IND;
  @Deprecated public java.lang.CharSequence MINIMUM_BALANCE;
  /** Minimum Balance Credit Indicator */
  @Deprecated public java.lang.CharSequence MINIMUM_BALANCE_CREDIT_IND;
  @Deprecated public java.lang.CharSequence MAXIMUM_BALANCE;
  /** Maximum Balance Credit Indicator */
  @Deprecated public java.lang.CharSequence MAXIMUM_BALANCE_CREDIT_IND;
  @Deprecated public java.lang.CharSequence CREDIT_TURNOVER;
  /** Credit Turnover Net/Gross */
  @Deprecated public java.lang.CharSequence CREDIT_TURNOVER_NET_GROSS;
  @Deprecated public java.lang.CharSequence DEBIT_TURNOVER;
  /** Debit Turnover Net/Gross */
  @Deprecated public java.lang.CharSequence DEBIT_TURNOVER_NET_GROSS;
  @Deprecated public java.lang.CharSequence REJECTED_PAYMENTS;
  @Deprecated public java.lang.CharSequence MAX_DURATION_OF_EXCESS;
  @Deprecated public java.lang.CharSequence SPECIAL_INSTRUCTION_IND;
  @Deprecated public java.lang.CharSequence ACCOUNT_TYPE;
  @Deprecated public java.lang.CharSequence CLOSE_DATE;
  @Deprecated public java.lang.CharSequence DEFAULT_SATISFACTION_DATE;
  @Deprecated public java.lang.CharSequence FLAG_SETTINGS;
  @Deprecated public java.lang.CharSequence TRF_TO_CONSOLIDATED_DEBT_ACNT;
  @Deprecated public java.lang.CharSequence REPAYMENT_PERIOD;
  @Deprecated public java.lang.CharSequence MONTHLY_PAYMENT;
  @Deprecated public java.lang.CharSequence PAYMENT_FREQUENCY;
  @Deprecated public java.lang.CharSequence FILE_CREATION_DATE;
  @Deprecated public java.lang.CharSequence USABLE_STATUS_ID;
  @Deprecated public java.lang.CharSequence REJECTION_FLAG;
  @Deprecated public java.lang.CharSequence PREVIOUS_STATEMENT_BALANCE_IND;
  @Deprecated public java.lang.CharSequence RUN_DATE;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public PaymentProfileFull() {}

  /**
   * All-args constructor.
   */
  public PaymentProfileFull(java.lang.CharSequence DATE, java.lang.CharSequence FLAG, java.lang.CharSequence CURRENT_BALANCE, java.lang.CharSequence CURRENT_BALANCE_CREDIT_IND, java.lang.CharSequence ORIGINAL_DEFAULT_BALANCE, java.lang.CharSequence CREDIT_LIMIT, java.lang.CharSequence PAYMENT_AMOUNT, java.lang.CharSequence PREVIOUS_STATEMENT_BALANCE, java.lang.CharSequence PAYMENT_CREDIT_IND, java.lang.CharSequence PROMOTION_ACTIVITY_FLAG, java.lang.CharSequence VALUE_OF_CASH_ADVANCES, java.lang.CharSequence NUMBER_OF_CASH_ADVANCES, java.lang.CharSequence AVERAGE_BALANCE, java.lang.CharSequence AVERAGE_BALANCE_CREDIT_IND, java.lang.CharSequence MINIMUM_BALANCE, java.lang.CharSequence MINIMUM_BALANCE_CREDIT_IND, java.lang.CharSequence MAXIMUM_BALANCE, java.lang.CharSequence MAXIMUM_BALANCE_CREDIT_IND, java.lang.CharSequence CREDIT_TURNOVER, java.lang.CharSequence CREDIT_TURNOVER_NET_GROSS, java.lang.CharSequence DEBIT_TURNOVER, java.lang.CharSequence DEBIT_TURNOVER_NET_GROSS, java.lang.CharSequence REJECTED_PAYMENTS, java.lang.CharSequence MAX_DURATION_OF_EXCESS, java.lang.CharSequence SPECIAL_INSTRUCTION_IND, java.lang.CharSequence ACCOUNT_TYPE, java.lang.CharSequence CLOSE_DATE, java.lang.CharSequence DEFAULT_SATISFACTION_DATE, java.lang.CharSequence FLAG_SETTINGS, java.lang.CharSequence TRF_TO_CONSOLIDATED_DEBT_ACNT, java.lang.CharSequence REPAYMENT_PERIOD, java.lang.CharSequence MONTHLY_PAYMENT, java.lang.CharSequence PAYMENT_FREQUENCY, java.lang.CharSequence FILE_CREATION_DATE, java.lang.CharSequence USABLE_STATUS_ID, java.lang.CharSequence REJECTION_FLAG, java.lang.CharSequence PREVIOUS_STATEMENT_BALANCE_IND, java.lang.CharSequence RUN_DATE) {
    this.DATE = DATE;
    this.FLAG = FLAG;
    this.CURRENT_BALANCE = CURRENT_BALANCE;
    this.CURRENT_BALANCE_CREDIT_IND = CURRENT_BALANCE_CREDIT_IND;
    this.ORIGINAL_DEFAULT_BALANCE = ORIGINAL_DEFAULT_BALANCE;
    this.CREDIT_LIMIT = CREDIT_LIMIT;
    this.PAYMENT_AMOUNT = PAYMENT_AMOUNT;
    this.PREVIOUS_STATEMENT_BALANCE = PREVIOUS_STATEMENT_BALANCE;
    this.PAYMENT_CREDIT_IND = PAYMENT_CREDIT_IND;
    this.PROMOTION_ACTIVITY_FLAG = PROMOTION_ACTIVITY_FLAG;
    this.VALUE_OF_CASH_ADVANCES = VALUE_OF_CASH_ADVANCES;
    this.NUMBER_OF_CASH_ADVANCES = NUMBER_OF_CASH_ADVANCES;
    this.AVERAGE_BALANCE = AVERAGE_BALANCE;
    this.AVERAGE_BALANCE_CREDIT_IND = AVERAGE_BALANCE_CREDIT_IND;
    this.MINIMUM_BALANCE = MINIMUM_BALANCE;
    this.MINIMUM_BALANCE_CREDIT_IND = MINIMUM_BALANCE_CREDIT_IND;
    this.MAXIMUM_BALANCE = MAXIMUM_BALANCE;
    this.MAXIMUM_BALANCE_CREDIT_IND = MAXIMUM_BALANCE_CREDIT_IND;
    this.CREDIT_TURNOVER = CREDIT_TURNOVER;
    this.CREDIT_TURNOVER_NET_GROSS = CREDIT_TURNOVER_NET_GROSS;
    this.DEBIT_TURNOVER = DEBIT_TURNOVER;
    this.DEBIT_TURNOVER_NET_GROSS = DEBIT_TURNOVER_NET_GROSS;
    this.REJECTED_PAYMENTS = REJECTED_PAYMENTS;
    this.MAX_DURATION_OF_EXCESS = MAX_DURATION_OF_EXCESS;
    this.SPECIAL_INSTRUCTION_IND = SPECIAL_INSTRUCTION_IND;
    this.ACCOUNT_TYPE = ACCOUNT_TYPE;
    this.CLOSE_DATE = CLOSE_DATE;
    this.DEFAULT_SATISFACTION_DATE = DEFAULT_SATISFACTION_DATE;
    this.FLAG_SETTINGS = FLAG_SETTINGS;
    this.TRF_TO_CONSOLIDATED_DEBT_ACNT = TRF_TO_CONSOLIDATED_DEBT_ACNT;
    this.REPAYMENT_PERIOD = REPAYMENT_PERIOD;
    this.MONTHLY_PAYMENT = MONTHLY_PAYMENT;
    this.PAYMENT_FREQUENCY = PAYMENT_FREQUENCY;
    this.FILE_CREATION_DATE = FILE_CREATION_DATE;
    this.USABLE_STATUS_ID = USABLE_STATUS_ID;
    this.REJECTION_FLAG = REJECTION_FLAG;
    this.PREVIOUS_STATEMENT_BALANCE_IND = PREVIOUS_STATEMENT_BALANCE_IND;
    this.RUN_DATE = RUN_DATE;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return DATE;
    case 1: return FLAG;
    case 2: return CURRENT_BALANCE;
    case 3: return CURRENT_BALANCE_CREDIT_IND;
    case 4: return ORIGINAL_DEFAULT_BALANCE;
    case 5: return CREDIT_LIMIT;
    case 6: return PAYMENT_AMOUNT;
    case 7: return PREVIOUS_STATEMENT_BALANCE;
    case 8: return PAYMENT_CREDIT_IND;
    case 9: return PROMOTION_ACTIVITY_FLAG;
    case 10: return VALUE_OF_CASH_ADVANCES;
    case 11: return NUMBER_OF_CASH_ADVANCES;
    case 12: return AVERAGE_BALANCE;
    case 13: return AVERAGE_BALANCE_CREDIT_IND;
    case 14: return MINIMUM_BALANCE;
    case 15: return MINIMUM_BALANCE_CREDIT_IND;
    case 16: return MAXIMUM_BALANCE;
    case 17: return MAXIMUM_BALANCE_CREDIT_IND;
    case 18: return CREDIT_TURNOVER;
    case 19: return CREDIT_TURNOVER_NET_GROSS;
    case 20: return DEBIT_TURNOVER;
    case 21: return DEBIT_TURNOVER_NET_GROSS;
    case 22: return REJECTED_PAYMENTS;
    case 23: return MAX_DURATION_OF_EXCESS;
    case 24: return SPECIAL_INSTRUCTION_IND;
    case 25: return ACCOUNT_TYPE;
    case 26: return CLOSE_DATE;
    case 27: return DEFAULT_SATISFACTION_DATE;
    case 28: return FLAG_SETTINGS;
    case 29: return TRF_TO_CONSOLIDATED_DEBT_ACNT;
    case 30: return REPAYMENT_PERIOD;
    case 31: return MONTHLY_PAYMENT;
    case 32: return PAYMENT_FREQUENCY;
    case 33: return FILE_CREATION_DATE;
    case 34: return USABLE_STATUS_ID;
    case 35: return REJECTION_FLAG;
    case 36: return PREVIOUS_STATEMENT_BALANCE_IND;
    case 37: return RUN_DATE;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: DATE = (java.lang.CharSequence)value$; break;
    case 1: FLAG = (java.lang.CharSequence)value$; break;
    case 2: CURRENT_BALANCE = (java.lang.CharSequence)value$; break;
    case 3: CURRENT_BALANCE_CREDIT_IND = (java.lang.CharSequence)value$; break;
    case 4: ORIGINAL_DEFAULT_BALANCE = (java.lang.CharSequence)value$; break;
    case 5: CREDIT_LIMIT = (java.lang.CharSequence)value$; break;
    case 6: PAYMENT_AMOUNT = (java.lang.CharSequence)value$; break;
    case 7: PREVIOUS_STATEMENT_BALANCE = (java.lang.CharSequence)value$; break;
    case 8: PAYMENT_CREDIT_IND = (java.lang.CharSequence)value$; break;
    case 9: PROMOTION_ACTIVITY_FLAG = (java.lang.CharSequence)value$; break;
    case 10: VALUE_OF_CASH_ADVANCES = (java.lang.CharSequence)value$; break;
    case 11: NUMBER_OF_CASH_ADVANCES = (java.lang.CharSequence)value$; break;
    case 12: AVERAGE_BALANCE = (java.lang.CharSequence)value$; break;
    case 13: AVERAGE_BALANCE_CREDIT_IND = (java.lang.CharSequence)value$; break;
    case 14: MINIMUM_BALANCE = (java.lang.CharSequence)value$; break;
    case 15: MINIMUM_BALANCE_CREDIT_IND = (java.lang.CharSequence)value$; break;
    case 16: MAXIMUM_BALANCE = (java.lang.CharSequence)value$; break;
    case 17: MAXIMUM_BALANCE_CREDIT_IND = (java.lang.CharSequence)value$; break;
    case 18: CREDIT_TURNOVER = (java.lang.CharSequence)value$; break;
    case 19: CREDIT_TURNOVER_NET_GROSS = (java.lang.CharSequence)value$; break;
    case 20: DEBIT_TURNOVER = (java.lang.CharSequence)value$; break;
    case 21: DEBIT_TURNOVER_NET_GROSS = (java.lang.CharSequence)value$; break;
    case 22: REJECTED_PAYMENTS = (java.lang.CharSequence)value$; break;
    case 23: MAX_DURATION_OF_EXCESS = (java.lang.CharSequence)value$; break;
    case 24: SPECIAL_INSTRUCTION_IND = (java.lang.CharSequence)value$; break;
    case 25: ACCOUNT_TYPE = (java.lang.CharSequence)value$; break;
    case 26: CLOSE_DATE = (java.lang.CharSequence)value$; break;
    case 27: DEFAULT_SATISFACTION_DATE = (java.lang.CharSequence)value$; break;
    case 28: FLAG_SETTINGS = (java.lang.CharSequence)value$; break;
    case 29: TRF_TO_CONSOLIDATED_DEBT_ACNT = (java.lang.CharSequence)value$; break;
    case 30: REPAYMENT_PERIOD = (java.lang.CharSequence)value$; break;
    case 31: MONTHLY_PAYMENT = (java.lang.CharSequence)value$; break;
    case 32: PAYMENT_FREQUENCY = (java.lang.CharSequence)value$; break;
    case 33: FILE_CREATION_DATE = (java.lang.CharSequence)value$; break;
    case 34: USABLE_STATUS_ID = (java.lang.CharSequence)value$; break;
    case 35: REJECTION_FLAG = (java.lang.CharSequence)value$; break;
    case 36: PREVIOUS_STATEMENT_BALANCE_IND = (java.lang.CharSequence)value$; break;
    case 37: RUN_DATE = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'DATE' field.
   */
  public java.lang.CharSequence getDATE() {
    return DATE;
  }

  /**
   * Sets the value of the 'DATE' field.
   * @param value the value to set.
   */
  public void setDATE(java.lang.CharSequence value) {
    this.DATE = value;
  }

  /**
   * Gets the value of the 'FLAG' field.
   */
  public java.lang.CharSequence getFLAG() {
    return FLAG;
  }

  /**
   * Sets the value of the 'FLAG' field.
   * @param value the value to set.
   */
  public void setFLAG(java.lang.CharSequence value) {
    this.FLAG = value;
  }

  /**
   * Gets the value of the 'CURRENT_BALANCE' field.
   */
  public java.lang.CharSequence getCURRENTBALANCE() {
    return CURRENT_BALANCE;
  }

  /**
   * Sets the value of the 'CURRENT_BALANCE' field.
   * @param value the value to set.
   */
  public void setCURRENTBALANCE(java.lang.CharSequence value) {
    this.CURRENT_BALANCE = value;
  }

  /**
   * Gets the value of the 'CURRENT_BALANCE_CREDIT_IND' field.
   * Current Balance Credit Indicator   */
  public java.lang.CharSequence getCURRENTBALANCECREDITIND() {
    return CURRENT_BALANCE_CREDIT_IND;
  }

  /**
   * Sets the value of the 'CURRENT_BALANCE_CREDIT_IND' field.
   * Current Balance Credit Indicator   * @param value the value to set.
   */
  public void setCURRENTBALANCECREDITIND(java.lang.CharSequence value) {
    this.CURRENT_BALANCE_CREDIT_IND = value;
  }

  /**
   * Gets the value of the 'ORIGINAL_DEFAULT_BALANCE' field.
   */
  public java.lang.CharSequence getORIGINALDEFAULTBALANCE() {
    return ORIGINAL_DEFAULT_BALANCE;
  }

  /**
   * Sets the value of the 'ORIGINAL_DEFAULT_BALANCE' field.
   * @param value the value to set.
   */
  public void setORIGINALDEFAULTBALANCE(java.lang.CharSequence value) {
    this.ORIGINAL_DEFAULT_BALANCE = value;
  }

  /**
   * Gets the value of the 'CREDIT_LIMIT' field.
   */
  public java.lang.CharSequence getCREDITLIMIT() {
    return CREDIT_LIMIT;
  }

  /**
   * Sets the value of the 'CREDIT_LIMIT' field.
   * @param value the value to set.
   */
  public void setCREDITLIMIT(java.lang.CharSequence value) {
    this.CREDIT_LIMIT = value;
  }

  /**
   * Gets the value of the 'PAYMENT_AMOUNT' field.
   */
  public java.lang.CharSequence getPAYMENTAMOUNT() {
    return PAYMENT_AMOUNT;
  }

  /**
   * Sets the value of the 'PAYMENT_AMOUNT' field.
   * @param value the value to set.
   */
  public void setPAYMENTAMOUNT(java.lang.CharSequence value) {
    this.PAYMENT_AMOUNT = value;
  }

  /**
   * Gets the value of the 'PREVIOUS_STATEMENT_BALANCE' field.
   */
  public java.lang.CharSequence getPREVIOUSSTATEMENTBALANCE() {
    return PREVIOUS_STATEMENT_BALANCE;
  }

  /**
   * Sets the value of the 'PREVIOUS_STATEMENT_BALANCE' field.
   * @param value the value to set.
   */
  public void setPREVIOUSSTATEMENTBALANCE(java.lang.CharSequence value) {
    this.PREVIOUS_STATEMENT_BALANCE = value;
  }

  /**
   * Gets the value of the 'PAYMENT_CREDIT_IND' field.
   */
  public java.lang.CharSequence getPAYMENTCREDITIND() {
    return PAYMENT_CREDIT_IND;
  }

  /**
   * Sets the value of the 'PAYMENT_CREDIT_IND' field.
   * @param value the value to set.
   */
  public void setPAYMENTCREDITIND(java.lang.CharSequence value) {
    this.PAYMENT_CREDIT_IND = value;
  }

  /**
   * Gets the value of the 'PROMOTION_ACTIVITY_FLAG' field.
   */
  public java.lang.CharSequence getPROMOTIONACTIVITYFLAG() {
    return PROMOTION_ACTIVITY_FLAG;
  }

  /**
   * Sets the value of the 'PROMOTION_ACTIVITY_FLAG' field.
   * @param value the value to set.
   */
  public void setPROMOTIONACTIVITYFLAG(java.lang.CharSequence value) {
    this.PROMOTION_ACTIVITY_FLAG = value;
  }

  /**
   * Gets the value of the 'VALUE_OF_CASH_ADVANCES' field.
   */
  public java.lang.CharSequence getVALUEOFCASHADVANCES() {
    return VALUE_OF_CASH_ADVANCES;
  }

  /**
   * Sets the value of the 'VALUE_OF_CASH_ADVANCES' field.
   * @param value the value to set.
   */
  public void setVALUEOFCASHADVANCES(java.lang.CharSequence value) {
    this.VALUE_OF_CASH_ADVANCES = value;
  }

  /**
   * Gets the value of the 'NUMBER_OF_CASH_ADVANCES' field.
   */
  public java.lang.CharSequence getNUMBEROFCASHADVANCES() {
    return NUMBER_OF_CASH_ADVANCES;
  }

  /**
   * Sets the value of the 'NUMBER_OF_CASH_ADVANCES' field.
   * @param value the value to set.
   */
  public void setNUMBEROFCASHADVANCES(java.lang.CharSequence value) {
    this.NUMBER_OF_CASH_ADVANCES = value;
  }

  /**
   * Gets the value of the 'AVERAGE_BALANCE' field.
   */
  public java.lang.CharSequence getAVERAGEBALANCE() {
    return AVERAGE_BALANCE;
  }

  /**
   * Sets the value of the 'AVERAGE_BALANCE' field.
   * @param value the value to set.
   */
  public void setAVERAGEBALANCE(java.lang.CharSequence value) {
    this.AVERAGE_BALANCE = value;
  }

  /**
   * Gets the value of the 'AVERAGE_BALANCE_CREDIT_IND' field.
   * Average Balance Credit Indicator   */
  public java.lang.CharSequence getAVERAGEBALANCECREDITIND() {
    return AVERAGE_BALANCE_CREDIT_IND;
  }

  /**
   * Sets the value of the 'AVERAGE_BALANCE_CREDIT_IND' field.
   * Average Balance Credit Indicator   * @param value the value to set.
   */
  public void setAVERAGEBALANCECREDITIND(java.lang.CharSequence value) {
    this.AVERAGE_BALANCE_CREDIT_IND = value;
  }

  /**
   * Gets the value of the 'MINIMUM_BALANCE' field.
   */
  public java.lang.CharSequence getMINIMUMBALANCE() {
    return MINIMUM_BALANCE;
  }

  /**
   * Sets the value of the 'MINIMUM_BALANCE' field.
   * @param value the value to set.
   */
  public void setMINIMUMBALANCE(java.lang.CharSequence value) {
    this.MINIMUM_BALANCE = value;
  }

  /**
   * Gets the value of the 'MINIMUM_BALANCE_CREDIT_IND' field.
   * Minimum Balance Credit Indicator   */
  public java.lang.CharSequence getMINIMUMBALANCECREDITIND() {
    return MINIMUM_BALANCE_CREDIT_IND;
  }

  /**
   * Sets the value of the 'MINIMUM_BALANCE_CREDIT_IND' field.
   * Minimum Balance Credit Indicator   * @param value the value to set.
   */
  public void setMINIMUMBALANCECREDITIND(java.lang.CharSequence value) {
    this.MINIMUM_BALANCE_CREDIT_IND = value;
  }

  /**
   * Gets the value of the 'MAXIMUM_BALANCE' field.
   */
  public java.lang.CharSequence getMAXIMUMBALANCE() {
    return MAXIMUM_BALANCE;
  }

  /**
   * Sets the value of the 'MAXIMUM_BALANCE' field.
   * @param value the value to set.
   */
  public void setMAXIMUMBALANCE(java.lang.CharSequence value) {
    this.MAXIMUM_BALANCE = value;
  }

  /**
   * Gets the value of the 'MAXIMUM_BALANCE_CREDIT_IND' field.
   * Maximum Balance Credit Indicator   */
  public java.lang.CharSequence getMAXIMUMBALANCECREDITIND() {
    return MAXIMUM_BALANCE_CREDIT_IND;
  }

  /**
   * Sets the value of the 'MAXIMUM_BALANCE_CREDIT_IND' field.
   * Maximum Balance Credit Indicator   * @param value the value to set.
   */
  public void setMAXIMUMBALANCECREDITIND(java.lang.CharSequence value) {
    this.MAXIMUM_BALANCE_CREDIT_IND = value;
  }

  /**
   * Gets the value of the 'CREDIT_TURNOVER' field.
   */
  public java.lang.CharSequence getCREDITTURNOVER() {
    return CREDIT_TURNOVER;
  }

  /**
   * Sets the value of the 'CREDIT_TURNOVER' field.
   * @param value the value to set.
   */
  public void setCREDITTURNOVER(java.lang.CharSequence value) {
    this.CREDIT_TURNOVER = value;
  }

  /**
   * Gets the value of the 'CREDIT_TURNOVER_NET_GROSS' field.
   * Credit Turnover Net/Gross   */
  public java.lang.CharSequence getCREDITTURNOVERNETGROSS() {
    return CREDIT_TURNOVER_NET_GROSS;
  }

  /**
   * Sets the value of the 'CREDIT_TURNOVER_NET_GROSS' field.
   * Credit Turnover Net/Gross   * @param value the value to set.
   */
  public void setCREDITTURNOVERNETGROSS(java.lang.CharSequence value) {
    this.CREDIT_TURNOVER_NET_GROSS = value;
  }

  /**
   * Gets the value of the 'DEBIT_TURNOVER' field.
   */
  public java.lang.CharSequence getDEBITTURNOVER() {
    return DEBIT_TURNOVER;
  }

  /**
   * Sets the value of the 'DEBIT_TURNOVER' field.
   * @param value the value to set.
   */
  public void setDEBITTURNOVER(java.lang.CharSequence value) {
    this.DEBIT_TURNOVER = value;
  }

  /**
   * Gets the value of the 'DEBIT_TURNOVER_NET_GROSS' field.
   * Debit Turnover Net/Gross   */
  public java.lang.CharSequence getDEBITTURNOVERNETGROSS() {
    return DEBIT_TURNOVER_NET_GROSS;
  }

  /**
   * Sets the value of the 'DEBIT_TURNOVER_NET_GROSS' field.
   * Debit Turnover Net/Gross   * @param value the value to set.
   */
  public void setDEBITTURNOVERNETGROSS(java.lang.CharSequence value) {
    this.DEBIT_TURNOVER_NET_GROSS = value;
  }

  /**
   * Gets the value of the 'REJECTED_PAYMENTS' field.
   */
  public java.lang.CharSequence getREJECTEDPAYMENTS() {
    return REJECTED_PAYMENTS;
  }

  /**
   * Sets the value of the 'REJECTED_PAYMENTS' field.
   * @param value the value to set.
   */
  public void setREJECTEDPAYMENTS(java.lang.CharSequence value) {
    this.REJECTED_PAYMENTS = value;
  }

  /**
   * Gets the value of the 'MAX_DURATION_OF_EXCESS' field.
   */
  public java.lang.CharSequence getMAXDURATIONOFEXCESS() {
    return MAX_DURATION_OF_EXCESS;
  }

  /**
   * Sets the value of the 'MAX_DURATION_OF_EXCESS' field.
   * @param value the value to set.
   */
  public void setMAXDURATIONOFEXCESS(java.lang.CharSequence value) {
    this.MAX_DURATION_OF_EXCESS = value;
  }

  /**
   * Gets the value of the 'SPECIAL_INSTRUCTION_IND' field.
   */
  public java.lang.CharSequence getSPECIALINSTRUCTIONIND() {
    return SPECIAL_INSTRUCTION_IND;
  }

  /**
   * Sets the value of the 'SPECIAL_INSTRUCTION_IND' field.
   * @param value the value to set.
   */
  public void setSPECIALINSTRUCTIONIND(java.lang.CharSequence value) {
    this.SPECIAL_INSTRUCTION_IND = value;
  }

  /**
   * Gets the value of the 'ACCOUNT_TYPE' field.
   */
  public java.lang.CharSequence getACCOUNTTYPE() {
    return ACCOUNT_TYPE;
  }

  /**
   * Sets the value of the 'ACCOUNT_TYPE' field.
   * @param value the value to set.
   */
  public void setACCOUNTTYPE(java.lang.CharSequence value) {
    this.ACCOUNT_TYPE = value;
  }

  /**
   * Gets the value of the 'CLOSE_DATE' field.
   */
  public java.lang.CharSequence getCLOSEDATE() {
    return CLOSE_DATE;
  }

  /**
   * Sets the value of the 'CLOSE_DATE' field.
   * @param value the value to set.
   */
  public void setCLOSEDATE(java.lang.CharSequence value) {
    this.CLOSE_DATE = value;
  }

  /**
   * Gets the value of the 'DEFAULT_SATISFACTION_DATE' field.
   */
  public java.lang.CharSequence getDEFAULTSATISFACTIONDATE() {
    return DEFAULT_SATISFACTION_DATE;
  }

  /**
   * Sets the value of the 'DEFAULT_SATISFACTION_DATE' field.
   * @param value the value to set.
   */
  public void setDEFAULTSATISFACTIONDATE(java.lang.CharSequence value) {
    this.DEFAULT_SATISFACTION_DATE = value;
  }

  /**
   * Gets the value of the 'FLAG_SETTINGS' field.
   */
  public java.lang.CharSequence getFLAGSETTINGS() {
    return FLAG_SETTINGS;
  }

  /**
   * Sets the value of the 'FLAG_SETTINGS' field.
   * @param value the value to set.
   */
  public void setFLAGSETTINGS(java.lang.CharSequence value) {
    this.FLAG_SETTINGS = value;
  }

  /**
   * Gets the value of the 'TRF_TO_CONSOLIDATED_DEBT_ACNT' field.
   */
  public java.lang.CharSequence getTRFTOCONSOLIDATEDDEBTACNT() {
    return TRF_TO_CONSOLIDATED_DEBT_ACNT;
  }

  /**
   * Sets the value of the 'TRF_TO_CONSOLIDATED_DEBT_ACNT' field.
   * @param value the value to set.
   */
  public void setTRFTOCONSOLIDATEDDEBTACNT(java.lang.CharSequence value) {
    this.TRF_TO_CONSOLIDATED_DEBT_ACNT = value;
  }

  /**
   * Gets the value of the 'REPAYMENT_PERIOD' field.
   */
  public java.lang.CharSequence getREPAYMENTPERIOD() {
    return REPAYMENT_PERIOD;
  }

  /**
   * Sets the value of the 'REPAYMENT_PERIOD' field.
   * @param value the value to set.
   */
  public void setREPAYMENTPERIOD(java.lang.CharSequence value) {
    this.REPAYMENT_PERIOD = value;
  }

  /**
   * Gets the value of the 'MONTHLY_PAYMENT' field.
   */
  public java.lang.CharSequence getMONTHLYPAYMENT() {
    return MONTHLY_PAYMENT;
  }

  /**
   * Sets the value of the 'MONTHLY_PAYMENT' field.
   * @param value the value to set.
   */
  public void setMONTHLYPAYMENT(java.lang.CharSequence value) {
    this.MONTHLY_PAYMENT = value;
  }

  /**
   * Gets the value of the 'PAYMENT_FREQUENCY' field.
   */
  public java.lang.CharSequence getPAYMENTFREQUENCY() {
    return PAYMENT_FREQUENCY;
  }

  /**
   * Sets the value of the 'PAYMENT_FREQUENCY' field.
   * @param value the value to set.
   */
  public void setPAYMENTFREQUENCY(java.lang.CharSequence value) {
    this.PAYMENT_FREQUENCY = value;
  }

  /**
   * Gets the value of the 'FILE_CREATION_DATE' field.
   */
  public java.lang.CharSequence getFILECREATIONDATE() {
    return FILE_CREATION_DATE;
  }

  /**
   * Sets the value of the 'FILE_CREATION_DATE' field.
   * @param value the value to set.
   */
  public void setFILECREATIONDATE(java.lang.CharSequence value) {
    this.FILE_CREATION_DATE = value;
  }

  /**
   * Gets the value of the 'USABLE_STATUS_ID' field.
   */
  public java.lang.CharSequence getUSABLESTATUSID() {
    return USABLE_STATUS_ID;
  }

  /**
   * Sets the value of the 'USABLE_STATUS_ID' field.
   * @param value the value to set.
   */
  public void setUSABLESTATUSID(java.lang.CharSequence value) {
    this.USABLE_STATUS_ID = value;
  }

  /**
   * Gets the value of the 'REJECTION_FLAG' field.
   */
  public java.lang.CharSequence getREJECTIONFLAG() {
    return REJECTION_FLAG;
  }

  /**
   * Sets the value of the 'REJECTION_FLAG' field.
   * @param value the value to set.
   */
  public void setREJECTIONFLAG(java.lang.CharSequence value) {
    this.REJECTION_FLAG = value;
  }

  /**
   * Gets the value of the 'PREVIOUS_STATEMENT_BALANCE_IND' field.
   */
  public java.lang.CharSequence getPREVIOUSSTATEMENTBALANCEIND() {
    return PREVIOUS_STATEMENT_BALANCE_IND;
  }

  /**
   * Sets the value of the 'PREVIOUS_STATEMENT_BALANCE_IND' field.
   * @param value the value to set.
   */
  public void setPREVIOUSSTATEMENTBALANCEIND(java.lang.CharSequence value) {
    this.PREVIOUS_STATEMENT_BALANCE_IND = value;
  }

  /**
   * Gets the value of the 'RUN_DATE' field.
   */
  public java.lang.CharSequence getRUNDATE() {
    return RUN_DATE;
  }

  /**
   * Sets the value of the 'RUN_DATE' field.
   * @param value the value to set.
   */
  public void setRUNDATE(java.lang.CharSequence value) {
    this.RUN_DATE = value;
  }

  /** Creates a new PaymentProfileFull RecordBuilder */
  public static com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder newBuilder() {
    return new com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder();
  }
  
  /** Creates a new PaymentProfileFull RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder newBuilder(com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder other) {
    return new com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder(other);
  }
  
  /** Creates a new PaymentProfileFull RecordBuilder by copying an existing PaymentProfileFull instance */
  public static com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder newBuilder(com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull other) {
    return new com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder(other);
  }
  
  /**
   * RecordBuilder for PaymentProfileFull instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PaymentProfileFull>
    implements org.apache.avro.data.RecordBuilder<PaymentProfileFull> {

    private java.lang.CharSequence DATE;
    private java.lang.CharSequence FLAG;
    private java.lang.CharSequence CURRENT_BALANCE;
    private java.lang.CharSequence CURRENT_BALANCE_CREDIT_IND;
    private java.lang.CharSequence ORIGINAL_DEFAULT_BALANCE;
    private java.lang.CharSequence CREDIT_LIMIT;
    private java.lang.CharSequence PAYMENT_AMOUNT;
    private java.lang.CharSequence PREVIOUS_STATEMENT_BALANCE;
    private java.lang.CharSequence PAYMENT_CREDIT_IND;
    private java.lang.CharSequence PROMOTION_ACTIVITY_FLAG;
    private java.lang.CharSequence VALUE_OF_CASH_ADVANCES;
    private java.lang.CharSequence NUMBER_OF_CASH_ADVANCES;
    private java.lang.CharSequence AVERAGE_BALANCE;
    private java.lang.CharSequence AVERAGE_BALANCE_CREDIT_IND;
    private java.lang.CharSequence MINIMUM_BALANCE;
    private java.lang.CharSequence MINIMUM_BALANCE_CREDIT_IND;
    private java.lang.CharSequence MAXIMUM_BALANCE;
    private java.lang.CharSequence MAXIMUM_BALANCE_CREDIT_IND;
    private java.lang.CharSequence CREDIT_TURNOVER;
    private java.lang.CharSequence CREDIT_TURNOVER_NET_GROSS;
    private java.lang.CharSequence DEBIT_TURNOVER;
    private java.lang.CharSequence DEBIT_TURNOVER_NET_GROSS;
    private java.lang.CharSequence REJECTED_PAYMENTS;
    private java.lang.CharSequence MAX_DURATION_OF_EXCESS;
    private java.lang.CharSequence SPECIAL_INSTRUCTION_IND;
    private java.lang.CharSequence ACCOUNT_TYPE;
    private java.lang.CharSequence CLOSE_DATE;
    private java.lang.CharSequence DEFAULT_SATISFACTION_DATE;
    private java.lang.CharSequence FLAG_SETTINGS;
    private java.lang.CharSequence TRF_TO_CONSOLIDATED_DEBT_ACNT;
    private java.lang.CharSequence REPAYMENT_PERIOD;
    private java.lang.CharSequence MONTHLY_PAYMENT;
    private java.lang.CharSequence PAYMENT_FREQUENCY;
    private java.lang.CharSequence FILE_CREATION_DATE;
    private java.lang.CharSequence USABLE_STATUS_ID;
    private java.lang.CharSequence REJECTION_FLAG;
    private java.lang.CharSequence PREVIOUS_STATEMENT_BALANCE_IND;
    private java.lang.CharSequence RUN_DATE;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.DATE)) {
        this.DATE = data().deepCopy(fields()[0].schema(), other.DATE);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.FLAG)) {
        this.FLAG = data().deepCopy(fields()[1].schema(), other.FLAG);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.CURRENT_BALANCE)) {
        this.CURRENT_BALANCE = data().deepCopy(fields()[2].schema(), other.CURRENT_BALANCE);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.CURRENT_BALANCE_CREDIT_IND)) {
        this.CURRENT_BALANCE_CREDIT_IND = data().deepCopy(fields()[3].schema(), other.CURRENT_BALANCE_CREDIT_IND);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ORIGINAL_DEFAULT_BALANCE)) {
        this.ORIGINAL_DEFAULT_BALANCE = data().deepCopy(fields()[4].schema(), other.ORIGINAL_DEFAULT_BALANCE);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.CREDIT_LIMIT)) {
        this.CREDIT_LIMIT = data().deepCopy(fields()[5].schema(), other.CREDIT_LIMIT);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.PAYMENT_AMOUNT)) {
        this.PAYMENT_AMOUNT = data().deepCopy(fields()[6].schema(), other.PAYMENT_AMOUNT);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.PREVIOUS_STATEMENT_BALANCE)) {
        this.PREVIOUS_STATEMENT_BALANCE = data().deepCopy(fields()[7].schema(), other.PREVIOUS_STATEMENT_BALANCE);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.PAYMENT_CREDIT_IND)) {
        this.PAYMENT_CREDIT_IND = data().deepCopy(fields()[8].schema(), other.PAYMENT_CREDIT_IND);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.PROMOTION_ACTIVITY_FLAG)) {
        this.PROMOTION_ACTIVITY_FLAG = data().deepCopy(fields()[9].schema(), other.PROMOTION_ACTIVITY_FLAG);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.VALUE_OF_CASH_ADVANCES)) {
        this.VALUE_OF_CASH_ADVANCES = data().deepCopy(fields()[10].schema(), other.VALUE_OF_CASH_ADVANCES);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.NUMBER_OF_CASH_ADVANCES)) {
        this.NUMBER_OF_CASH_ADVANCES = data().deepCopy(fields()[11].schema(), other.NUMBER_OF_CASH_ADVANCES);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.AVERAGE_BALANCE)) {
        this.AVERAGE_BALANCE = data().deepCopy(fields()[12].schema(), other.AVERAGE_BALANCE);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.AVERAGE_BALANCE_CREDIT_IND)) {
        this.AVERAGE_BALANCE_CREDIT_IND = data().deepCopy(fields()[13].schema(), other.AVERAGE_BALANCE_CREDIT_IND);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.MINIMUM_BALANCE)) {
        this.MINIMUM_BALANCE = data().deepCopy(fields()[14].schema(), other.MINIMUM_BALANCE);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.MINIMUM_BALANCE_CREDIT_IND)) {
        this.MINIMUM_BALANCE_CREDIT_IND = data().deepCopy(fields()[15].schema(), other.MINIMUM_BALANCE_CREDIT_IND);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.MAXIMUM_BALANCE)) {
        this.MAXIMUM_BALANCE = data().deepCopy(fields()[16].schema(), other.MAXIMUM_BALANCE);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.MAXIMUM_BALANCE_CREDIT_IND)) {
        this.MAXIMUM_BALANCE_CREDIT_IND = data().deepCopy(fields()[17].schema(), other.MAXIMUM_BALANCE_CREDIT_IND);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.CREDIT_TURNOVER)) {
        this.CREDIT_TURNOVER = data().deepCopy(fields()[18].schema(), other.CREDIT_TURNOVER);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.CREDIT_TURNOVER_NET_GROSS)) {
        this.CREDIT_TURNOVER_NET_GROSS = data().deepCopy(fields()[19].schema(), other.CREDIT_TURNOVER_NET_GROSS);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.DEBIT_TURNOVER)) {
        this.DEBIT_TURNOVER = data().deepCopy(fields()[20].schema(), other.DEBIT_TURNOVER);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.DEBIT_TURNOVER_NET_GROSS)) {
        this.DEBIT_TURNOVER_NET_GROSS = data().deepCopy(fields()[21].schema(), other.DEBIT_TURNOVER_NET_GROSS);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.REJECTED_PAYMENTS)) {
        this.REJECTED_PAYMENTS = data().deepCopy(fields()[22].schema(), other.REJECTED_PAYMENTS);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.MAX_DURATION_OF_EXCESS)) {
        this.MAX_DURATION_OF_EXCESS = data().deepCopy(fields()[23].schema(), other.MAX_DURATION_OF_EXCESS);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.SPECIAL_INSTRUCTION_IND)) {
        this.SPECIAL_INSTRUCTION_IND = data().deepCopy(fields()[24].schema(), other.SPECIAL_INSTRUCTION_IND);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.ACCOUNT_TYPE)) {
        this.ACCOUNT_TYPE = data().deepCopy(fields()[25].schema(), other.ACCOUNT_TYPE);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.CLOSE_DATE)) {
        this.CLOSE_DATE = data().deepCopy(fields()[26].schema(), other.CLOSE_DATE);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.DEFAULT_SATISFACTION_DATE)) {
        this.DEFAULT_SATISFACTION_DATE = data().deepCopy(fields()[27].schema(), other.DEFAULT_SATISFACTION_DATE);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.FLAG_SETTINGS)) {
        this.FLAG_SETTINGS = data().deepCopy(fields()[28].schema(), other.FLAG_SETTINGS);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.TRF_TO_CONSOLIDATED_DEBT_ACNT)) {
        this.TRF_TO_CONSOLIDATED_DEBT_ACNT = data().deepCopy(fields()[29].schema(), other.TRF_TO_CONSOLIDATED_DEBT_ACNT);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.REPAYMENT_PERIOD)) {
        this.REPAYMENT_PERIOD = data().deepCopy(fields()[30].schema(), other.REPAYMENT_PERIOD);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.MONTHLY_PAYMENT)) {
        this.MONTHLY_PAYMENT = data().deepCopy(fields()[31].schema(), other.MONTHLY_PAYMENT);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.PAYMENT_FREQUENCY)) {
        this.PAYMENT_FREQUENCY = data().deepCopy(fields()[32].schema(), other.PAYMENT_FREQUENCY);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.FILE_CREATION_DATE)) {
        this.FILE_CREATION_DATE = data().deepCopy(fields()[33].schema(), other.FILE_CREATION_DATE);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.USABLE_STATUS_ID)) {
        this.USABLE_STATUS_ID = data().deepCopy(fields()[34].schema(), other.USABLE_STATUS_ID);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.REJECTION_FLAG)) {
        this.REJECTION_FLAG = data().deepCopy(fields()[35].schema(), other.REJECTION_FLAG);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.PREVIOUS_STATEMENT_BALANCE_IND)) {
        this.PREVIOUS_STATEMENT_BALANCE_IND = data().deepCopy(fields()[36].schema(), other.PREVIOUS_STATEMENT_BALANCE_IND);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.RUN_DATE)) {
        this.RUN_DATE = data().deepCopy(fields()[37].schema(), other.RUN_DATE);
        fieldSetFlags()[37] = true;
      }
    }
    
    /** Creates a Builder by copying an existing PaymentProfileFull instance */
    private Builder(com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull other) {
            super(com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.SCHEMA$);
      if (isValidValue(fields()[0], other.DATE)) {
        this.DATE = data().deepCopy(fields()[0].schema(), other.DATE);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.FLAG)) {
        this.FLAG = data().deepCopy(fields()[1].schema(), other.FLAG);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.CURRENT_BALANCE)) {
        this.CURRENT_BALANCE = data().deepCopy(fields()[2].schema(), other.CURRENT_BALANCE);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.CURRENT_BALANCE_CREDIT_IND)) {
        this.CURRENT_BALANCE_CREDIT_IND = data().deepCopy(fields()[3].schema(), other.CURRENT_BALANCE_CREDIT_IND);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ORIGINAL_DEFAULT_BALANCE)) {
        this.ORIGINAL_DEFAULT_BALANCE = data().deepCopy(fields()[4].schema(), other.ORIGINAL_DEFAULT_BALANCE);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.CREDIT_LIMIT)) {
        this.CREDIT_LIMIT = data().deepCopy(fields()[5].schema(), other.CREDIT_LIMIT);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.PAYMENT_AMOUNT)) {
        this.PAYMENT_AMOUNT = data().deepCopy(fields()[6].schema(), other.PAYMENT_AMOUNT);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.PREVIOUS_STATEMENT_BALANCE)) {
        this.PREVIOUS_STATEMENT_BALANCE = data().deepCopy(fields()[7].schema(), other.PREVIOUS_STATEMENT_BALANCE);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.PAYMENT_CREDIT_IND)) {
        this.PAYMENT_CREDIT_IND = data().deepCopy(fields()[8].schema(), other.PAYMENT_CREDIT_IND);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.PROMOTION_ACTIVITY_FLAG)) {
        this.PROMOTION_ACTIVITY_FLAG = data().deepCopy(fields()[9].schema(), other.PROMOTION_ACTIVITY_FLAG);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.VALUE_OF_CASH_ADVANCES)) {
        this.VALUE_OF_CASH_ADVANCES = data().deepCopy(fields()[10].schema(), other.VALUE_OF_CASH_ADVANCES);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.NUMBER_OF_CASH_ADVANCES)) {
        this.NUMBER_OF_CASH_ADVANCES = data().deepCopy(fields()[11].schema(), other.NUMBER_OF_CASH_ADVANCES);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.AVERAGE_BALANCE)) {
        this.AVERAGE_BALANCE = data().deepCopy(fields()[12].schema(), other.AVERAGE_BALANCE);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.AVERAGE_BALANCE_CREDIT_IND)) {
        this.AVERAGE_BALANCE_CREDIT_IND = data().deepCopy(fields()[13].schema(), other.AVERAGE_BALANCE_CREDIT_IND);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.MINIMUM_BALANCE)) {
        this.MINIMUM_BALANCE = data().deepCopy(fields()[14].schema(), other.MINIMUM_BALANCE);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.MINIMUM_BALANCE_CREDIT_IND)) {
        this.MINIMUM_BALANCE_CREDIT_IND = data().deepCopy(fields()[15].schema(), other.MINIMUM_BALANCE_CREDIT_IND);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.MAXIMUM_BALANCE)) {
        this.MAXIMUM_BALANCE = data().deepCopy(fields()[16].schema(), other.MAXIMUM_BALANCE);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.MAXIMUM_BALANCE_CREDIT_IND)) {
        this.MAXIMUM_BALANCE_CREDIT_IND = data().deepCopy(fields()[17].schema(), other.MAXIMUM_BALANCE_CREDIT_IND);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.CREDIT_TURNOVER)) {
        this.CREDIT_TURNOVER = data().deepCopy(fields()[18].schema(), other.CREDIT_TURNOVER);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.CREDIT_TURNOVER_NET_GROSS)) {
        this.CREDIT_TURNOVER_NET_GROSS = data().deepCopy(fields()[19].schema(), other.CREDIT_TURNOVER_NET_GROSS);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.DEBIT_TURNOVER)) {
        this.DEBIT_TURNOVER = data().deepCopy(fields()[20].schema(), other.DEBIT_TURNOVER);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.DEBIT_TURNOVER_NET_GROSS)) {
        this.DEBIT_TURNOVER_NET_GROSS = data().deepCopy(fields()[21].schema(), other.DEBIT_TURNOVER_NET_GROSS);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.REJECTED_PAYMENTS)) {
        this.REJECTED_PAYMENTS = data().deepCopy(fields()[22].schema(), other.REJECTED_PAYMENTS);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.MAX_DURATION_OF_EXCESS)) {
        this.MAX_DURATION_OF_EXCESS = data().deepCopy(fields()[23].schema(), other.MAX_DURATION_OF_EXCESS);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.SPECIAL_INSTRUCTION_IND)) {
        this.SPECIAL_INSTRUCTION_IND = data().deepCopy(fields()[24].schema(), other.SPECIAL_INSTRUCTION_IND);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.ACCOUNT_TYPE)) {
        this.ACCOUNT_TYPE = data().deepCopy(fields()[25].schema(), other.ACCOUNT_TYPE);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.CLOSE_DATE)) {
        this.CLOSE_DATE = data().deepCopy(fields()[26].schema(), other.CLOSE_DATE);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.DEFAULT_SATISFACTION_DATE)) {
        this.DEFAULT_SATISFACTION_DATE = data().deepCopy(fields()[27].schema(), other.DEFAULT_SATISFACTION_DATE);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.FLAG_SETTINGS)) {
        this.FLAG_SETTINGS = data().deepCopy(fields()[28].schema(), other.FLAG_SETTINGS);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.TRF_TO_CONSOLIDATED_DEBT_ACNT)) {
        this.TRF_TO_CONSOLIDATED_DEBT_ACNT = data().deepCopy(fields()[29].schema(), other.TRF_TO_CONSOLIDATED_DEBT_ACNT);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.REPAYMENT_PERIOD)) {
        this.REPAYMENT_PERIOD = data().deepCopy(fields()[30].schema(), other.REPAYMENT_PERIOD);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.MONTHLY_PAYMENT)) {
        this.MONTHLY_PAYMENT = data().deepCopy(fields()[31].schema(), other.MONTHLY_PAYMENT);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.PAYMENT_FREQUENCY)) {
        this.PAYMENT_FREQUENCY = data().deepCopy(fields()[32].schema(), other.PAYMENT_FREQUENCY);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.FILE_CREATION_DATE)) {
        this.FILE_CREATION_DATE = data().deepCopy(fields()[33].schema(), other.FILE_CREATION_DATE);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.USABLE_STATUS_ID)) {
        this.USABLE_STATUS_ID = data().deepCopy(fields()[34].schema(), other.USABLE_STATUS_ID);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.REJECTION_FLAG)) {
        this.REJECTION_FLAG = data().deepCopy(fields()[35].schema(), other.REJECTION_FLAG);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.PREVIOUS_STATEMENT_BALANCE_IND)) {
        this.PREVIOUS_STATEMENT_BALANCE_IND = data().deepCopy(fields()[36].schema(), other.PREVIOUS_STATEMENT_BALANCE_IND);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.RUN_DATE)) {
        this.RUN_DATE = data().deepCopy(fields()[37].schema(), other.RUN_DATE);
        fieldSetFlags()[37] = true;
      }
    }

    /** Gets the value of the 'DATE' field */
    public java.lang.CharSequence getDATE() {
      return DATE;
    }
    
    /** Sets the value of the 'DATE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setDATE(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.DATE = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'DATE' field has been set */
    public boolean hasDATE() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'DATE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearDATE() {
      DATE = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'FLAG' field */
    public java.lang.CharSequence getFLAG() {
      return FLAG;
    }
    
    /** Sets the value of the 'FLAG' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setFLAG(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.FLAG = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'FLAG' field has been set */
    public boolean hasFLAG() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'FLAG' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearFLAG() {
      FLAG = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'CURRENT_BALANCE' field */
    public java.lang.CharSequence getCURRENTBALANCE() {
      return CURRENT_BALANCE;
    }
    
    /** Sets the value of the 'CURRENT_BALANCE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setCURRENTBALANCE(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.CURRENT_BALANCE = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'CURRENT_BALANCE' field has been set */
    public boolean hasCURRENTBALANCE() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'CURRENT_BALANCE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearCURRENTBALANCE() {
      CURRENT_BALANCE = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'CURRENT_BALANCE_CREDIT_IND' field */
    public java.lang.CharSequence getCURRENTBALANCECREDITIND() {
      return CURRENT_BALANCE_CREDIT_IND;
    }
    
    /** Sets the value of the 'CURRENT_BALANCE_CREDIT_IND' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setCURRENTBALANCECREDITIND(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.CURRENT_BALANCE_CREDIT_IND = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'CURRENT_BALANCE_CREDIT_IND' field has been set */
    public boolean hasCURRENTBALANCECREDITIND() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'CURRENT_BALANCE_CREDIT_IND' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearCURRENTBALANCECREDITIND() {
      CURRENT_BALANCE_CREDIT_IND = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'ORIGINAL_DEFAULT_BALANCE' field */
    public java.lang.CharSequence getORIGINALDEFAULTBALANCE() {
      return ORIGINAL_DEFAULT_BALANCE;
    }
    
    /** Sets the value of the 'ORIGINAL_DEFAULT_BALANCE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setORIGINALDEFAULTBALANCE(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.ORIGINAL_DEFAULT_BALANCE = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'ORIGINAL_DEFAULT_BALANCE' field has been set */
    public boolean hasORIGINALDEFAULTBALANCE() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'ORIGINAL_DEFAULT_BALANCE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearORIGINALDEFAULTBALANCE() {
      ORIGINAL_DEFAULT_BALANCE = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'CREDIT_LIMIT' field */
    public java.lang.CharSequence getCREDITLIMIT() {
      return CREDIT_LIMIT;
    }
    
    /** Sets the value of the 'CREDIT_LIMIT' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setCREDITLIMIT(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.CREDIT_LIMIT = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'CREDIT_LIMIT' field has been set */
    public boolean hasCREDITLIMIT() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'CREDIT_LIMIT' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearCREDITLIMIT() {
      CREDIT_LIMIT = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'PAYMENT_AMOUNT' field */
    public java.lang.CharSequence getPAYMENTAMOUNT() {
      return PAYMENT_AMOUNT;
    }
    
    /** Sets the value of the 'PAYMENT_AMOUNT' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setPAYMENTAMOUNT(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.PAYMENT_AMOUNT = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'PAYMENT_AMOUNT' field has been set */
    public boolean hasPAYMENTAMOUNT() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'PAYMENT_AMOUNT' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearPAYMENTAMOUNT() {
      PAYMENT_AMOUNT = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'PREVIOUS_STATEMENT_BALANCE' field */
    public java.lang.CharSequence getPREVIOUSSTATEMENTBALANCE() {
      return PREVIOUS_STATEMENT_BALANCE;
    }
    
    /** Sets the value of the 'PREVIOUS_STATEMENT_BALANCE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setPREVIOUSSTATEMENTBALANCE(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.PREVIOUS_STATEMENT_BALANCE = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'PREVIOUS_STATEMENT_BALANCE' field has been set */
    public boolean hasPREVIOUSSTATEMENTBALANCE() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'PREVIOUS_STATEMENT_BALANCE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearPREVIOUSSTATEMENTBALANCE() {
      PREVIOUS_STATEMENT_BALANCE = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'PAYMENT_CREDIT_IND' field */
    public java.lang.CharSequence getPAYMENTCREDITIND() {
      return PAYMENT_CREDIT_IND;
    }
    
    /** Sets the value of the 'PAYMENT_CREDIT_IND' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setPAYMENTCREDITIND(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.PAYMENT_CREDIT_IND = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'PAYMENT_CREDIT_IND' field has been set */
    public boolean hasPAYMENTCREDITIND() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'PAYMENT_CREDIT_IND' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearPAYMENTCREDITIND() {
      PAYMENT_CREDIT_IND = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'PROMOTION_ACTIVITY_FLAG' field */
    public java.lang.CharSequence getPROMOTIONACTIVITYFLAG() {
      return PROMOTION_ACTIVITY_FLAG;
    }
    
    /** Sets the value of the 'PROMOTION_ACTIVITY_FLAG' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setPROMOTIONACTIVITYFLAG(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.PROMOTION_ACTIVITY_FLAG = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'PROMOTION_ACTIVITY_FLAG' field has been set */
    public boolean hasPROMOTIONACTIVITYFLAG() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'PROMOTION_ACTIVITY_FLAG' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearPROMOTIONACTIVITYFLAG() {
      PROMOTION_ACTIVITY_FLAG = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'VALUE_OF_CASH_ADVANCES' field */
    public java.lang.CharSequence getVALUEOFCASHADVANCES() {
      return VALUE_OF_CASH_ADVANCES;
    }
    
    /** Sets the value of the 'VALUE_OF_CASH_ADVANCES' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setVALUEOFCASHADVANCES(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.VALUE_OF_CASH_ADVANCES = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'VALUE_OF_CASH_ADVANCES' field has been set */
    public boolean hasVALUEOFCASHADVANCES() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'VALUE_OF_CASH_ADVANCES' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearVALUEOFCASHADVANCES() {
      VALUE_OF_CASH_ADVANCES = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'NUMBER_OF_CASH_ADVANCES' field */
    public java.lang.CharSequence getNUMBEROFCASHADVANCES() {
      return NUMBER_OF_CASH_ADVANCES;
    }
    
    /** Sets the value of the 'NUMBER_OF_CASH_ADVANCES' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setNUMBEROFCASHADVANCES(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.NUMBER_OF_CASH_ADVANCES = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'NUMBER_OF_CASH_ADVANCES' field has been set */
    public boolean hasNUMBEROFCASHADVANCES() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'NUMBER_OF_CASH_ADVANCES' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearNUMBEROFCASHADVANCES() {
      NUMBER_OF_CASH_ADVANCES = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'AVERAGE_BALANCE' field */
    public java.lang.CharSequence getAVERAGEBALANCE() {
      return AVERAGE_BALANCE;
    }
    
    /** Sets the value of the 'AVERAGE_BALANCE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setAVERAGEBALANCE(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.AVERAGE_BALANCE = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'AVERAGE_BALANCE' field has been set */
    public boolean hasAVERAGEBALANCE() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'AVERAGE_BALANCE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearAVERAGEBALANCE() {
      AVERAGE_BALANCE = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'AVERAGE_BALANCE_CREDIT_IND' field */
    public java.lang.CharSequence getAVERAGEBALANCECREDITIND() {
      return AVERAGE_BALANCE_CREDIT_IND;
    }
    
    /** Sets the value of the 'AVERAGE_BALANCE_CREDIT_IND' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setAVERAGEBALANCECREDITIND(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.AVERAGE_BALANCE_CREDIT_IND = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'AVERAGE_BALANCE_CREDIT_IND' field has been set */
    public boolean hasAVERAGEBALANCECREDITIND() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'AVERAGE_BALANCE_CREDIT_IND' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearAVERAGEBALANCECREDITIND() {
      AVERAGE_BALANCE_CREDIT_IND = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'MINIMUM_BALANCE' field */
    public java.lang.CharSequence getMINIMUMBALANCE() {
      return MINIMUM_BALANCE;
    }
    
    /** Sets the value of the 'MINIMUM_BALANCE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setMINIMUMBALANCE(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.MINIMUM_BALANCE = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'MINIMUM_BALANCE' field has been set */
    public boolean hasMINIMUMBALANCE() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'MINIMUM_BALANCE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearMINIMUMBALANCE() {
      MINIMUM_BALANCE = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'MINIMUM_BALANCE_CREDIT_IND' field */
    public java.lang.CharSequence getMINIMUMBALANCECREDITIND() {
      return MINIMUM_BALANCE_CREDIT_IND;
    }
    
    /** Sets the value of the 'MINIMUM_BALANCE_CREDIT_IND' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setMINIMUMBALANCECREDITIND(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.MINIMUM_BALANCE_CREDIT_IND = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'MINIMUM_BALANCE_CREDIT_IND' field has been set */
    public boolean hasMINIMUMBALANCECREDITIND() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'MINIMUM_BALANCE_CREDIT_IND' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearMINIMUMBALANCECREDITIND() {
      MINIMUM_BALANCE_CREDIT_IND = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'MAXIMUM_BALANCE' field */
    public java.lang.CharSequence getMAXIMUMBALANCE() {
      return MAXIMUM_BALANCE;
    }
    
    /** Sets the value of the 'MAXIMUM_BALANCE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setMAXIMUMBALANCE(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.MAXIMUM_BALANCE = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'MAXIMUM_BALANCE' field has been set */
    public boolean hasMAXIMUMBALANCE() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'MAXIMUM_BALANCE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearMAXIMUMBALANCE() {
      MAXIMUM_BALANCE = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'MAXIMUM_BALANCE_CREDIT_IND' field */
    public java.lang.CharSequence getMAXIMUMBALANCECREDITIND() {
      return MAXIMUM_BALANCE_CREDIT_IND;
    }
    
    /** Sets the value of the 'MAXIMUM_BALANCE_CREDIT_IND' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setMAXIMUMBALANCECREDITIND(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.MAXIMUM_BALANCE_CREDIT_IND = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'MAXIMUM_BALANCE_CREDIT_IND' field has been set */
    public boolean hasMAXIMUMBALANCECREDITIND() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'MAXIMUM_BALANCE_CREDIT_IND' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearMAXIMUMBALANCECREDITIND() {
      MAXIMUM_BALANCE_CREDIT_IND = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'CREDIT_TURNOVER' field */
    public java.lang.CharSequence getCREDITTURNOVER() {
      return CREDIT_TURNOVER;
    }
    
    /** Sets the value of the 'CREDIT_TURNOVER' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setCREDITTURNOVER(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.CREDIT_TURNOVER = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'CREDIT_TURNOVER' field has been set */
    public boolean hasCREDITTURNOVER() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'CREDIT_TURNOVER' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearCREDITTURNOVER() {
      CREDIT_TURNOVER = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'CREDIT_TURNOVER_NET_GROSS' field */
    public java.lang.CharSequence getCREDITTURNOVERNETGROSS() {
      return CREDIT_TURNOVER_NET_GROSS;
    }
    
    /** Sets the value of the 'CREDIT_TURNOVER_NET_GROSS' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setCREDITTURNOVERNETGROSS(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.CREDIT_TURNOVER_NET_GROSS = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'CREDIT_TURNOVER_NET_GROSS' field has been set */
    public boolean hasCREDITTURNOVERNETGROSS() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'CREDIT_TURNOVER_NET_GROSS' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearCREDITTURNOVERNETGROSS() {
      CREDIT_TURNOVER_NET_GROSS = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'DEBIT_TURNOVER' field */
    public java.lang.CharSequence getDEBITTURNOVER() {
      return DEBIT_TURNOVER;
    }
    
    /** Sets the value of the 'DEBIT_TURNOVER' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setDEBITTURNOVER(java.lang.CharSequence value) {
      validate(fields()[20], value);
      this.DEBIT_TURNOVER = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'DEBIT_TURNOVER' field has been set */
    public boolean hasDEBITTURNOVER() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'DEBIT_TURNOVER' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearDEBITTURNOVER() {
      DEBIT_TURNOVER = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /** Gets the value of the 'DEBIT_TURNOVER_NET_GROSS' field */
    public java.lang.CharSequence getDEBITTURNOVERNETGROSS() {
      return DEBIT_TURNOVER_NET_GROSS;
    }
    
    /** Sets the value of the 'DEBIT_TURNOVER_NET_GROSS' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setDEBITTURNOVERNETGROSS(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.DEBIT_TURNOVER_NET_GROSS = value;
      fieldSetFlags()[21] = true;
      return this; 
    }
    
    /** Checks whether the 'DEBIT_TURNOVER_NET_GROSS' field has been set */
    public boolean hasDEBITTURNOVERNETGROSS() {
      return fieldSetFlags()[21];
    }
    
    /** Clears the value of the 'DEBIT_TURNOVER_NET_GROSS' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearDEBITTURNOVERNETGROSS() {
      DEBIT_TURNOVER_NET_GROSS = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /** Gets the value of the 'REJECTED_PAYMENTS' field */
    public java.lang.CharSequence getREJECTEDPAYMENTS() {
      return REJECTED_PAYMENTS;
    }
    
    /** Sets the value of the 'REJECTED_PAYMENTS' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setREJECTEDPAYMENTS(java.lang.CharSequence value) {
      validate(fields()[22], value);
      this.REJECTED_PAYMENTS = value;
      fieldSetFlags()[22] = true;
      return this; 
    }
    
    /** Checks whether the 'REJECTED_PAYMENTS' field has been set */
    public boolean hasREJECTEDPAYMENTS() {
      return fieldSetFlags()[22];
    }
    
    /** Clears the value of the 'REJECTED_PAYMENTS' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearREJECTEDPAYMENTS() {
      REJECTED_PAYMENTS = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /** Gets the value of the 'MAX_DURATION_OF_EXCESS' field */
    public java.lang.CharSequence getMAXDURATIONOFEXCESS() {
      return MAX_DURATION_OF_EXCESS;
    }
    
    /** Sets the value of the 'MAX_DURATION_OF_EXCESS' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setMAXDURATIONOFEXCESS(java.lang.CharSequence value) {
      validate(fields()[23], value);
      this.MAX_DURATION_OF_EXCESS = value;
      fieldSetFlags()[23] = true;
      return this; 
    }
    
    /** Checks whether the 'MAX_DURATION_OF_EXCESS' field has been set */
    public boolean hasMAXDURATIONOFEXCESS() {
      return fieldSetFlags()[23];
    }
    
    /** Clears the value of the 'MAX_DURATION_OF_EXCESS' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearMAXDURATIONOFEXCESS() {
      MAX_DURATION_OF_EXCESS = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /** Gets the value of the 'SPECIAL_INSTRUCTION_IND' field */
    public java.lang.CharSequence getSPECIALINSTRUCTIONIND() {
      return SPECIAL_INSTRUCTION_IND;
    }
    
    /** Sets the value of the 'SPECIAL_INSTRUCTION_IND' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setSPECIALINSTRUCTIONIND(java.lang.CharSequence value) {
      validate(fields()[24], value);
      this.SPECIAL_INSTRUCTION_IND = value;
      fieldSetFlags()[24] = true;
      return this; 
    }
    
    /** Checks whether the 'SPECIAL_INSTRUCTION_IND' field has been set */
    public boolean hasSPECIALINSTRUCTIONIND() {
      return fieldSetFlags()[24];
    }
    
    /** Clears the value of the 'SPECIAL_INSTRUCTION_IND' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearSPECIALINSTRUCTIONIND() {
      SPECIAL_INSTRUCTION_IND = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /** Gets the value of the 'ACCOUNT_TYPE' field */
    public java.lang.CharSequence getACCOUNTTYPE() {
      return ACCOUNT_TYPE;
    }
    
    /** Sets the value of the 'ACCOUNT_TYPE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setACCOUNTTYPE(java.lang.CharSequence value) {
      validate(fields()[25], value);
      this.ACCOUNT_TYPE = value;
      fieldSetFlags()[25] = true;
      return this; 
    }
    
    /** Checks whether the 'ACCOUNT_TYPE' field has been set */
    public boolean hasACCOUNTTYPE() {
      return fieldSetFlags()[25];
    }
    
    /** Clears the value of the 'ACCOUNT_TYPE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearACCOUNTTYPE() {
      ACCOUNT_TYPE = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /** Gets the value of the 'CLOSE_DATE' field */
    public java.lang.CharSequence getCLOSEDATE() {
      return CLOSE_DATE;
    }
    
    /** Sets the value of the 'CLOSE_DATE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setCLOSEDATE(java.lang.CharSequence value) {
      validate(fields()[26], value);
      this.CLOSE_DATE = value;
      fieldSetFlags()[26] = true;
      return this; 
    }
    
    /** Checks whether the 'CLOSE_DATE' field has been set */
    public boolean hasCLOSEDATE() {
      return fieldSetFlags()[26];
    }
    
    /** Clears the value of the 'CLOSE_DATE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearCLOSEDATE() {
      CLOSE_DATE = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /** Gets the value of the 'DEFAULT_SATISFACTION_DATE' field */
    public java.lang.CharSequence getDEFAULTSATISFACTIONDATE() {
      return DEFAULT_SATISFACTION_DATE;
    }
    
    /** Sets the value of the 'DEFAULT_SATISFACTION_DATE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setDEFAULTSATISFACTIONDATE(java.lang.CharSequence value) {
      validate(fields()[27], value);
      this.DEFAULT_SATISFACTION_DATE = value;
      fieldSetFlags()[27] = true;
      return this; 
    }
    
    /** Checks whether the 'DEFAULT_SATISFACTION_DATE' field has been set */
    public boolean hasDEFAULTSATISFACTIONDATE() {
      return fieldSetFlags()[27];
    }
    
    /** Clears the value of the 'DEFAULT_SATISFACTION_DATE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearDEFAULTSATISFACTIONDATE() {
      DEFAULT_SATISFACTION_DATE = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /** Gets the value of the 'FLAG_SETTINGS' field */
    public java.lang.CharSequence getFLAGSETTINGS() {
      return FLAG_SETTINGS;
    }
    
    /** Sets the value of the 'FLAG_SETTINGS' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setFLAGSETTINGS(java.lang.CharSequence value) {
      validate(fields()[28], value);
      this.FLAG_SETTINGS = value;
      fieldSetFlags()[28] = true;
      return this; 
    }
    
    /** Checks whether the 'FLAG_SETTINGS' field has been set */
    public boolean hasFLAGSETTINGS() {
      return fieldSetFlags()[28];
    }
    
    /** Clears the value of the 'FLAG_SETTINGS' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearFLAGSETTINGS() {
      FLAG_SETTINGS = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /** Gets the value of the 'TRF_TO_CONSOLIDATED_DEBT_ACNT' field */
    public java.lang.CharSequence getTRFTOCONSOLIDATEDDEBTACNT() {
      return TRF_TO_CONSOLIDATED_DEBT_ACNT;
    }
    
    /** Sets the value of the 'TRF_TO_CONSOLIDATED_DEBT_ACNT' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setTRFTOCONSOLIDATEDDEBTACNT(java.lang.CharSequence value) {
      validate(fields()[29], value);
      this.TRF_TO_CONSOLIDATED_DEBT_ACNT = value;
      fieldSetFlags()[29] = true;
      return this; 
    }
    
    /** Checks whether the 'TRF_TO_CONSOLIDATED_DEBT_ACNT' field has been set */
    public boolean hasTRFTOCONSOLIDATEDDEBTACNT() {
      return fieldSetFlags()[29];
    }
    
    /** Clears the value of the 'TRF_TO_CONSOLIDATED_DEBT_ACNT' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearTRFTOCONSOLIDATEDDEBTACNT() {
      TRF_TO_CONSOLIDATED_DEBT_ACNT = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /** Gets the value of the 'REPAYMENT_PERIOD' field */
    public java.lang.CharSequence getREPAYMENTPERIOD() {
      return REPAYMENT_PERIOD;
    }
    
    /** Sets the value of the 'REPAYMENT_PERIOD' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setREPAYMENTPERIOD(java.lang.CharSequence value) {
      validate(fields()[30], value);
      this.REPAYMENT_PERIOD = value;
      fieldSetFlags()[30] = true;
      return this; 
    }
    
    /** Checks whether the 'REPAYMENT_PERIOD' field has been set */
    public boolean hasREPAYMENTPERIOD() {
      return fieldSetFlags()[30];
    }
    
    /** Clears the value of the 'REPAYMENT_PERIOD' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearREPAYMENTPERIOD() {
      REPAYMENT_PERIOD = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /** Gets the value of the 'MONTHLY_PAYMENT' field */
    public java.lang.CharSequence getMONTHLYPAYMENT() {
      return MONTHLY_PAYMENT;
    }
    
    /** Sets the value of the 'MONTHLY_PAYMENT' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setMONTHLYPAYMENT(java.lang.CharSequence value) {
      validate(fields()[31], value);
      this.MONTHLY_PAYMENT = value;
      fieldSetFlags()[31] = true;
      return this; 
    }
    
    /** Checks whether the 'MONTHLY_PAYMENT' field has been set */
    public boolean hasMONTHLYPAYMENT() {
      return fieldSetFlags()[31];
    }
    
    /** Clears the value of the 'MONTHLY_PAYMENT' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearMONTHLYPAYMENT() {
      MONTHLY_PAYMENT = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /** Gets the value of the 'PAYMENT_FREQUENCY' field */
    public java.lang.CharSequence getPAYMENTFREQUENCY() {
      return PAYMENT_FREQUENCY;
    }
    
    /** Sets the value of the 'PAYMENT_FREQUENCY' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setPAYMENTFREQUENCY(java.lang.CharSequence value) {
      validate(fields()[32], value);
      this.PAYMENT_FREQUENCY = value;
      fieldSetFlags()[32] = true;
      return this; 
    }
    
    /** Checks whether the 'PAYMENT_FREQUENCY' field has been set */
    public boolean hasPAYMENTFREQUENCY() {
      return fieldSetFlags()[32];
    }
    
    /** Clears the value of the 'PAYMENT_FREQUENCY' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearPAYMENTFREQUENCY() {
      PAYMENT_FREQUENCY = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /** Gets the value of the 'FILE_CREATION_DATE' field */
    public java.lang.CharSequence getFILECREATIONDATE() {
      return FILE_CREATION_DATE;
    }
    
    /** Sets the value of the 'FILE_CREATION_DATE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setFILECREATIONDATE(java.lang.CharSequence value) {
      validate(fields()[33], value);
      this.FILE_CREATION_DATE = value;
      fieldSetFlags()[33] = true;
      return this; 
    }
    
    /** Checks whether the 'FILE_CREATION_DATE' field has been set */
    public boolean hasFILECREATIONDATE() {
      return fieldSetFlags()[33];
    }
    
    /** Clears the value of the 'FILE_CREATION_DATE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearFILECREATIONDATE() {
      FILE_CREATION_DATE = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /** Gets the value of the 'USABLE_STATUS_ID' field */
    public java.lang.CharSequence getUSABLESTATUSID() {
      return USABLE_STATUS_ID;
    }
    
    /** Sets the value of the 'USABLE_STATUS_ID' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setUSABLESTATUSID(java.lang.CharSequence value) {
      validate(fields()[34], value);
      this.USABLE_STATUS_ID = value;
      fieldSetFlags()[34] = true;
      return this; 
    }
    
    /** Checks whether the 'USABLE_STATUS_ID' field has been set */
    public boolean hasUSABLESTATUSID() {
      return fieldSetFlags()[34];
    }
    
    /** Clears the value of the 'USABLE_STATUS_ID' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearUSABLESTATUSID() {
      USABLE_STATUS_ID = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /** Gets the value of the 'REJECTION_FLAG' field */
    public java.lang.CharSequence getREJECTIONFLAG() {
      return REJECTION_FLAG;
    }
    
    /** Sets the value of the 'REJECTION_FLAG' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setREJECTIONFLAG(java.lang.CharSequence value) {
      validate(fields()[35], value);
      this.REJECTION_FLAG = value;
      fieldSetFlags()[35] = true;
      return this; 
    }
    
    /** Checks whether the 'REJECTION_FLAG' field has been set */
    public boolean hasREJECTIONFLAG() {
      return fieldSetFlags()[35];
    }
    
    /** Clears the value of the 'REJECTION_FLAG' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearREJECTIONFLAG() {
      REJECTION_FLAG = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /** Gets the value of the 'PREVIOUS_STATEMENT_BALANCE_IND' field */
    public java.lang.CharSequence getPREVIOUSSTATEMENTBALANCEIND() {
      return PREVIOUS_STATEMENT_BALANCE_IND;
    }
    
    /** Sets the value of the 'PREVIOUS_STATEMENT_BALANCE_IND' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setPREVIOUSSTATEMENTBALANCEIND(java.lang.CharSequence value) {
      validate(fields()[36], value);
      this.PREVIOUS_STATEMENT_BALANCE_IND = value;
      fieldSetFlags()[36] = true;
      return this; 
    }
    
    /** Checks whether the 'PREVIOUS_STATEMENT_BALANCE_IND' field has been set */
    public boolean hasPREVIOUSSTATEMENTBALANCEIND() {
      return fieldSetFlags()[36];
    }
    
    /** Clears the value of the 'PREVIOUS_STATEMENT_BALANCE_IND' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearPREVIOUSSTATEMENTBALANCEIND() {
      PREVIOUS_STATEMENT_BALANCE_IND = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /** Gets the value of the 'RUN_DATE' field */
    public java.lang.CharSequence getRUNDATE() {
      return RUN_DATE;
    }
    
    /** Sets the value of the 'RUN_DATE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder setRUNDATE(java.lang.CharSequence value) {
      validate(fields()[37], value);
      this.RUN_DATE = value;
      fieldSetFlags()[37] = true;
      return this; 
    }
    
    /** Checks whether the 'RUN_DATE' field has been set */
    public boolean hasRUNDATE() {
      return fieldSetFlags()[37];
    }
    
    /** Clears the value of the 'RUN_DATE' field */
    public com.equifax.fabric.uk.purposing.companies.paymentprofile.PaymentProfileFull.Builder clearRUNDATE() {
      RUN_DATE = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    @Override
    public PaymentProfileFull build() {
      try {
        PaymentProfileFull record = new PaymentProfileFull();
        record.DATE = fieldSetFlags()[0] ? this.DATE : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.FLAG = fieldSetFlags()[1] ? this.FLAG : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.CURRENT_BALANCE = fieldSetFlags()[2] ? this.CURRENT_BALANCE : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.CURRENT_BALANCE_CREDIT_IND = fieldSetFlags()[3] ? this.CURRENT_BALANCE_CREDIT_IND : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.ORIGINAL_DEFAULT_BALANCE = fieldSetFlags()[4] ? this.ORIGINAL_DEFAULT_BALANCE : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.CREDIT_LIMIT = fieldSetFlags()[5] ? this.CREDIT_LIMIT : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.PAYMENT_AMOUNT = fieldSetFlags()[6] ? this.PAYMENT_AMOUNT : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.PREVIOUS_STATEMENT_BALANCE = fieldSetFlags()[7] ? this.PREVIOUS_STATEMENT_BALANCE : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.PAYMENT_CREDIT_IND = fieldSetFlags()[8] ? this.PAYMENT_CREDIT_IND : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.PROMOTION_ACTIVITY_FLAG = fieldSetFlags()[9] ? this.PROMOTION_ACTIVITY_FLAG : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.VALUE_OF_CASH_ADVANCES = fieldSetFlags()[10] ? this.VALUE_OF_CASH_ADVANCES : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.NUMBER_OF_CASH_ADVANCES = fieldSetFlags()[11] ? this.NUMBER_OF_CASH_ADVANCES : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.AVERAGE_BALANCE = fieldSetFlags()[12] ? this.AVERAGE_BALANCE : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.AVERAGE_BALANCE_CREDIT_IND = fieldSetFlags()[13] ? this.AVERAGE_BALANCE_CREDIT_IND : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.MINIMUM_BALANCE = fieldSetFlags()[14] ? this.MINIMUM_BALANCE : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.MINIMUM_BALANCE_CREDIT_IND = fieldSetFlags()[15] ? this.MINIMUM_BALANCE_CREDIT_IND : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.MAXIMUM_BALANCE = fieldSetFlags()[16] ? this.MAXIMUM_BALANCE : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.MAXIMUM_BALANCE_CREDIT_IND = fieldSetFlags()[17] ? this.MAXIMUM_BALANCE_CREDIT_IND : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.CREDIT_TURNOVER = fieldSetFlags()[18] ? this.CREDIT_TURNOVER : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.CREDIT_TURNOVER_NET_GROSS = fieldSetFlags()[19] ? this.CREDIT_TURNOVER_NET_GROSS : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.DEBIT_TURNOVER = fieldSetFlags()[20] ? this.DEBIT_TURNOVER : (java.lang.CharSequence) defaultValue(fields()[20]);
        record.DEBIT_TURNOVER_NET_GROSS = fieldSetFlags()[21] ? this.DEBIT_TURNOVER_NET_GROSS : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.REJECTED_PAYMENTS = fieldSetFlags()[22] ? this.REJECTED_PAYMENTS : (java.lang.CharSequence) defaultValue(fields()[22]);
        record.MAX_DURATION_OF_EXCESS = fieldSetFlags()[23] ? this.MAX_DURATION_OF_EXCESS : (java.lang.CharSequence) defaultValue(fields()[23]);
        record.SPECIAL_INSTRUCTION_IND = fieldSetFlags()[24] ? this.SPECIAL_INSTRUCTION_IND : (java.lang.CharSequence) defaultValue(fields()[24]);
        record.ACCOUNT_TYPE = fieldSetFlags()[25] ? this.ACCOUNT_TYPE : (java.lang.CharSequence) defaultValue(fields()[25]);
        record.CLOSE_DATE = fieldSetFlags()[26] ? this.CLOSE_DATE : (java.lang.CharSequence) defaultValue(fields()[26]);
        record.DEFAULT_SATISFACTION_DATE = fieldSetFlags()[27] ? this.DEFAULT_SATISFACTION_DATE : (java.lang.CharSequence) defaultValue(fields()[27]);
        record.FLAG_SETTINGS = fieldSetFlags()[28] ? this.FLAG_SETTINGS : (java.lang.CharSequence) defaultValue(fields()[28]);
        record.TRF_TO_CONSOLIDATED_DEBT_ACNT = fieldSetFlags()[29] ? this.TRF_TO_CONSOLIDATED_DEBT_ACNT : (java.lang.CharSequence) defaultValue(fields()[29]);
        record.REPAYMENT_PERIOD = fieldSetFlags()[30] ? this.REPAYMENT_PERIOD : (java.lang.CharSequence) defaultValue(fields()[30]);
        record.MONTHLY_PAYMENT = fieldSetFlags()[31] ? this.MONTHLY_PAYMENT : (java.lang.CharSequence) defaultValue(fields()[31]);
        record.PAYMENT_FREQUENCY = fieldSetFlags()[32] ? this.PAYMENT_FREQUENCY : (java.lang.CharSequence) defaultValue(fields()[32]);
        record.FILE_CREATION_DATE = fieldSetFlags()[33] ? this.FILE_CREATION_DATE : (java.lang.CharSequence) defaultValue(fields()[33]);
        record.USABLE_STATUS_ID = fieldSetFlags()[34] ? this.USABLE_STATUS_ID : (java.lang.CharSequence) defaultValue(fields()[34]);
        record.REJECTION_FLAG = fieldSetFlags()[35] ? this.REJECTION_FLAG : (java.lang.CharSequence) defaultValue(fields()[35]);
        record.PREVIOUS_STATEMENT_BALANCE_IND = fieldSetFlags()[36] ? this.PREVIOUS_STATEMENT_BALANCE_IND : (java.lang.CharSequence) defaultValue(fields()[36]);
        record.RUN_DATE = fieldSetFlags()[37] ? this.RUN_DATE : (java.lang.CharSequence) defaultValue(fields()[37]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
