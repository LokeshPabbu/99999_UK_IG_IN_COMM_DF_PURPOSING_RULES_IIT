/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.purposing.companygroupstructure;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Shares extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Shares\",\"namespace\":\"com.equifax.fabric.uk.purposing.companygroupstructure\",\"fields\":[{\"name\":\"typeOfShare\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"numberOfShares\",\"type\":[\"null\",\"float\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"shareCurrency\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"joint\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"totalValueOfShares\",\"type\":[\"null\",\"float\"],\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence typeOfShare;
  @Deprecated public java.lang.Float numberOfShares;
  @Deprecated public java.lang.CharSequence shareCurrency;
  @Deprecated public java.lang.CharSequence joint;
  @Deprecated public java.lang.Float totalValueOfShares;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Shares() {}

  /**
   * All-args constructor.
   */
  public Shares(java.lang.CharSequence typeOfShare, java.lang.Float numberOfShares, java.lang.CharSequence shareCurrency, java.lang.CharSequence joint, java.lang.Float totalValueOfShares) {
    this.typeOfShare = typeOfShare;
    this.numberOfShares = numberOfShares;
    this.shareCurrency = shareCurrency;
    this.joint = joint;
    this.totalValueOfShares = totalValueOfShares;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return typeOfShare;
    case 1: return numberOfShares;
    case 2: return shareCurrency;
    case 3: return joint;
    case 4: return totalValueOfShares;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: typeOfShare = (java.lang.CharSequence)value$; break;
    case 1: numberOfShares = (java.lang.Float)value$; break;
    case 2: shareCurrency = (java.lang.CharSequence)value$; break;
    case 3: joint = (java.lang.CharSequence)value$; break;
    case 4: totalValueOfShares = (java.lang.Float)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'typeOfShare' field.
   */
  public java.lang.CharSequence getTypeOfShare() {
    return typeOfShare;
  }

  /**
   * Sets the value of the 'typeOfShare' field.
   * @param value the value to set.
   */
  public void setTypeOfShare(java.lang.CharSequence value) {
    this.typeOfShare = value;
  }

  /**
   * Gets the value of the 'numberOfShares' field.
   */
  public java.lang.Float getNumberOfShares() {
    return numberOfShares;
  }

  /**
   * Sets the value of the 'numberOfShares' field.
   * @param value the value to set.
   */
  public void setNumberOfShares(java.lang.Float value) {
    this.numberOfShares = value;
  }

  /**
   * Gets the value of the 'shareCurrency' field.
   */
  public java.lang.CharSequence getShareCurrency() {
    return shareCurrency;
  }

  /**
   * Sets the value of the 'shareCurrency' field.
   * @param value the value to set.
   */
  public void setShareCurrency(java.lang.CharSequence value) {
    this.shareCurrency = value;
  }

  /**
   * Gets the value of the 'joint' field.
   */
  public java.lang.CharSequence getJoint() {
    return joint;
  }

  /**
   * Sets the value of the 'joint' field.
   * @param value the value to set.
   */
  public void setJoint(java.lang.CharSequence value) {
    this.joint = value;
  }

  /**
   * Gets the value of the 'totalValueOfShares' field.
   */
  public java.lang.Float getTotalValueOfShares() {
    return totalValueOfShares;
  }

  /**
   * Sets the value of the 'totalValueOfShares' field.
   * @param value the value to set.
   */
  public void setTotalValueOfShares(java.lang.Float value) {
    this.totalValueOfShares = value;
  }

  /** Creates a new Shares RecordBuilder */
  public static com.equifax.fabric.uk.purposing.companygroupstructure.Shares.Builder newBuilder() {
    return new com.equifax.fabric.uk.purposing.companygroupstructure.Shares.Builder();
  }
  
  /** Creates a new Shares RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.purposing.companygroupstructure.Shares.Builder newBuilder(com.equifax.fabric.uk.purposing.companygroupstructure.Shares.Builder other) {
    return new com.equifax.fabric.uk.purposing.companygroupstructure.Shares.Builder(other);
  }
  
  /** Creates a new Shares RecordBuilder by copying an existing Shares instance */
  public static com.equifax.fabric.uk.purposing.companygroupstructure.Shares.Builder newBuilder(com.equifax.fabric.uk.purposing.companygroupstructure.Shares other) {
    return new com.equifax.fabric.uk.purposing.companygroupstructure.Shares.Builder(other);
  }
  
  /**
   * RecordBuilder for Shares instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Shares>
    implements org.apache.avro.data.RecordBuilder<Shares> {

    private java.lang.CharSequence typeOfShare;
    private java.lang.Float numberOfShares;
    private java.lang.CharSequence shareCurrency;
    private java.lang.CharSequence joint;
    private java.lang.Float totalValueOfShares;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.purposing.companygroupstructure.Shares.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.purposing.companygroupstructure.Shares.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.typeOfShare)) {
        this.typeOfShare = data().deepCopy(fields()[0].schema(), other.typeOfShare);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.numberOfShares)) {
        this.numberOfShares = data().deepCopy(fields()[1].schema(), other.numberOfShares);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.shareCurrency)) {
        this.shareCurrency = data().deepCopy(fields()[2].schema(), other.shareCurrency);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.joint)) {
        this.joint = data().deepCopy(fields()[3].schema(), other.joint);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.totalValueOfShares)) {
        this.totalValueOfShares = data().deepCopy(fields()[4].schema(), other.totalValueOfShares);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Shares instance */
    private Builder(com.equifax.fabric.uk.purposing.companygroupstructure.Shares other) {
            super(com.equifax.fabric.uk.purposing.companygroupstructure.Shares.SCHEMA$);
      if (isValidValue(fields()[0], other.typeOfShare)) {
        this.typeOfShare = data().deepCopy(fields()[0].schema(), other.typeOfShare);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.numberOfShares)) {
        this.numberOfShares = data().deepCopy(fields()[1].schema(), other.numberOfShares);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.shareCurrency)) {
        this.shareCurrency = data().deepCopy(fields()[2].schema(), other.shareCurrency);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.joint)) {
        this.joint = data().deepCopy(fields()[3].schema(), other.joint);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.totalValueOfShares)) {
        this.totalValueOfShares = data().deepCopy(fields()[4].schema(), other.totalValueOfShares);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'typeOfShare' field */
    public java.lang.CharSequence getTypeOfShare() {
      return typeOfShare;
    }
    
    /** Sets the value of the 'typeOfShare' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shares.Builder setTypeOfShare(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.typeOfShare = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'typeOfShare' field has been set */
    public boolean hasTypeOfShare() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'typeOfShare' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shares.Builder clearTypeOfShare() {
      typeOfShare = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'numberOfShares' field */
    public java.lang.Float getNumberOfShares() {
      return numberOfShares;
    }
    
    /** Sets the value of the 'numberOfShares' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shares.Builder setNumberOfShares(java.lang.Float value) {
      validate(fields()[1], value);
      this.numberOfShares = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'numberOfShares' field has been set */
    public boolean hasNumberOfShares() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'numberOfShares' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shares.Builder clearNumberOfShares() {
      numberOfShares = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'shareCurrency' field */
    public java.lang.CharSequence getShareCurrency() {
      return shareCurrency;
    }
    
    /** Sets the value of the 'shareCurrency' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shares.Builder setShareCurrency(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.shareCurrency = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'shareCurrency' field has been set */
    public boolean hasShareCurrency() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'shareCurrency' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shares.Builder clearShareCurrency() {
      shareCurrency = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'joint' field */
    public java.lang.CharSequence getJoint() {
      return joint;
    }
    
    /** Sets the value of the 'joint' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shares.Builder setJoint(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.joint = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'joint' field has been set */
    public boolean hasJoint() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'joint' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shares.Builder clearJoint() {
      joint = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'totalValueOfShares' field */
    public java.lang.Float getTotalValueOfShares() {
      return totalValueOfShares;
    }
    
    /** Sets the value of the 'totalValueOfShares' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shares.Builder setTotalValueOfShares(java.lang.Float value) {
      validate(fields()[4], value);
      this.totalValueOfShares = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'totalValueOfShares' field has been set */
    public boolean hasTotalValueOfShares() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'totalValueOfShares' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shares.Builder clearTotalValueOfShares() {
      totalValueOfShares = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public Shares build() {
      try {
        Shares record = new Shares();
        record.typeOfShare = fieldSetFlags()[0] ? this.typeOfShare : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.numberOfShares = fieldSetFlags()[1] ? this.numberOfShares : (java.lang.Float) defaultValue(fields()[1]);
        record.shareCurrency = fieldSetFlags()[2] ? this.shareCurrency : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.joint = fieldSetFlags()[3] ? this.joint : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.totalValueOfShares = fieldSetFlags()[4] ? this.totalValueOfShares : (java.lang.Float) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
