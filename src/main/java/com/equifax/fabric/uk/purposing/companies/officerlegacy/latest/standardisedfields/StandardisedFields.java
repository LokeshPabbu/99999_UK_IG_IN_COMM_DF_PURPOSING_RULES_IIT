/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class StandardisedFields extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StandardisedFields\",\"namespace\":\"com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields\",\"fields\":[{\"name\":\"PERSON_TITLE\",\"type\":[\"null\",\"string\"],\"doc\":\"Standarized person title\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_FIRST_NAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Standarized old person first name\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_SURNAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person surname\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_HONOURS\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person honours\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_NATIONALITY\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person address nationality\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_OCCUPATION\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person occupation\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_OLD_ADDRESS_LINE1\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  old person address line1\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_OLD_ADDRESS_LINE2\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  old person address line2\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_POSTTOWN\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person address posttown\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_COUNTY\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person address county\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_COUNTRY\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person address country\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Standarized person title */
  @Deprecated public java.lang.CharSequence PERSON_TITLE;
  /** Standarized old person first name */
  @Deprecated public java.lang.CharSequence PERSON_FIRST_NAME;
  /** Standardised  person surname */
  @Deprecated public java.lang.CharSequence PERSON_SURNAME;
  /** Standardised  person honours */
  @Deprecated public java.lang.CharSequence PERSON_HONOURS;
  /** Standardised  person address nationality */
  @Deprecated public java.lang.CharSequence PERSON_NATIONALITY;
  /** Standardised  person occupation */
  @Deprecated public java.lang.CharSequence PERSON_OCCUPATION;
  /** Standardised  old person address line1 */
  @Deprecated public java.lang.CharSequence PERSON_OLD_ADDRESS_LINE1;
  /** Standardised  old person address line2 */
  @Deprecated public java.lang.CharSequence PERSON_OLD_ADDRESS_LINE2;
  /** Standardised  person address posttown */
  @Deprecated public java.lang.CharSequence PERSON_POSTTOWN;
  /** Standardised  person address county */
  @Deprecated public java.lang.CharSequence PERSON_COUNTY;
  /** Standardised  person address country */
  @Deprecated public java.lang.CharSequence PERSON_COUNTRY;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public StandardisedFields() {}

  /**
   * All-args constructor.
   */
  public StandardisedFields(java.lang.CharSequence PERSON_TITLE, java.lang.CharSequence PERSON_FIRST_NAME, java.lang.CharSequence PERSON_SURNAME, java.lang.CharSequence PERSON_HONOURS, java.lang.CharSequence PERSON_NATIONALITY, java.lang.CharSequence PERSON_OCCUPATION, java.lang.CharSequence PERSON_OLD_ADDRESS_LINE1, java.lang.CharSequence PERSON_OLD_ADDRESS_LINE2, java.lang.CharSequence PERSON_POSTTOWN, java.lang.CharSequence PERSON_COUNTY, java.lang.CharSequence PERSON_COUNTRY) {
    this.PERSON_TITLE = PERSON_TITLE;
    this.PERSON_FIRST_NAME = PERSON_FIRST_NAME;
    this.PERSON_SURNAME = PERSON_SURNAME;
    this.PERSON_HONOURS = PERSON_HONOURS;
    this.PERSON_NATIONALITY = PERSON_NATIONALITY;
    this.PERSON_OCCUPATION = PERSON_OCCUPATION;
    this.PERSON_OLD_ADDRESS_LINE1 = PERSON_OLD_ADDRESS_LINE1;
    this.PERSON_OLD_ADDRESS_LINE2 = PERSON_OLD_ADDRESS_LINE2;
    this.PERSON_POSTTOWN = PERSON_POSTTOWN;
    this.PERSON_COUNTY = PERSON_COUNTY;
    this.PERSON_COUNTRY = PERSON_COUNTRY;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return PERSON_TITLE;
    case 1: return PERSON_FIRST_NAME;
    case 2: return PERSON_SURNAME;
    case 3: return PERSON_HONOURS;
    case 4: return PERSON_NATIONALITY;
    case 5: return PERSON_OCCUPATION;
    case 6: return PERSON_OLD_ADDRESS_LINE1;
    case 7: return PERSON_OLD_ADDRESS_LINE2;
    case 8: return PERSON_POSTTOWN;
    case 9: return PERSON_COUNTY;
    case 10: return PERSON_COUNTRY;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: PERSON_TITLE = (java.lang.CharSequence)value$; break;
    case 1: PERSON_FIRST_NAME = (java.lang.CharSequence)value$; break;
    case 2: PERSON_SURNAME = (java.lang.CharSequence)value$; break;
    case 3: PERSON_HONOURS = (java.lang.CharSequence)value$; break;
    case 4: PERSON_NATIONALITY = (java.lang.CharSequence)value$; break;
    case 5: PERSON_OCCUPATION = (java.lang.CharSequence)value$; break;
    case 6: PERSON_OLD_ADDRESS_LINE1 = (java.lang.CharSequence)value$; break;
    case 7: PERSON_OLD_ADDRESS_LINE2 = (java.lang.CharSequence)value$; break;
    case 8: PERSON_POSTTOWN = (java.lang.CharSequence)value$; break;
    case 9: PERSON_COUNTY = (java.lang.CharSequence)value$; break;
    case 10: PERSON_COUNTRY = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'PERSON_TITLE' field.
   * Standarized person title   */
  public java.lang.CharSequence getPERSONTITLE() {
    return PERSON_TITLE;
  }

  /**
   * Sets the value of the 'PERSON_TITLE' field.
   * Standarized person title   * @param value the value to set.
   */
  public void setPERSONTITLE(java.lang.CharSequence value) {
    this.PERSON_TITLE = value;
  }

  /**
   * Gets the value of the 'PERSON_FIRST_NAME' field.
   * Standarized old person first name   */
  public java.lang.CharSequence getPERSONFIRSTNAME() {
    return PERSON_FIRST_NAME;
  }

  /**
   * Sets the value of the 'PERSON_FIRST_NAME' field.
   * Standarized old person first name   * @param value the value to set.
   */
  public void setPERSONFIRSTNAME(java.lang.CharSequence value) {
    this.PERSON_FIRST_NAME = value;
  }

  /**
   * Gets the value of the 'PERSON_SURNAME' field.
   * Standardised  person surname   */
  public java.lang.CharSequence getPERSONSURNAME() {
    return PERSON_SURNAME;
  }

  /**
   * Sets the value of the 'PERSON_SURNAME' field.
   * Standardised  person surname   * @param value the value to set.
   */
  public void setPERSONSURNAME(java.lang.CharSequence value) {
    this.PERSON_SURNAME = value;
  }

  /**
   * Gets the value of the 'PERSON_HONOURS' field.
   * Standardised  person honours   */
  public java.lang.CharSequence getPERSONHONOURS() {
    return PERSON_HONOURS;
  }

  /**
   * Sets the value of the 'PERSON_HONOURS' field.
   * Standardised  person honours   * @param value the value to set.
   */
  public void setPERSONHONOURS(java.lang.CharSequence value) {
    this.PERSON_HONOURS = value;
  }

  /**
   * Gets the value of the 'PERSON_NATIONALITY' field.
   * Standardised  person address nationality   */
  public java.lang.CharSequence getPERSONNATIONALITY() {
    return PERSON_NATIONALITY;
  }

  /**
   * Sets the value of the 'PERSON_NATIONALITY' field.
   * Standardised  person address nationality   * @param value the value to set.
   */
  public void setPERSONNATIONALITY(java.lang.CharSequence value) {
    this.PERSON_NATIONALITY = value;
  }

  /**
   * Gets the value of the 'PERSON_OCCUPATION' field.
   * Standardised  person occupation   */
  public java.lang.CharSequence getPERSONOCCUPATION() {
    return PERSON_OCCUPATION;
  }

  /**
   * Sets the value of the 'PERSON_OCCUPATION' field.
   * Standardised  person occupation   * @param value the value to set.
   */
  public void setPERSONOCCUPATION(java.lang.CharSequence value) {
    this.PERSON_OCCUPATION = value;
  }

  /**
   * Gets the value of the 'PERSON_OLD_ADDRESS_LINE1' field.
   * Standardised  old person address line1   */
  public java.lang.CharSequence getPERSONOLDADDRESSLINE1() {
    return PERSON_OLD_ADDRESS_LINE1;
  }

  /**
   * Sets the value of the 'PERSON_OLD_ADDRESS_LINE1' field.
   * Standardised  old person address line1   * @param value the value to set.
   */
  public void setPERSONOLDADDRESSLINE1(java.lang.CharSequence value) {
    this.PERSON_OLD_ADDRESS_LINE1 = value;
  }

  /**
   * Gets the value of the 'PERSON_OLD_ADDRESS_LINE2' field.
   * Standardised  old person address line2   */
  public java.lang.CharSequence getPERSONOLDADDRESSLINE2() {
    return PERSON_OLD_ADDRESS_LINE2;
  }

  /**
   * Sets the value of the 'PERSON_OLD_ADDRESS_LINE2' field.
   * Standardised  old person address line2   * @param value the value to set.
   */
  public void setPERSONOLDADDRESSLINE2(java.lang.CharSequence value) {
    this.PERSON_OLD_ADDRESS_LINE2 = value;
  }

  /**
   * Gets the value of the 'PERSON_POSTTOWN' field.
   * Standardised  person address posttown   */
  public java.lang.CharSequence getPERSONPOSTTOWN() {
    return PERSON_POSTTOWN;
  }

  /**
   * Sets the value of the 'PERSON_POSTTOWN' field.
   * Standardised  person address posttown   * @param value the value to set.
   */
  public void setPERSONPOSTTOWN(java.lang.CharSequence value) {
    this.PERSON_POSTTOWN = value;
  }

  /**
   * Gets the value of the 'PERSON_COUNTY' field.
   * Standardised  person address county   */
  public java.lang.CharSequence getPERSONCOUNTY() {
    return PERSON_COUNTY;
  }

  /**
   * Sets the value of the 'PERSON_COUNTY' field.
   * Standardised  person address county   * @param value the value to set.
   */
  public void setPERSONCOUNTY(java.lang.CharSequence value) {
    this.PERSON_COUNTY = value;
  }

  /**
   * Gets the value of the 'PERSON_COUNTRY' field.
   * Standardised  person address country   */
  public java.lang.CharSequence getPERSONCOUNTRY() {
    return PERSON_COUNTRY;
  }

  /**
   * Sets the value of the 'PERSON_COUNTRY' field.
   * Standardised  person address country   * @param value the value to set.
   */
  public void setPERSONCOUNTRY(java.lang.CharSequence value) {
    this.PERSON_COUNTRY = value;
  }

  /** Creates a new StandardisedFields RecordBuilder */
  public static com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder newBuilder() {
    return new com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder();
  }
  
  /** Creates a new StandardisedFields RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder newBuilder(com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder other) {
    return new com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder(other);
  }
  
  /** Creates a new StandardisedFields RecordBuilder by copying an existing StandardisedFields instance */
  public static com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder newBuilder(com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields other) {
    return new com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder(other);
  }
  
  /**
   * RecordBuilder for StandardisedFields instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StandardisedFields>
    implements org.apache.avro.data.RecordBuilder<StandardisedFields> {

    private java.lang.CharSequence PERSON_TITLE;
    private java.lang.CharSequence PERSON_FIRST_NAME;
    private java.lang.CharSequence PERSON_SURNAME;
    private java.lang.CharSequence PERSON_HONOURS;
    private java.lang.CharSequence PERSON_NATIONALITY;
    private java.lang.CharSequence PERSON_OCCUPATION;
    private java.lang.CharSequence PERSON_OLD_ADDRESS_LINE1;
    private java.lang.CharSequence PERSON_OLD_ADDRESS_LINE2;
    private java.lang.CharSequence PERSON_POSTTOWN;
    private java.lang.CharSequence PERSON_COUNTY;
    private java.lang.CharSequence PERSON_COUNTRY;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.PERSON_TITLE)) {
        this.PERSON_TITLE = data().deepCopy(fields()[0].schema(), other.PERSON_TITLE);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.PERSON_FIRST_NAME)) {
        this.PERSON_FIRST_NAME = data().deepCopy(fields()[1].schema(), other.PERSON_FIRST_NAME);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.PERSON_SURNAME)) {
        this.PERSON_SURNAME = data().deepCopy(fields()[2].schema(), other.PERSON_SURNAME);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.PERSON_HONOURS)) {
        this.PERSON_HONOURS = data().deepCopy(fields()[3].schema(), other.PERSON_HONOURS);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.PERSON_NATIONALITY)) {
        this.PERSON_NATIONALITY = data().deepCopy(fields()[4].schema(), other.PERSON_NATIONALITY);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.PERSON_OCCUPATION)) {
        this.PERSON_OCCUPATION = data().deepCopy(fields()[5].schema(), other.PERSON_OCCUPATION);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.PERSON_OLD_ADDRESS_LINE1)) {
        this.PERSON_OLD_ADDRESS_LINE1 = data().deepCopy(fields()[6].schema(), other.PERSON_OLD_ADDRESS_LINE1);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.PERSON_OLD_ADDRESS_LINE2)) {
        this.PERSON_OLD_ADDRESS_LINE2 = data().deepCopy(fields()[7].schema(), other.PERSON_OLD_ADDRESS_LINE2);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.PERSON_POSTTOWN)) {
        this.PERSON_POSTTOWN = data().deepCopy(fields()[8].schema(), other.PERSON_POSTTOWN);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.PERSON_COUNTY)) {
        this.PERSON_COUNTY = data().deepCopy(fields()[9].schema(), other.PERSON_COUNTY);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.PERSON_COUNTRY)) {
        this.PERSON_COUNTRY = data().deepCopy(fields()[10].schema(), other.PERSON_COUNTRY);
        fieldSetFlags()[10] = true;
      }
    }
    
    /** Creates a Builder by copying an existing StandardisedFields instance */
    private Builder(com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields other) {
            super(com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.SCHEMA$);
      if (isValidValue(fields()[0], other.PERSON_TITLE)) {
        this.PERSON_TITLE = data().deepCopy(fields()[0].schema(), other.PERSON_TITLE);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.PERSON_FIRST_NAME)) {
        this.PERSON_FIRST_NAME = data().deepCopy(fields()[1].schema(), other.PERSON_FIRST_NAME);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.PERSON_SURNAME)) {
        this.PERSON_SURNAME = data().deepCopy(fields()[2].schema(), other.PERSON_SURNAME);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.PERSON_HONOURS)) {
        this.PERSON_HONOURS = data().deepCopy(fields()[3].schema(), other.PERSON_HONOURS);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.PERSON_NATIONALITY)) {
        this.PERSON_NATIONALITY = data().deepCopy(fields()[4].schema(), other.PERSON_NATIONALITY);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.PERSON_OCCUPATION)) {
        this.PERSON_OCCUPATION = data().deepCopy(fields()[5].schema(), other.PERSON_OCCUPATION);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.PERSON_OLD_ADDRESS_LINE1)) {
        this.PERSON_OLD_ADDRESS_LINE1 = data().deepCopy(fields()[6].schema(), other.PERSON_OLD_ADDRESS_LINE1);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.PERSON_OLD_ADDRESS_LINE2)) {
        this.PERSON_OLD_ADDRESS_LINE2 = data().deepCopy(fields()[7].schema(), other.PERSON_OLD_ADDRESS_LINE2);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.PERSON_POSTTOWN)) {
        this.PERSON_POSTTOWN = data().deepCopy(fields()[8].schema(), other.PERSON_POSTTOWN);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.PERSON_COUNTY)) {
        this.PERSON_COUNTY = data().deepCopy(fields()[9].schema(), other.PERSON_COUNTY);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.PERSON_COUNTRY)) {
        this.PERSON_COUNTRY = data().deepCopy(fields()[10].schema(), other.PERSON_COUNTRY);
        fieldSetFlags()[10] = true;
      }
    }

    /** Gets the value of the 'PERSON_TITLE' field */
    public java.lang.CharSequence getPERSONTITLE() {
      return PERSON_TITLE;
    }
    
    /** Sets the value of the 'PERSON_TITLE' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder setPERSONTITLE(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.PERSON_TITLE = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_TITLE' field has been set */
    public boolean hasPERSONTITLE() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'PERSON_TITLE' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder clearPERSONTITLE() {
      PERSON_TITLE = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_FIRST_NAME' field */
    public java.lang.CharSequence getPERSONFIRSTNAME() {
      return PERSON_FIRST_NAME;
    }
    
    /** Sets the value of the 'PERSON_FIRST_NAME' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder setPERSONFIRSTNAME(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.PERSON_FIRST_NAME = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_FIRST_NAME' field has been set */
    public boolean hasPERSONFIRSTNAME() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'PERSON_FIRST_NAME' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder clearPERSONFIRSTNAME() {
      PERSON_FIRST_NAME = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_SURNAME' field */
    public java.lang.CharSequence getPERSONSURNAME() {
      return PERSON_SURNAME;
    }
    
    /** Sets the value of the 'PERSON_SURNAME' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder setPERSONSURNAME(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.PERSON_SURNAME = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_SURNAME' field has been set */
    public boolean hasPERSONSURNAME() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'PERSON_SURNAME' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder clearPERSONSURNAME() {
      PERSON_SURNAME = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_HONOURS' field */
    public java.lang.CharSequence getPERSONHONOURS() {
      return PERSON_HONOURS;
    }
    
    /** Sets the value of the 'PERSON_HONOURS' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder setPERSONHONOURS(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.PERSON_HONOURS = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_HONOURS' field has been set */
    public boolean hasPERSONHONOURS() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'PERSON_HONOURS' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder clearPERSONHONOURS() {
      PERSON_HONOURS = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_NATIONALITY' field */
    public java.lang.CharSequence getPERSONNATIONALITY() {
      return PERSON_NATIONALITY;
    }
    
    /** Sets the value of the 'PERSON_NATIONALITY' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder setPERSONNATIONALITY(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.PERSON_NATIONALITY = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_NATIONALITY' field has been set */
    public boolean hasPERSONNATIONALITY() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'PERSON_NATIONALITY' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder clearPERSONNATIONALITY() {
      PERSON_NATIONALITY = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_OCCUPATION' field */
    public java.lang.CharSequence getPERSONOCCUPATION() {
      return PERSON_OCCUPATION;
    }
    
    /** Sets the value of the 'PERSON_OCCUPATION' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder setPERSONOCCUPATION(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.PERSON_OCCUPATION = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_OCCUPATION' field has been set */
    public boolean hasPERSONOCCUPATION() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'PERSON_OCCUPATION' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder clearPERSONOCCUPATION() {
      PERSON_OCCUPATION = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_OLD_ADDRESS_LINE1' field */
    public java.lang.CharSequence getPERSONOLDADDRESSLINE1() {
      return PERSON_OLD_ADDRESS_LINE1;
    }
    
    /** Sets the value of the 'PERSON_OLD_ADDRESS_LINE1' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder setPERSONOLDADDRESSLINE1(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.PERSON_OLD_ADDRESS_LINE1 = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_OLD_ADDRESS_LINE1' field has been set */
    public boolean hasPERSONOLDADDRESSLINE1() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'PERSON_OLD_ADDRESS_LINE1' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder clearPERSONOLDADDRESSLINE1() {
      PERSON_OLD_ADDRESS_LINE1 = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_OLD_ADDRESS_LINE2' field */
    public java.lang.CharSequence getPERSONOLDADDRESSLINE2() {
      return PERSON_OLD_ADDRESS_LINE2;
    }
    
    /** Sets the value of the 'PERSON_OLD_ADDRESS_LINE2' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder setPERSONOLDADDRESSLINE2(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.PERSON_OLD_ADDRESS_LINE2 = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_OLD_ADDRESS_LINE2' field has been set */
    public boolean hasPERSONOLDADDRESSLINE2() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'PERSON_OLD_ADDRESS_LINE2' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder clearPERSONOLDADDRESSLINE2() {
      PERSON_OLD_ADDRESS_LINE2 = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_POSTTOWN' field */
    public java.lang.CharSequence getPERSONPOSTTOWN() {
      return PERSON_POSTTOWN;
    }
    
    /** Sets the value of the 'PERSON_POSTTOWN' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder setPERSONPOSTTOWN(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.PERSON_POSTTOWN = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_POSTTOWN' field has been set */
    public boolean hasPERSONPOSTTOWN() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'PERSON_POSTTOWN' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder clearPERSONPOSTTOWN() {
      PERSON_POSTTOWN = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_COUNTY' field */
    public java.lang.CharSequence getPERSONCOUNTY() {
      return PERSON_COUNTY;
    }
    
    /** Sets the value of the 'PERSON_COUNTY' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder setPERSONCOUNTY(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.PERSON_COUNTY = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_COUNTY' field has been set */
    public boolean hasPERSONCOUNTY() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'PERSON_COUNTY' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder clearPERSONCOUNTY() {
      PERSON_COUNTY = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_COUNTRY' field */
    public java.lang.CharSequence getPERSONCOUNTRY() {
      return PERSON_COUNTRY;
    }
    
    /** Sets the value of the 'PERSON_COUNTRY' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder setPERSONCOUNTRY(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.PERSON_COUNTRY = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_COUNTRY' field has been set */
    public boolean hasPERSONCOUNTRY() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'PERSON_COUNTRY' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.latest.standardisedfields.StandardisedFields.Builder clearPERSONCOUNTRY() {
      PERSON_COUNTRY = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    public StandardisedFields build() {
      try {
        StandardisedFields record = new StandardisedFields();
        record.PERSON_TITLE = fieldSetFlags()[0] ? this.PERSON_TITLE : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.PERSON_FIRST_NAME = fieldSetFlags()[1] ? this.PERSON_FIRST_NAME : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.PERSON_SURNAME = fieldSetFlags()[2] ? this.PERSON_SURNAME : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.PERSON_HONOURS = fieldSetFlags()[3] ? this.PERSON_HONOURS : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.PERSON_NATIONALITY = fieldSetFlags()[4] ? this.PERSON_NATIONALITY : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.PERSON_OCCUPATION = fieldSetFlags()[5] ? this.PERSON_OCCUPATION : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.PERSON_OLD_ADDRESS_LINE1 = fieldSetFlags()[6] ? this.PERSON_OLD_ADDRESS_LINE1 : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.PERSON_OLD_ADDRESS_LINE2 = fieldSetFlags()[7] ? this.PERSON_OLD_ADDRESS_LINE2 : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.PERSON_POSTTOWN = fieldSetFlags()[8] ? this.PERSON_POSTTOWN : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.PERSON_COUNTY = fieldSetFlags()[9] ? this.PERSON_COUNTY : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.PERSON_COUNTRY = fieldSetFlags()[10] ? this.PERSON_COUNTRY : (java.lang.CharSequence) defaultValue(fields()[10]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
