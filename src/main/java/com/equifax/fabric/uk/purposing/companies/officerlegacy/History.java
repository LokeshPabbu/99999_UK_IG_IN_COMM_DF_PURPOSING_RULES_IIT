/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.purposing.companies.officerlegacy;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class History extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"History\",\"namespace\":\"com.equifax.fabric.uk.purposing.companies.officerlegacy\",\"fields\":[{\"name\":\"purposingHeader\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PurposingHeader\",\"namespace\":\"com.equifax.fabric.uk.purposing.wizzards.header\",\"fields\":[{\"name\":\"dateReported\",\"type\":[\"null\",\"long\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"recordUuid\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"matchKey\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"additionalInfo\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"rawfields\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"RawFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerlegacy.rawFields\",\"fields\":[{\"name\":\"COMPANY_REGISTERED_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Company Number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_RECORD_TYPE\",\"type\":[\"null\",\"string\"],\"doc\":\"Person Record Type\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_APPOINTMENT_DATE_ORIGIN\",\"type\":[\"null\",\"string\"],\"doc\":\"Appointment Origin date\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_RESIGNATION_DATE_ORIGIN\",\"type\":[\"null\",\"string\"],\"doc\":\"Resignation Origin date\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_CORRECTION_INDICATOR\",\"type\":[\"null\",\"string\"],\"doc\":\"Correction indicator\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_CORPORATE_INDICATOR\",\"type\":[\"null\",\"string\"],\"doc\":\"Corporate indicator\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_FILLER_POS14\",\"type\":[\"null\",\"string\"],\"doc\":\"Filler\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_OLD_APPOINTMENT_TYPE\",\"type\":[\"null\",\"string\"],\"doc\":\"Old Appointment Type\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_NEW_APPOINTMENT_TYPE\",\"type\":[\"null\",\"string\"],\"doc\":\"New Appointment Type\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_OLD_PERSON_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Old Person Number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_NEW_PERSON_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"New Person Number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_PARTIAL_DATE_OF_BIRTH\",\"type\":[\"null\",\"string\"],\"doc\":\"Partial Date of birth\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_DATE_OF_BIRTH\",\"type\":[\"null\",\"string\"],\"doc\":\"Full Date of birth\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_OLD_POSTCODE\",\"type\":[\"null\",\"string\"],\"doc\":\"Old Postcode\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_NEW_POSTCODE\",\"type\":[\"null\",\"string\"],\"doc\":\"New Postcode\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_APPOINTMENT_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Appointment Date\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_RESIGNATION_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Resignation Date\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_CHANGE_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Change Date\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_UPDATE_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Update Date\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_VARIABLE_DATA_LENGTH\",\"type\":[\"null\",\"string\"],\"doc\":\"Filler\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_DETAILS_STRING\",\"type\":[\"null\",\"string\"],\"doc\":\"Delimited person detail contains title, forename, surname, honors and address lines\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"COMPANY_RECORD_TYPE\",\"type\":[\"null\",\"string\"],\"doc\":\"Company Record Type\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"COMPANY_STATUS\",\"type\":[\"null\",\"string\"],\"doc\":\"Company Status\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"COMPANY_FILLER_POS11\",\"type\":[\"null\",\"string\"],\"doc\":\"Filler\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"COMPANY_NUMBER_OF_OFFICERS\",\"type\":[\"null\",\"string\"],\"doc\":\"Number of Officers\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"COMPANY_NAME_LENGTH\",\"type\":[\"null\",\"string\"],\"doc\":\"Company Name Length\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"COMPANY_NAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Company Name \",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"FILE_NAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied file name\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"standardised\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"StandardisedFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerlegacy.standardisedFields\",\"fields\":[{\"name\":\"NEW_PERSON_NUMBER_PREFIX\",\"type\":[\"null\",\"string\"],\"doc\":\"First 8 bytes of PERSON_NEW_PERSON_NUMBER field, Unique number assigned to Director by Companies House\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"NEW_PERSON_NUMBER_SUFFIX\",\"type\":[\"null\",\"string\"],\"doc\":\"Last 4 bytes of PERSON_NEW_PERSON_NUMBER field, For each update from Companies House Suffix count gets incremented\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"OLD_PERSON_NUMBER_PREFIX\",\"type\":[\"null\",\"string\"],\"doc\":\"First 8 bytes of PERSON_OLD_PERSON_NUMBER field, Unique number assigned to Director by Companies House\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"OLD_PERSON_NUMBER_SUFFIX\",\"type\":[\"null\",\"string\"],\"doc\":\"Last 4 bytes of PERSON_OLD_PERSON_NUMBER field, For each update from Companies House Suffix count gets incremented\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PROCESSING_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Date on which data loaded on Data Fabric\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"FORMAT_OF_SUPPLY\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates format of supplied file\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"MIGRATION_FLAG\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates whether data is from live or Historical feed, H Indicates historical and <blank> Indicates live\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"TAPE_REFERENCE_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Unique number assigned by Companies House to each supplied file\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_TITLE\",\"type\":[\"null\",\"string\"],\"doc\":\"Standarized person title\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_FIRST_NAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Standarized old person first name\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_SURNAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person surname\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_HONOURS\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person honours\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_CARE_OF\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person address careof\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_PO_BOX\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person address pobox\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_ADDRESS_LINE1\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person address line1\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_ADDRESS_LINE2\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person address line2\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_POSTTOWN\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person address posttown\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_COUNTY\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person address county\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_COUNTRY\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person address country\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_OCCUPATION\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person occupation\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_NATIONALITY\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person address nationality\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_RESIDENTIAL_COUNT","RY\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  person residential country\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_OLD_TITLE\",\"type\":[\"null\",\"string\"],\"doc\":\"Standarized old person title\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_OLD_FIRST_NAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Standarized old person first name\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_OLD_SURNAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  old person surname\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_OLD_HONOURS\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  old person honours\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_OLD_CARE_OF\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  old person address careof\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_OLD_PO_BOX\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  old person address pobox\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_OLD_ADDRESS_LINE1\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  old person address line1\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_OLD_ADDRESS_LINE2\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  old person address line2\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_OLD_POSTTOWN\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  old person address posttown\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_OLD_COUNTY\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  old person address county\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_OLD_COUNTRY\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  old person address country\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_OLD_NATIONALITY\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  old person address nationality\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"PERSON_OLD_RESIDENTIAL_COUNTRY\",\"type\":[\"null\",\"string\"],\"doc\":\"Standardised  old person residential country\",\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"OFFICER_KEY\",\"type\":[\"null\",\"string\"],\"doc\":\"Officer key\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"entity\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"entityFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerlegacy.standardisedfields.entity\",\"fields\":[{\"name\":\"commercial\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"commercialFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerlegacy.standardisedfields.entity.commercial\",\"fields\":[{\"name\":\"legacyIds\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"legacyIdFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerlegacy.standardisedfields.entity.commercial.legacyIds\",\"fields\":[{\"name\":\"LEGACY_ID_COMPANY_REGISTERED_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Company Number\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"identifiers\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"identifierFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.officerlegacy.standardisedfields.entity.commercial.identifiers\",\"fields\":[{\"name\":\"NAME_BUSINESS_COMPANY_TYPE\",\"type\":[\"null\",\"string\"],\"doc\":\"Type of company - L for Limited\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_BUSINESS_VAT\",\"type\":[\"null\",\"string\"],\"doc\":\"VAT number field\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_BUSINESS_EMAIL\",\"type\":[\"null\",\"string\"],\"doc\":\"EMAIL ID field\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_DISSOLVED_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Dissolution Date field\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_INCORPORATION_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"Date of incorporation in CCYYMMDD format\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_UPDATE_DATE\",\"type\":[\"null\",\"string\"],\"doc\":\"This is load date and will be a system date \",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IDENTIFIER_DATA_SOURCE\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates source of data\",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"website\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Supplied Websites\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"phones\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Supplied Phone number\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"names\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Standardised Company Names as per Keying & Linking inputs\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"addresses\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"doc\":\"Standardised postcode as per Keying & Linking inputs\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"discoveryData\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"discoveryDataFields\",\"namespace\":\"com.equifax.fabric.uk.ingestion.companyregisterlegacy.standardisedfields.entity.commercial.discoveryData\",\"fields\":[{\"name\":\"DISCOVERY_ACCOUNT_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Account Number for INSIGHT_ACCOUNT \",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_CLIENT_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Client Number for INSIGHT_ACCOUNT and CCDS_ACCOUNT asset\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_FACILITY_NUMBER\",\"type\":[\"null\",\"string\"],\"doc\":\"Supplied Facility Number for CCDS_ACCOUNT\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_DEFENDENT_ID\",\"type\":[\"null\",\"string\"],\"doc\":\"Defendent ID for COURT_JUDGMENT\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_DRC_ID\",\"type\":[\"null\",\"string\"],\"doc\":\"DRC_ID for NONLIMITED_REGISTER\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_URN\",\"type\":[\"null\",\"string\"],\"doc\":\"Unique reference number of COMPANY_CIFAS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_CASE_ID\",\"type\":[\"null\",\"string\"],\"doc\":\"Case ID of COMPANY_CIFAS\",\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"DISCOVERY_CLN_BUSINESS_NAME\",\"type\":[\"null\",\"string\"],\"doc\":\"Cleansed business name \",\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null}]}],\"default\":null}]}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.equifax.fabric.uk.purposing.wizzards.header.PurposingHeader purposingHeader;
  @Deprecated public com.equifax.fabric.uk.ingestion.officerlegacy.rawFields.RawFields rawfields;
  @Deprecated public com.equifax.fabric.uk.ingestion.officerlegacy.standardisedfields.StandardisedFields standardised;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public History() {}

  /**
   * All-args constructor.
   */
  public History(com.equifax.fabric.uk.purposing.wizzards.header.PurposingHeader purposingHeader, com.equifax.fabric.uk.ingestion.officerlegacy.rawFields.RawFields rawfields, com.equifax.fabric.uk.ingestion.officerlegacy.standardisedfields.StandardisedFields standardised) {
    this.purposingHeader = purposingHeader;
    this.rawfields = rawfields;
    this.standardised = standardised;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return purposingHeader;
    case 1: return rawfields;
    case 2: return standardised;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: purposingHeader = (com.equifax.fabric.uk.purposing.wizzards.header.PurposingHeader)value$; break;
    case 1: rawfields = (com.equifax.fabric.uk.ingestion.officerlegacy.rawFields.RawFields)value$; break;
    case 2: standardised = (com.equifax.fabric.uk.ingestion.officerlegacy.standardisedfields.StandardisedFields)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'purposingHeader' field.
   */
  public com.equifax.fabric.uk.purposing.wizzards.header.PurposingHeader getPurposingHeader() {
    return purposingHeader;
  }

  /**
   * Sets the value of the 'purposingHeader' field.
   * @param value the value to set.
   */
  public void setPurposingHeader(com.equifax.fabric.uk.purposing.wizzards.header.PurposingHeader value) {
    this.purposingHeader = value;
  }

  /**
   * Gets the value of the 'rawfields' field.
   */
  public com.equifax.fabric.uk.ingestion.officerlegacy.rawFields.RawFields getRawfields() {
    return rawfields;
  }

  /**
   * Sets the value of the 'rawfields' field.
   * @param value the value to set.
   */
  public void setRawfields(com.equifax.fabric.uk.ingestion.officerlegacy.rawFields.RawFields value) {
    this.rawfields = value;
  }

  /**
   * Gets the value of the 'standardised' field.
   */
  public com.equifax.fabric.uk.ingestion.officerlegacy.standardisedfields.StandardisedFields getStandardised() {
    return standardised;
  }

  /**
   * Sets the value of the 'standardised' field.
   * @param value the value to set.
   */
  public void setStandardised(com.equifax.fabric.uk.ingestion.officerlegacy.standardisedfields.StandardisedFields value) {
    this.standardised = value;
  }

  /** Creates a new History RecordBuilder */
  public static com.equifax.fabric.uk.purposing.companies.officerlegacy.History.Builder newBuilder() {
    return new com.equifax.fabric.uk.purposing.companies.officerlegacy.History.Builder();
  }
  
  /** Creates a new History RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.purposing.companies.officerlegacy.History.Builder newBuilder(com.equifax.fabric.uk.purposing.companies.officerlegacy.History.Builder other) {
    return new com.equifax.fabric.uk.purposing.companies.officerlegacy.History.Builder(other);
  }
  
  /** Creates a new History RecordBuilder by copying an existing History instance */
  public static com.equifax.fabric.uk.purposing.companies.officerlegacy.History.Builder newBuilder(com.equifax.fabric.uk.purposing.companies.officerlegacy.History other) {
    return new com.equifax.fabric.uk.purposing.companies.officerlegacy.History.Builder(other);
  }
  
  /**
   * RecordBuilder for History instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<History>
    implements org.apache.avro.data.RecordBuilder<History> {

    private com.equifax.fabric.uk.purposing.wizzards.header.PurposingHeader purposingHeader;
    private com.equifax.fabric.uk.ingestion.officerlegacy.rawFields.RawFields rawfields;
    private com.equifax.fabric.uk.ingestion.officerlegacy.standardisedfields.StandardisedFields standardised;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.purposing.companies.officerlegacy.History.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.purposing.companies.officerlegacy.History.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.purposingHeader)) {
        this.purposingHeader = data().deepCopy(fields()[0].schema(), other.purposingHeader);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.rawfields)) {
        this.rawfields = data().deepCopy(fields()[1].schema(), other.rawfields);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.standardised)) {
        this.standardised = data().deepCopy(fields()[2].schema(), other.standardised);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing History instance */
    private Builder(com.equifax.fabric.uk.purposing.companies.officerlegacy.History other) {
            super(com.equifax.fabric.uk.purposing.companies.officerlegacy.History.SCHEMA$);
      if (isValidValue(fields()[0], other.purposingHeader)) {
        this.purposingHeader = data().deepCopy(fields()[0].schema(), other.purposingHeader);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.rawfields)) {
        this.rawfields = data().deepCopy(fields()[1].schema(), other.rawfields);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.standardised)) {
        this.standardised = data().deepCopy(fields()[2].schema(), other.standardised);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'purposingHeader' field */
    public com.equifax.fabric.uk.purposing.wizzards.header.PurposingHeader getPurposingHeader() {
      return purposingHeader;
    }
    
    /** Sets the value of the 'purposingHeader' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.History.Builder setPurposingHeader(com.equifax.fabric.uk.purposing.wizzards.header.PurposingHeader value) {
      validate(fields()[0], value);
      this.purposingHeader = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'purposingHeader' field has been set */
    public boolean hasPurposingHeader() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'purposingHeader' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.History.Builder clearPurposingHeader() {
      purposingHeader = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'rawfields' field */
    public com.equifax.fabric.uk.ingestion.officerlegacy.rawFields.RawFields getRawfields() {
      return rawfields;
    }
    
    /** Sets the value of the 'rawfields' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.History.Builder setRawfields(com.equifax.fabric.uk.ingestion.officerlegacy.rawFields.RawFields value) {
      validate(fields()[1], value);
      this.rawfields = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'rawfields' field has been set */
    public boolean hasRawfields() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'rawfields' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.History.Builder clearRawfields() {
      rawfields = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'standardised' field */
    public com.equifax.fabric.uk.ingestion.officerlegacy.standardisedfields.StandardisedFields getStandardised() {
      return standardised;
    }
    
    /** Sets the value of the 'standardised' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.History.Builder setStandardised(com.equifax.fabric.uk.ingestion.officerlegacy.standardisedfields.StandardisedFields value) {
      validate(fields()[2], value);
      this.standardised = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'standardised' field has been set */
    public boolean hasStandardised() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'standardised' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.History.Builder clearStandardised() {
      standardised = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public History build() {
      try {
        History record = new History();
        record.purposingHeader = fieldSetFlags()[0] ? this.purposingHeader : (com.equifax.fabric.uk.purposing.wizzards.header.PurposingHeader) defaultValue(fields()[0]);
        record.rawfields = fieldSetFlags()[1] ? this.rawfields : (com.equifax.fabric.uk.ingestion.officerlegacy.rawFields.RawFields) defaultValue(fields()[1]);
        record.standardised = fieldSetFlags()[2] ? this.standardised : (com.equifax.fabric.uk.ingestion.officerlegacy.standardisedfields.StandardisedFields) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
