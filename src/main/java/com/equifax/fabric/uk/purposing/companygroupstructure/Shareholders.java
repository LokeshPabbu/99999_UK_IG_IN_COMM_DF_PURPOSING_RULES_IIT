/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.purposing.companygroupstructure;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Shareholders extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Shareholders\",\"namespace\":\"com.equifax.fabric.uk.purposing.companygroupstructure\",\"fields\":[{\"name\":\"shareholderType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ShareholderType\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"IndividualorJoint\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"}]}],\"default\":null},{\"name\":\"companyNumber\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"companyName\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"title\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"5\",\"protect\":\"true\"},{\"name\":\"forename\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"5\",\"protect\":\"true\"},{\"name\":\"surname\",\"type\":[\"null\",\"string\"],\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"address1\",\"type\":[\"null\",\"string\"],\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"address2\",\"type\":[\"null\",\"string\"],\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"address3\",\"type\":[\"null\",\"string\"],\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"address4\",\"type\":[\"null\",\"string\"],\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"address5\",\"type\":[\"null\",\"string\"],\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"address6\",\"type\":[\"null\",\"string\"],\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"postcode\",\"type\":[\"null\",\"string\"],\"default\":null,\"protect\":\"true\",\"dataClassification\":\"5\"},{\"name\":\"percentageOfOrdinary\",\"type\":[\"null\",\"float\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"shares\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Shares\",\"fields\":[{\"name\":\"typeOfShare\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"numberOfShares\",\"type\":[\"null\",\"float\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"shareCurrency\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"joint\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"totalValueOfShares\",\"type\":[\"null\",\"float\"],\"default\":null,\"dataClassification\":\"3\"}]}},\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.equifax.fabric.uk.purposing.companygroupstructure.ShareholderType shareholderType;
  @Deprecated public java.lang.CharSequence companyNumber;
  @Deprecated public java.lang.CharSequence companyName;
  @Deprecated public java.lang.CharSequence title;
  @Deprecated public java.lang.CharSequence forename;
  @Deprecated public java.lang.CharSequence surname;
  @Deprecated public java.lang.CharSequence address1;
  @Deprecated public java.lang.CharSequence address2;
  @Deprecated public java.lang.CharSequence address3;
  @Deprecated public java.lang.CharSequence address4;
  @Deprecated public java.lang.CharSequence address5;
  @Deprecated public java.lang.CharSequence address6;
  @Deprecated public java.lang.CharSequence postcode;
  @Deprecated public java.lang.Float percentageOfOrdinary;
  @Deprecated public java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.Shares> shares;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Shareholders() {}

  /**
   * All-args constructor.
   */
  public Shareholders(com.equifax.fabric.uk.purposing.companygroupstructure.ShareholderType shareholderType, java.lang.CharSequence companyNumber, java.lang.CharSequence companyName, java.lang.CharSequence title, java.lang.CharSequence forename, java.lang.CharSequence surname, java.lang.CharSequence address1, java.lang.CharSequence address2, java.lang.CharSequence address3, java.lang.CharSequence address4, java.lang.CharSequence address5, java.lang.CharSequence address6, java.lang.CharSequence postcode, java.lang.Float percentageOfOrdinary, java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.Shares> shares) {
    this.shareholderType = shareholderType;
    this.companyNumber = companyNumber;
    this.companyName = companyName;
    this.title = title;
    this.forename = forename;
    this.surname = surname;
    this.address1 = address1;
    this.address2 = address2;
    this.address3 = address3;
    this.address4 = address4;
    this.address5 = address5;
    this.address6 = address6;
    this.postcode = postcode;
    this.percentageOfOrdinary = percentageOfOrdinary;
    this.shares = shares;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return shareholderType;
    case 1: return companyNumber;
    case 2: return companyName;
    case 3: return title;
    case 4: return forename;
    case 5: return surname;
    case 6: return address1;
    case 7: return address2;
    case 8: return address3;
    case 9: return address4;
    case 10: return address5;
    case 11: return address6;
    case 12: return postcode;
    case 13: return percentageOfOrdinary;
    case 14: return shares;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: shareholderType = (com.equifax.fabric.uk.purposing.companygroupstructure.ShareholderType)value$; break;
    case 1: companyNumber = (java.lang.CharSequence)value$; break;
    case 2: companyName = (java.lang.CharSequence)value$; break;
    case 3: title = (java.lang.CharSequence)value$; break;
    case 4: forename = (java.lang.CharSequence)value$; break;
    case 5: surname = (java.lang.CharSequence)value$; break;
    case 6: address1 = (java.lang.CharSequence)value$; break;
    case 7: address2 = (java.lang.CharSequence)value$; break;
    case 8: address3 = (java.lang.CharSequence)value$; break;
    case 9: address4 = (java.lang.CharSequence)value$; break;
    case 10: address5 = (java.lang.CharSequence)value$; break;
    case 11: address6 = (java.lang.CharSequence)value$; break;
    case 12: postcode = (java.lang.CharSequence)value$; break;
    case 13: percentageOfOrdinary = (java.lang.Float)value$; break;
    case 14: shares = (java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.Shares>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'shareholderType' field.
   */
  public com.equifax.fabric.uk.purposing.companygroupstructure.ShareholderType getShareholderType() {
    return shareholderType;
  }

  /**
   * Sets the value of the 'shareholderType' field.
   * @param value the value to set.
   */
  public void setShareholderType(com.equifax.fabric.uk.purposing.companygroupstructure.ShareholderType value) {
    this.shareholderType = value;
  }

  /**
   * Gets the value of the 'companyNumber' field.
   */
  public java.lang.CharSequence getCompanyNumber() {
    return companyNumber;
  }

  /**
   * Sets the value of the 'companyNumber' field.
   * @param value the value to set.
   */
  public void setCompanyNumber(java.lang.CharSequence value) {
    this.companyNumber = value;
  }

  /**
   * Gets the value of the 'companyName' field.
   */
  public java.lang.CharSequence getCompanyName() {
    return companyName;
  }

  /**
   * Sets the value of the 'companyName' field.
   * @param value the value to set.
   */
  public void setCompanyName(java.lang.CharSequence value) {
    this.companyName = value;
  }

  /**
   * Gets the value of the 'title' field.
   */
  public java.lang.CharSequence getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   * @param value the value to set.
   */
  public void setTitle(java.lang.CharSequence value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'forename' field.
   */
  public java.lang.CharSequence getForename() {
    return forename;
  }

  /**
   * Sets the value of the 'forename' field.
   * @param value the value to set.
   */
  public void setForename(java.lang.CharSequence value) {
    this.forename = value;
  }

  /**
   * Gets the value of the 'surname' field.
   */
  public java.lang.CharSequence getSurname() {
    return surname;
  }

  /**
   * Sets the value of the 'surname' field.
   * @param value the value to set.
   */
  public void setSurname(java.lang.CharSequence value) {
    this.surname = value;
  }

  /**
   * Gets the value of the 'address1' field.
   */
  public java.lang.CharSequence getAddress1() {
    return address1;
  }

  /**
   * Sets the value of the 'address1' field.
   * @param value the value to set.
   */
  public void setAddress1(java.lang.CharSequence value) {
    this.address1 = value;
  }

  /**
   * Gets the value of the 'address2' field.
   */
  public java.lang.CharSequence getAddress2() {
    return address2;
  }

  /**
   * Sets the value of the 'address2' field.
   * @param value the value to set.
   */
  public void setAddress2(java.lang.CharSequence value) {
    this.address2 = value;
  }

  /**
   * Gets the value of the 'address3' field.
   */
  public java.lang.CharSequence getAddress3() {
    return address3;
  }

  /**
   * Sets the value of the 'address3' field.
   * @param value the value to set.
   */
  public void setAddress3(java.lang.CharSequence value) {
    this.address3 = value;
  }

  /**
   * Gets the value of the 'address4' field.
   */
  public java.lang.CharSequence getAddress4() {
    return address4;
  }

  /**
   * Sets the value of the 'address4' field.
   * @param value the value to set.
   */
  public void setAddress4(java.lang.CharSequence value) {
    this.address4 = value;
  }

  /**
   * Gets the value of the 'address5' field.
   */
  public java.lang.CharSequence getAddress5() {
    return address5;
  }

  /**
   * Sets the value of the 'address5' field.
   * @param value the value to set.
   */
  public void setAddress5(java.lang.CharSequence value) {
    this.address5 = value;
  }

  /**
   * Gets the value of the 'address6' field.
   */
  public java.lang.CharSequence getAddress6() {
    return address6;
  }

  /**
   * Sets the value of the 'address6' field.
   * @param value the value to set.
   */
  public void setAddress6(java.lang.CharSequence value) {
    this.address6 = value;
  }

  /**
   * Gets the value of the 'postcode' field.
   */
  public java.lang.CharSequence getPostcode() {
    return postcode;
  }

  /**
   * Sets the value of the 'postcode' field.
   * @param value the value to set.
   */
  public void setPostcode(java.lang.CharSequence value) {
    this.postcode = value;
  }

  /**
   * Gets the value of the 'percentageOfOrdinary' field.
   */
  public java.lang.Float getPercentageOfOrdinary() {
    return percentageOfOrdinary;
  }

  /**
   * Sets the value of the 'percentageOfOrdinary' field.
   * @param value the value to set.
   */
  public void setPercentageOfOrdinary(java.lang.Float value) {
    this.percentageOfOrdinary = value;
  }

  /**
   * Gets the value of the 'shares' field.
   */
  public java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.Shares> getShares() {
    return shares;
  }

  /**
   * Sets the value of the 'shares' field.
   * @param value the value to set.
   */
  public void setShares(java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.Shares> value) {
    this.shares = value;
  }

  /** Creates a new Shareholders RecordBuilder */
  public static com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder newBuilder() {
    return new com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder();
  }
  
  /** Creates a new Shareholders RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder newBuilder(com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder other) {
    return new com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder(other);
  }
  
  /** Creates a new Shareholders RecordBuilder by copying an existing Shareholders instance */
  public static com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder newBuilder(com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders other) {
    return new com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder(other);
  }
  
  /**
   * RecordBuilder for Shareholders instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Shareholders>
    implements org.apache.avro.data.RecordBuilder<Shareholders> {

    private com.equifax.fabric.uk.purposing.companygroupstructure.ShareholderType shareholderType;
    private java.lang.CharSequence companyNumber;
    private java.lang.CharSequence companyName;
    private java.lang.CharSequence title;
    private java.lang.CharSequence forename;
    private java.lang.CharSequence surname;
    private java.lang.CharSequence address1;
    private java.lang.CharSequence address2;
    private java.lang.CharSequence address3;
    private java.lang.CharSequence address4;
    private java.lang.CharSequence address5;
    private java.lang.CharSequence address6;
    private java.lang.CharSequence postcode;
    private java.lang.Float percentageOfOrdinary;
    private java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.Shares> shares;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.shareholderType)) {
        this.shareholderType = data().deepCopy(fields()[0].schema(), other.shareholderType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.companyNumber)) {
        this.companyNumber = data().deepCopy(fields()[1].schema(), other.companyNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.companyName)) {
        this.companyName = data().deepCopy(fields()[2].schema(), other.companyName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.title)) {
        this.title = data().deepCopy(fields()[3].schema(), other.title);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.forename)) {
        this.forename = data().deepCopy(fields()[4].schema(), other.forename);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.surname)) {
        this.surname = data().deepCopy(fields()[5].schema(), other.surname);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.address1)) {
        this.address1 = data().deepCopy(fields()[6].schema(), other.address1);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.address2)) {
        this.address2 = data().deepCopy(fields()[7].schema(), other.address2);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.address3)) {
        this.address3 = data().deepCopy(fields()[8].schema(), other.address3);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.address4)) {
        this.address4 = data().deepCopy(fields()[9].schema(), other.address4);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.address5)) {
        this.address5 = data().deepCopy(fields()[10].schema(), other.address5);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.address6)) {
        this.address6 = data().deepCopy(fields()[11].schema(), other.address6);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.postcode)) {
        this.postcode = data().deepCopy(fields()[12].schema(), other.postcode);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.percentageOfOrdinary)) {
        this.percentageOfOrdinary = data().deepCopy(fields()[13].schema(), other.percentageOfOrdinary);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.shares)) {
        this.shares = data().deepCopy(fields()[14].schema(), other.shares);
        fieldSetFlags()[14] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Shareholders instance */
    private Builder(com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders other) {
            super(com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.SCHEMA$);
      if (isValidValue(fields()[0], other.shareholderType)) {
        this.shareholderType = data().deepCopy(fields()[0].schema(), other.shareholderType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.companyNumber)) {
        this.companyNumber = data().deepCopy(fields()[1].schema(), other.companyNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.companyName)) {
        this.companyName = data().deepCopy(fields()[2].schema(), other.companyName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.title)) {
        this.title = data().deepCopy(fields()[3].schema(), other.title);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.forename)) {
        this.forename = data().deepCopy(fields()[4].schema(), other.forename);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.surname)) {
        this.surname = data().deepCopy(fields()[5].schema(), other.surname);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.address1)) {
        this.address1 = data().deepCopy(fields()[6].schema(), other.address1);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.address2)) {
        this.address2 = data().deepCopy(fields()[7].schema(), other.address2);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.address3)) {
        this.address3 = data().deepCopy(fields()[8].schema(), other.address3);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.address4)) {
        this.address4 = data().deepCopy(fields()[9].schema(), other.address4);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.address5)) {
        this.address5 = data().deepCopy(fields()[10].schema(), other.address5);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.address6)) {
        this.address6 = data().deepCopy(fields()[11].schema(), other.address6);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.postcode)) {
        this.postcode = data().deepCopy(fields()[12].schema(), other.postcode);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.percentageOfOrdinary)) {
        this.percentageOfOrdinary = data().deepCopy(fields()[13].schema(), other.percentageOfOrdinary);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.shares)) {
        this.shares = data().deepCopy(fields()[14].schema(), other.shares);
        fieldSetFlags()[14] = true;
      }
    }

    /** Gets the value of the 'shareholderType' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.ShareholderType getShareholderType() {
      return shareholderType;
    }
    
    /** Sets the value of the 'shareholderType' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder setShareholderType(com.equifax.fabric.uk.purposing.companygroupstructure.ShareholderType value) {
      validate(fields()[0], value);
      this.shareholderType = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'shareholderType' field has been set */
    public boolean hasShareholderType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'shareholderType' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder clearShareholderType() {
      shareholderType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'companyNumber' field */
    public java.lang.CharSequence getCompanyNumber() {
      return companyNumber;
    }
    
    /** Sets the value of the 'companyNumber' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder setCompanyNumber(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.companyNumber = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'companyNumber' field has been set */
    public boolean hasCompanyNumber() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'companyNumber' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder clearCompanyNumber() {
      companyNumber = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'companyName' field */
    public java.lang.CharSequence getCompanyName() {
      return companyName;
    }
    
    /** Sets the value of the 'companyName' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder setCompanyName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.companyName = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'companyName' field has been set */
    public boolean hasCompanyName() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'companyName' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder clearCompanyName() {
      companyName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'title' field */
    public java.lang.CharSequence getTitle() {
      return title;
    }
    
    /** Sets the value of the 'title' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder setTitle(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.title = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'title' field has been set */
    public boolean hasTitle() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'title' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder clearTitle() {
      title = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'forename' field */
    public java.lang.CharSequence getForename() {
      return forename;
    }
    
    /** Sets the value of the 'forename' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder setForename(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.forename = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'forename' field has been set */
    public boolean hasForename() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'forename' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder clearForename() {
      forename = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'surname' field */
    public java.lang.CharSequence getSurname() {
      return surname;
    }
    
    /** Sets the value of the 'surname' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder setSurname(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.surname = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'surname' field has been set */
    public boolean hasSurname() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'surname' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder clearSurname() {
      surname = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'address1' field */
    public java.lang.CharSequence getAddress1() {
      return address1;
    }
    
    /** Sets the value of the 'address1' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder setAddress1(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.address1 = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'address1' field has been set */
    public boolean hasAddress1() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'address1' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder clearAddress1() {
      address1 = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'address2' field */
    public java.lang.CharSequence getAddress2() {
      return address2;
    }
    
    /** Sets the value of the 'address2' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder setAddress2(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.address2 = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'address2' field has been set */
    public boolean hasAddress2() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'address2' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder clearAddress2() {
      address2 = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'address3' field */
    public java.lang.CharSequence getAddress3() {
      return address3;
    }
    
    /** Sets the value of the 'address3' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder setAddress3(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.address3 = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'address3' field has been set */
    public boolean hasAddress3() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'address3' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder clearAddress3() {
      address3 = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'address4' field */
    public java.lang.CharSequence getAddress4() {
      return address4;
    }
    
    /** Sets the value of the 'address4' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder setAddress4(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.address4 = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'address4' field has been set */
    public boolean hasAddress4() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'address4' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder clearAddress4() {
      address4 = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'address5' field */
    public java.lang.CharSequence getAddress5() {
      return address5;
    }
    
    /** Sets the value of the 'address5' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder setAddress5(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.address5 = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'address5' field has been set */
    public boolean hasAddress5() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'address5' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder clearAddress5() {
      address5 = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'address6' field */
    public java.lang.CharSequence getAddress6() {
      return address6;
    }
    
    /** Sets the value of the 'address6' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder setAddress6(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.address6 = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'address6' field has been set */
    public boolean hasAddress6() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'address6' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder clearAddress6() {
      address6 = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'postcode' field */
    public java.lang.CharSequence getPostcode() {
      return postcode;
    }
    
    /** Sets the value of the 'postcode' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder setPostcode(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.postcode = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'postcode' field has been set */
    public boolean hasPostcode() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'postcode' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder clearPostcode() {
      postcode = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'percentageOfOrdinary' field */
    public java.lang.Float getPercentageOfOrdinary() {
      return percentageOfOrdinary;
    }
    
    /** Sets the value of the 'percentageOfOrdinary' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder setPercentageOfOrdinary(java.lang.Float value) {
      validate(fields()[13], value);
      this.percentageOfOrdinary = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'percentageOfOrdinary' field has been set */
    public boolean hasPercentageOfOrdinary() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'percentageOfOrdinary' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder clearPercentageOfOrdinary() {
      percentageOfOrdinary = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'shares' field */
    public java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.Shares> getShares() {
      return shares;
    }
    
    /** Sets the value of the 'shares' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder setShares(java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.Shares> value) {
      validate(fields()[14], value);
      this.shares = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'shares' field has been set */
    public boolean hasShares() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'shares' field */
    public com.equifax.fabric.uk.purposing.companygroupstructure.Shareholders.Builder clearShares() {
      shares = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    public Shareholders build() {
      try {
        Shareholders record = new Shareholders();
        record.shareholderType = fieldSetFlags()[0] ? this.shareholderType : (com.equifax.fabric.uk.purposing.companygroupstructure.ShareholderType) defaultValue(fields()[0]);
        record.companyNumber = fieldSetFlags()[1] ? this.companyNumber : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.companyName = fieldSetFlags()[2] ? this.companyName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.title = fieldSetFlags()[3] ? this.title : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.forename = fieldSetFlags()[4] ? this.forename : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.surname = fieldSetFlags()[5] ? this.surname : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.address1 = fieldSetFlags()[6] ? this.address1 : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.address2 = fieldSetFlags()[7] ? this.address2 : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.address3 = fieldSetFlags()[8] ? this.address3 : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.address4 = fieldSetFlags()[9] ? this.address4 : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.address5 = fieldSetFlags()[10] ? this.address5 : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.address6 = fieldSetFlags()[11] ? this.address6 : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.postcode = fieldSetFlags()[12] ? this.postcode : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.percentageOfOrdinary = fieldSetFlags()[13] ? this.percentageOfOrdinary : (java.lang.Float) defaultValue(fields()[13]);
        record.shares = fieldSetFlags()[14] ? this.shares : (java.util.List<com.equifax.fabric.uk.purposing.companygroupstructure.Shares>) defaultValue(fields()[14]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
