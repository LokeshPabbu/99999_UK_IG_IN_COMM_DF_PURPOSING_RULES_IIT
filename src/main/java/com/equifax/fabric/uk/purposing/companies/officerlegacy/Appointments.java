/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.uk.purposing.companies.officerlegacy;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Appointments extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Appointments\",\"namespace\":\"com.equifax.fabric.uk.purposing.companies.officerlegacy\",\"fields\":[{\"name\":\"PERSON_APPOINTMENT_DATE\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_NEW_APPOINTMENT_TYPE\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"PERSON_OCCUPATION\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"5\",\"protect\":\"true\"},{\"name\":\"PERSON_RESIGNATION_DATE\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"},{\"name\":\"STATUS\",\"type\":[\"null\",\"string\"],\"default\":null,\"dataClassification\":\"3\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence PERSON_APPOINTMENT_DATE;
  @Deprecated public java.lang.CharSequence PERSON_NEW_APPOINTMENT_TYPE;
  @Deprecated public java.lang.CharSequence PERSON_OCCUPATION;
  @Deprecated public java.lang.CharSequence PERSON_RESIGNATION_DATE;
  @Deprecated public java.lang.CharSequence STATUS;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Appointments() {}

  /**
   * All-args constructor.
   */
  public Appointments(java.lang.CharSequence PERSON_APPOINTMENT_DATE, java.lang.CharSequence PERSON_NEW_APPOINTMENT_TYPE, java.lang.CharSequence PERSON_OCCUPATION, java.lang.CharSequence PERSON_RESIGNATION_DATE, java.lang.CharSequence STATUS) {
    this.PERSON_APPOINTMENT_DATE = PERSON_APPOINTMENT_DATE;
    this.PERSON_NEW_APPOINTMENT_TYPE = PERSON_NEW_APPOINTMENT_TYPE;
    this.PERSON_OCCUPATION = PERSON_OCCUPATION;
    this.PERSON_RESIGNATION_DATE = PERSON_RESIGNATION_DATE;
    this.STATUS = STATUS;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return PERSON_APPOINTMENT_DATE;
    case 1: return PERSON_NEW_APPOINTMENT_TYPE;
    case 2: return PERSON_OCCUPATION;
    case 3: return PERSON_RESIGNATION_DATE;
    case 4: return STATUS;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: PERSON_APPOINTMENT_DATE = (java.lang.CharSequence)value$; break;
    case 1: PERSON_NEW_APPOINTMENT_TYPE = (java.lang.CharSequence)value$; break;
    case 2: PERSON_OCCUPATION = (java.lang.CharSequence)value$; break;
    case 3: PERSON_RESIGNATION_DATE = (java.lang.CharSequence)value$; break;
    case 4: STATUS = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'PERSON_APPOINTMENT_DATE' field.
   */
  public java.lang.CharSequence getPERSONAPPOINTMENTDATE() {
    return PERSON_APPOINTMENT_DATE;
  }

  /**
   * Sets the value of the 'PERSON_APPOINTMENT_DATE' field.
   * @param value the value to set.
   */
  public void setPERSONAPPOINTMENTDATE(java.lang.CharSequence value) {
    this.PERSON_APPOINTMENT_DATE = value;
  }

  /**
   * Gets the value of the 'PERSON_NEW_APPOINTMENT_TYPE' field.
   */
  public java.lang.CharSequence getPERSONNEWAPPOINTMENTTYPE() {
    return PERSON_NEW_APPOINTMENT_TYPE;
  }

  /**
   * Sets the value of the 'PERSON_NEW_APPOINTMENT_TYPE' field.
   * @param value the value to set.
   */
  public void setPERSONNEWAPPOINTMENTTYPE(java.lang.CharSequence value) {
    this.PERSON_NEW_APPOINTMENT_TYPE = value;
  }

  /**
   * Gets the value of the 'PERSON_OCCUPATION' field.
   */
  public java.lang.CharSequence getPERSONOCCUPATION() {
    return PERSON_OCCUPATION;
  }

  /**
   * Sets the value of the 'PERSON_OCCUPATION' field.
   * @param value the value to set.
   */
  public void setPERSONOCCUPATION(java.lang.CharSequence value) {
    this.PERSON_OCCUPATION = value;
  }

  /**
   * Gets the value of the 'PERSON_RESIGNATION_DATE' field.
   */
  public java.lang.CharSequence getPERSONRESIGNATIONDATE() {
    return PERSON_RESIGNATION_DATE;
  }

  /**
   * Sets the value of the 'PERSON_RESIGNATION_DATE' field.
   * @param value the value to set.
   */
  public void setPERSONRESIGNATIONDATE(java.lang.CharSequence value) {
    this.PERSON_RESIGNATION_DATE = value;
  }

  /**
   * Gets the value of the 'STATUS' field.
   */
  public java.lang.CharSequence getSTATUS() {
    return STATUS;
  }

  /**
   * Sets the value of the 'STATUS' field.
   * @param value the value to set.
   */
  public void setSTATUS(java.lang.CharSequence value) {
    this.STATUS = value;
  }

  /** Creates a new Appointments RecordBuilder */
  public static com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.Builder newBuilder() {
    return new com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.Builder();
  }
  
  /** Creates a new Appointments RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.Builder newBuilder(com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.Builder other) {
    return new com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.Builder(other);
  }
  
  /** Creates a new Appointments RecordBuilder by copying an existing Appointments instance */
  public static com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.Builder newBuilder(com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments other) {
    return new com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.Builder(other);
  }
  
  /**
   * RecordBuilder for Appointments instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Appointments>
    implements org.apache.avro.data.RecordBuilder<Appointments> {

    private java.lang.CharSequence PERSON_APPOINTMENT_DATE;
    private java.lang.CharSequence PERSON_NEW_APPOINTMENT_TYPE;
    private java.lang.CharSequence PERSON_OCCUPATION;
    private java.lang.CharSequence PERSON_RESIGNATION_DATE;
    private java.lang.CharSequence STATUS;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.PERSON_APPOINTMENT_DATE)) {
        this.PERSON_APPOINTMENT_DATE = data().deepCopy(fields()[0].schema(), other.PERSON_APPOINTMENT_DATE);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.PERSON_NEW_APPOINTMENT_TYPE)) {
        this.PERSON_NEW_APPOINTMENT_TYPE = data().deepCopy(fields()[1].schema(), other.PERSON_NEW_APPOINTMENT_TYPE);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.PERSON_OCCUPATION)) {
        this.PERSON_OCCUPATION = data().deepCopy(fields()[2].schema(), other.PERSON_OCCUPATION);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.PERSON_RESIGNATION_DATE)) {
        this.PERSON_RESIGNATION_DATE = data().deepCopy(fields()[3].schema(), other.PERSON_RESIGNATION_DATE);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.STATUS)) {
        this.STATUS = data().deepCopy(fields()[4].schema(), other.STATUS);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Appointments instance */
    private Builder(com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments other) {
            super(com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.SCHEMA$);
      if (isValidValue(fields()[0], other.PERSON_APPOINTMENT_DATE)) {
        this.PERSON_APPOINTMENT_DATE = data().deepCopy(fields()[0].schema(), other.PERSON_APPOINTMENT_DATE);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.PERSON_NEW_APPOINTMENT_TYPE)) {
        this.PERSON_NEW_APPOINTMENT_TYPE = data().deepCopy(fields()[1].schema(), other.PERSON_NEW_APPOINTMENT_TYPE);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.PERSON_OCCUPATION)) {
        this.PERSON_OCCUPATION = data().deepCopy(fields()[2].schema(), other.PERSON_OCCUPATION);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.PERSON_RESIGNATION_DATE)) {
        this.PERSON_RESIGNATION_DATE = data().deepCopy(fields()[3].schema(), other.PERSON_RESIGNATION_DATE);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.STATUS)) {
        this.STATUS = data().deepCopy(fields()[4].schema(), other.STATUS);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'PERSON_APPOINTMENT_DATE' field */
    public java.lang.CharSequence getPERSONAPPOINTMENTDATE() {
      return PERSON_APPOINTMENT_DATE;
    }
    
    /** Sets the value of the 'PERSON_APPOINTMENT_DATE' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.Builder setPERSONAPPOINTMENTDATE(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.PERSON_APPOINTMENT_DATE = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_APPOINTMENT_DATE' field has been set */
    public boolean hasPERSONAPPOINTMENTDATE() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'PERSON_APPOINTMENT_DATE' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.Builder clearPERSONAPPOINTMENTDATE() {
      PERSON_APPOINTMENT_DATE = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_NEW_APPOINTMENT_TYPE' field */
    public java.lang.CharSequence getPERSONNEWAPPOINTMENTTYPE() {
      return PERSON_NEW_APPOINTMENT_TYPE;
    }
    
    /** Sets the value of the 'PERSON_NEW_APPOINTMENT_TYPE' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.Builder setPERSONNEWAPPOINTMENTTYPE(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.PERSON_NEW_APPOINTMENT_TYPE = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_NEW_APPOINTMENT_TYPE' field has been set */
    public boolean hasPERSONNEWAPPOINTMENTTYPE() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'PERSON_NEW_APPOINTMENT_TYPE' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.Builder clearPERSONNEWAPPOINTMENTTYPE() {
      PERSON_NEW_APPOINTMENT_TYPE = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_OCCUPATION' field */
    public java.lang.CharSequence getPERSONOCCUPATION() {
      return PERSON_OCCUPATION;
    }
    
    /** Sets the value of the 'PERSON_OCCUPATION' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.Builder setPERSONOCCUPATION(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.PERSON_OCCUPATION = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_OCCUPATION' field has been set */
    public boolean hasPERSONOCCUPATION() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'PERSON_OCCUPATION' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.Builder clearPERSONOCCUPATION() {
      PERSON_OCCUPATION = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'PERSON_RESIGNATION_DATE' field */
    public java.lang.CharSequence getPERSONRESIGNATIONDATE() {
      return PERSON_RESIGNATION_DATE;
    }
    
    /** Sets the value of the 'PERSON_RESIGNATION_DATE' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.Builder setPERSONRESIGNATIONDATE(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.PERSON_RESIGNATION_DATE = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'PERSON_RESIGNATION_DATE' field has been set */
    public boolean hasPERSONRESIGNATIONDATE() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'PERSON_RESIGNATION_DATE' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.Builder clearPERSONRESIGNATIONDATE() {
      PERSON_RESIGNATION_DATE = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'STATUS' field */
    public java.lang.CharSequence getSTATUS() {
      return STATUS;
    }
    
    /** Sets the value of the 'STATUS' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.Builder setSTATUS(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.STATUS = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'STATUS' field has been set */
    public boolean hasSTATUS() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'STATUS' field */
    public com.equifax.fabric.uk.purposing.companies.officerlegacy.Appointments.Builder clearSTATUS() {
      STATUS = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public Appointments build() {
      try {
        Appointments record = new Appointments();
        record.PERSON_APPOINTMENT_DATE = fieldSetFlags()[0] ? this.PERSON_APPOINTMENT_DATE : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.PERSON_NEW_APPOINTMENT_TYPE = fieldSetFlags()[1] ? this.PERSON_NEW_APPOINTMENT_TYPE : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.PERSON_OCCUPATION = fieldSetFlags()[2] ? this.PERSON_OCCUPATION : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.PERSON_RESIGNATION_DATE = fieldSetFlags()[3] ? this.PERSON_RESIGNATION_DATE : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.STATUS = fieldSetFlags()[4] ? this.STATUS : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
