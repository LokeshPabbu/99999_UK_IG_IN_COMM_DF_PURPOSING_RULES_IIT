/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.equifax.fabric.commons.dp.domain;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ProtectionInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ProtectionInfo\",\"namespace\":\"com.equifax.fabric.commons.dp.domain\",\"fields\":[{\"name\":\"unprotected\",\"type\":\"boolean\"},{\"name\":\"protectionTime\",\"type\":\"long\"},{\"name\":\"keyGenTime\",\"type\":\"long\"},{\"name\":\"keyId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"keyBytes\",\"type\":[\"null\",\"bytes\"],\"default\":null},{\"name\":\"keystoreId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"keyIndex\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"publicKeyType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"asymmetricKeyUrl\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"asymmetricKeyVersion\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"asymmetricMd5\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"additionalInfo\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"encryptionMeta\",\"type\":[\"null\",\"bytes\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public boolean unprotected;
  @Deprecated public long protectionTime;
  @Deprecated public long keyGenTime;
  @Deprecated public java.lang.CharSequence keyId;
  @Deprecated public java.nio.ByteBuffer keyBytes;
  @Deprecated public java.lang.CharSequence keystoreId;
  @Deprecated public java.lang.Integer keyIndex;
  @Deprecated public java.lang.CharSequence publicKeyType;
  @Deprecated public java.lang.CharSequence asymmetricKeyUrl;
  @Deprecated public java.lang.CharSequence asymmetricKeyVersion;
  @Deprecated public java.lang.CharSequence asymmetricMd5;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> additionalInfo;
  @Deprecated public java.nio.ByteBuffer encryptionMeta;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ProtectionInfo() {}

  /**
   * All-args constructor.
   */
  public ProtectionInfo(java.lang.Boolean unprotected, java.lang.Long protectionTime, java.lang.Long keyGenTime, java.lang.CharSequence keyId, java.nio.ByteBuffer keyBytes, java.lang.CharSequence keystoreId, java.lang.Integer keyIndex, java.lang.CharSequence publicKeyType, java.lang.CharSequence asymmetricKeyUrl, java.lang.CharSequence asymmetricKeyVersion, java.lang.CharSequence asymmetricMd5, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> additionalInfo, java.nio.ByteBuffer encryptionMeta) {
    this.unprotected = unprotected;
    this.protectionTime = protectionTime;
    this.keyGenTime = keyGenTime;
    this.keyId = keyId;
    this.keyBytes = keyBytes;
    this.keystoreId = keystoreId;
    this.keyIndex = keyIndex;
    this.publicKeyType = publicKeyType;
    this.asymmetricKeyUrl = asymmetricKeyUrl;
    this.asymmetricKeyVersion = asymmetricKeyVersion;
    this.asymmetricMd5 = asymmetricMd5;
    this.additionalInfo = additionalInfo;
    this.encryptionMeta = encryptionMeta;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return unprotected;
    case 1: return protectionTime;
    case 2: return keyGenTime;
    case 3: return keyId;
    case 4: return keyBytes;
    case 5: return keystoreId;
    case 6: return keyIndex;
    case 7: return publicKeyType;
    case 8: return asymmetricKeyUrl;
    case 9: return asymmetricKeyVersion;
    case 10: return asymmetricMd5;
    case 11: return additionalInfo;
    case 12: return encryptionMeta;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: unprotected = (java.lang.Boolean)value$; break;
    case 1: protectionTime = (java.lang.Long)value$; break;
    case 2: keyGenTime = (java.lang.Long)value$; break;
    case 3: keyId = (java.lang.CharSequence)value$; break;
    case 4: keyBytes = (java.nio.ByteBuffer)value$; break;
    case 5: keystoreId = (java.lang.CharSequence)value$; break;
    case 6: keyIndex = (java.lang.Integer)value$; break;
    case 7: publicKeyType = (java.lang.CharSequence)value$; break;
    case 8: asymmetricKeyUrl = (java.lang.CharSequence)value$; break;
    case 9: asymmetricKeyVersion = (java.lang.CharSequence)value$; break;
    case 10: asymmetricMd5 = (java.lang.CharSequence)value$; break;
    case 11: additionalInfo = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    case 12: encryptionMeta = (java.nio.ByteBuffer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'unprotected' field.
   */
  public java.lang.Boolean getUnprotected() {
    return unprotected;
  }

  /**
   * Sets the value of the 'unprotected' field.
   * @param value the value to set.
   */
  public void setUnprotected(java.lang.Boolean value) {
    this.unprotected = value;
  }

  /**
   * Gets the value of the 'protectionTime' field.
   */
  public java.lang.Long getProtectionTime() {
    return protectionTime;
  }

  /**
   * Sets the value of the 'protectionTime' field.
   * @param value the value to set.
   */
  public void setProtectionTime(java.lang.Long value) {
    this.protectionTime = value;
  }

  /**
   * Gets the value of the 'keyGenTime' field.
   */
  public java.lang.Long getKeyGenTime() {
    return keyGenTime;
  }

  /**
   * Sets the value of the 'keyGenTime' field.
   * @param value the value to set.
   */
  public void setKeyGenTime(java.lang.Long value) {
    this.keyGenTime = value;
  }

  /**
   * Gets the value of the 'keyId' field.
   */
  public java.lang.CharSequence getKeyId() {
    return keyId;
  }

  /**
   * Sets the value of the 'keyId' field.
   * @param value the value to set.
   */
  public void setKeyId(java.lang.CharSequence value) {
    this.keyId = value;
  }

  /**
   * Gets the value of the 'keyBytes' field.
   */
  public java.nio.ByteBuffer getKeyBytes() {
    return keyBytes;
  }

  /**
   * Sets the value of the 'keyBytes' field.
   * @param value the value to set.
   */
  public void setKeyBytes(java.nio.ByteBuffer value) {
    this.keyBytes = value;
  }

  /**
   * Gets the value of the 'keystoreId' field.
   */
  public java.lang.CharSequence getKeystoreId() {
    return keystoreId;
  }

  /**
   * Sets the value of the 'keystoreId' field.
   * @param value the value to set.
   */
  public void setKeystoreId(java.lang.CharSequence value) {
    this.keystoreId = value;
  }

  /**
   * Gets the value of the 'keyIndex' field.
   */
  public java.lang.Integer getKeyIndex() {
    return keyIndex;
  }

  /**
   * Sets the value of the 'keyIndex' field.
   * @param value the value to set.
   */
  public void setKeyIndex(java.lang.Integer value) {
    this.keyIndex = value;
  }

  /**
   * Gets the value of the 'publicKeyType' field.
   */
  public java.lang.CharSequence getPublicKeyType() {
    return publicKeyType;
  }

  /**
   * Sets the value of the 'publicKeyType' field.
   * @param value the value to set.
   */
  public void setPublicKeyType(java.lang.CharSequence value) {
    this.publicKeyType = value;
  }

  /**
   * Gets the value of the 'asymmetricKeyUrl' field.
   */
  public java.lang.CharSequence getAsymmetricKeyUrl() {
    return asymmetricKeyUrl;
  }

  /**
   * Sets the value of the 'asymmetricKeyUrl' field.
   * @param value the value to set.
   */
  public void setAsymmetricKeyUrl(java.lang.CharSequence value) {
    this.asymmetricKeyUrl = value;
  }

  /**
   * Gets the value of the 'asymmetricKeyVersion' field.
   */
  public java.lang.CharSequence getAsymmetricKeyVersion() {
    return asymmetricKeyVersion;
  }

  /**
   * Sets the value of the 'asymmetricKeyVersion' field.
   * @param value the value to set.
   */
  public void setAsymmetricKeyVersion(java.lang.CharSequence value) {
    this.asymmetricKeyVersion = value;
  }

  /**
   * Gets the value of the 'asymmetricMd5' field.
   */
  public java.lang.CharSequence getAsymmetricMd5() {
    return asymmetricMd5;
  }

  /**
   * Sets the value of the 'asymmetricMd5' field.
   * @param value the value to set.
   */
  public void setAsymmetricMd5(java.lang.CharSequence value) {
    this.asymmetricMd5 = value;
  }

  /**
   * Gets the value of the 'additionalInfo' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getAdditionalInfo() {
    return additionalInfo;
  }

  /**
   * Sets the value of the 'additionalInfo' field.
   * @param value the value to set.
   */
  public void setAdditionalInfo(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.additionalInfo = value;
  }

  /**
   * Gets the value of the 'encryptionMeta' field.
   */
  public java.nio.ByteBuffer getEncryptionMeta() {
    return encryptionMeta;
  }

  /**
   * Sets the value of the 'encryptionMeta' field.
   * @param value the value to set.
   */
  public void setEncryptionMeta(java.nio.ByteBuffer value) {
    this.encryptionMeta = value;
  }

  /** Creates a new ProtectionInfo RecordBuilder */
  public static com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder newBuilder() {
    return new com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder();
  }
  
  /** Creates a new ProtectionInfo RecordBuilder by copying an existing Builder */
  public static com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder newBuilder(com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder other) {
    return new com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder(other);
  }
  
  /** Creates a new ProtectionInfo RecordBuilder by copying an existing ProtectionInfo instance */
  public static com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder newBuilder(com.equifax.fabric.commons.dp.domain.ProtectionInfo other) {
    return new com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for ProtectionInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ProtectionInfo>
    implements org.apache.avro.data.RecordBuilder<ProtectionInfo> {

    private boolean unprotected;
    private long protectionTime;
    private long keyGenTime;
    private java.lang.CharSequence keyId;
    private java.nio.ByteBuffer keyBytes;
    private java.lang.CharSequence keystoreId;
    private java.lang.Integer keyIndex;
    private java.lang.CharSequence publicKeyType;
    private java.lang.CharSequence asymmetricKeyUrl;
    private java.lang.CharSequence asymmetricKeyVersion;
    private java.lang.CharSequence asymmetricMd5;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> additionalInfo;
    private java.nio.ByteBuffer encryptionMeta;

    /** Creates a new Builder */
    private Builder() {
      super(com.equifax.fabric.commons.dp.domain.ProtectionInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.unprotected)) {
        this.unprotected = data().deepCopy(fields()[0].schema(), other.unprotected);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.protectionTime)) {
        this.protectionTime = data().deepCopy(fields()[1].schema(), other.protectionTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.keyGenTime)) {
        this.keyGenTime = data().deepCopy(fields()[2].schema(), other.keyGenTime);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.keyId)) {
        this.keyId = data().deepCopy(fields()[3].schema(), other.keyId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.keyBytes)) {
        this.keyBytes = data().deepCopy(fields()[4].schema(), other.keyBytes);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.keystoreId)) {
        this.keystoreId = data().deepCopy(fields()[5].schema(), other.keystoreId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.keyIndex)) {
        this.keyIndex = data().deepCopy(fields()[6].schema(), other.keyIndex);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.publicKeyType)) {
        this.publicKeyType = data().deepCopy(fields()[7].schema(), other.publicKeyType);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.asymmetricKeyUrl)) {
        this.asymmetricKeyUrl = data().deepCopy(fields()[8].schema(), other.asymmetricKeyUrl);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.asymmetricKeyVersion)) {
        this.asymmetricKeyVersion = data().deepCopy(fields()[9].schema(), other.asymmetricKeyVersion);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.asymmetricMd5)) {
        this.asymmetricMd5 = data().deepCopy(fields()[10].schema(), other.asymmetricMd5);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.additionalInfo)) {
        this.additionalInfo = data().deepCopy(fields()[11].schema(), other.additionalInfo);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.encryptionMeta)) {
        this.encryptionMeta = data().deepCopy(fields()[12].schema(), other.encryptionMeta);
        fieldSetFlags()[12] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ProtectionInfo instance */
    private Builder(com.equifax.fabric.commons.dp.domain.ProtectionInfo other) {
            super(com.equifax.fabric.commons.dp.domain.ProtectionInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.unprotected)) {
        this.unprotected = data().deepCopy(fields()[0].schema(), other.unprotected);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.protectionTime)) {
        this.protectionTime = data().deepCopy(fields()[1].schema(), other.protectionTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.keyGenTime)) {
        this.keyGenTime = data().deepCopy(fields()[2].schema(), other.keyGenTime);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.keyId)) {
        this.keyId = data().deepCopy(fields()[3].schema(), other.keyId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.keyBytes)) {
        this.keyBytes = data().deepCopy(fields()[4].schema(), other.keyBytes);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.keystoreId)) {
        this.keystoreId = data().deepCopy(fields()[5].schema(), other.keystoreId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.keyIndex)) {
        this.keyIndex = data().deepCopy(fields()[6].schema(), other.keyIndex);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.publicKeyType)) {
        this.publicKeyType = data().deepCopy(fields()[7].schema(), other.publicKeyType);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.asymmetricKeyUrl)) {
        this.asymmetricKeyUrl = data().deepCopy(fields()[8].schema(), other.asymmetricKeyUrl);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.asymmetricKeyVersion)) {
        this.asymmetricKeyVersion = data().deepCopy(fields()[9].schema(), other.asymmetricKeyVersion);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.asymmetricMd5)) {
        this.asymmetricMd5 = data().deepCopy(fields()[10].schema(), other.asymmetricMd5);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.additionalInfo)) {
        this.additionalInfo = data().deepCopy(fields()[11].schema(), other.additionalInfo);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.encryptionMeta)) {
        this.encryptionMeta = data().deepCopy(fields()[12].schema(), other.encryptionMeta);
        fieldSetFlags()[12] = true;
      }
    }

    /** Gets the value of the 'unprotected' field */
    public java.lang.Boolean getUnprotected() {
      return unprotected;
    }
    
    /** Sets the value of the 'unprotected' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder setUnprotected(boolean value) {
      validate(fields()[0], value);
      this.unprotected = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'unprotected' field has been set */
    public boolean hasUnprotected() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'unprotected' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder clearUnprotected() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'protectionTime' field */
    public java.lang.Long getProtectionTime() {
      return protectionTime;
    }
    
    /** Sets the value of the 'protectionTime' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder setProtectionTime(long value) {
      validate(fields()[1], value);
      this.protectionTime = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'protectionTime' field has been set */
    public boolean hasProtectionTime() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'protectionTime' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder clearProtectionTime() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'keyGenTime' field */
    public java.lang.Long getKeyGenTime() {
      return keyGenTime;
    }
    
    /** Sets the value of the 'keyGenTime' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder setKeyGenTime(long value) {
      validate(fields()[2], value);
      this.keyGenTime = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'keyGenTime' field has been set */
    public boolean hasKeyGenTime() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'keyGenTime' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder clearKeyGenTime() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'keyId' field */
    public java.lang.CharSequence getKeyId() {
      return keyId;
    }
    
    /** Sets the value of the 'keyId' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder setKeyId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.keyId = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'keyId' field has been set */
    public boolean hasKeyId() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'keyId' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder clearKeyId() {
      keyId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'keyBytes' field */
    public java.nio.ByteBuffer getKeyBytes() {
      return keyBytes;
    }
    
    /** Sets the value of the 'keyBytes' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder setKeyBytes(java.nio.ByteBuffer value) {
      validate(fields()[4], value);
      this.keyBytes = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'keyBytes' field has been set */
    public boolean hasKeyBytes() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'keyBytes' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder clearKeyBytes() {
      keyBytes = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'keystoreId' field */
    public java.lang.CharSequence getKeystoreId() {
      return keystoreId;
    }
    
    /** Sets the value of the 'keystoreId' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder setKeystoreId(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.keystoreId = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'keystoreId' field has been set */
    public boolean hasKeystoreId() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'keystoreId' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder clearKeystoreId() {
      keystoreId = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'keyIndex' field */
    public java.lang.Integer getKeyIndex() {
      return keyIndex;
    }
    
    /** Sets the value of the 'keyIndex' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder setKeyIndex(java.lang.Integer value) {
      validate(fields()[6], value);
      this.keyIndex = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'keyIndex' field has been set */
    public boolean hasKeyIndex() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'keyIndex' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder clearKeyIndex() {
      keyIndex = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'publicKeyType' field */
    public java.lang.CharSequence getPublicKeyType() {
      return publicKeyType;
    }
    
    /** Sets the value of the 'publicKeyType' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder setPublicKeyType(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.publicKeyType = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'publicKeyType' field has been set */
    public boolean hasPublicKeyType() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'publicKeyType' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder clearPublicKeyType() {
      publicKeyType = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'asymmetricKeyUrl' field */
    public java.lang.CharSequence getAsymmetricKeyUrl() {
      return asymmetricKeyUrl;
    }
    
    /** Sets the value of the 'asymmetricKeyUrl' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder setAsymmetricKeyUrl(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.asymmetricKeyUrl = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'asymmetricKeyUrl' field has been set */
    public boolean hasAsymmetricKeyUrl() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'asymmetricKeyUrl' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder clearAsymmetricKeyUrl() {
      asymmetricKeyUrl = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'asymmetricKeyVersion' field */
    public java.lang.CharSequence getAsymmetricKeyVersion() {
      return asymmetricKeyVersion;
    }
    
    /** Sets the value of the 'asymmetricKeyVersion' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder setAsymmetricKeyVersion(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.asymmetricKeyVersion = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'asymmetricKeyVersion' field has been set */
    public boolean hasAsymmetricKeyVersion() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'asymmetricKeyVersion' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder clearAsymmetricKeyVersion() {
      asymmetricKeyVersion = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'asymmetricMd5' field */
    public java.lang.CharSequence getAsymmetricMd5() {
      return asymmetricMd5;
    }
    
    /** Sets the value of the 'asymmetricMd5' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder setAsymmetricMd5(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.asymmetricMd5 = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'asymmetricMd5' field has been set */
    public boolean hasAsymmetricMd5() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'asymmetricMd5' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder clearAsymmetricMd5() {
      asymmetricMd5 = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'additionalInfo' field */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getAdditionalInfo() {
      return additionalInfo;
    }
    
    /** Sets the value of the 'additionalInfo' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder setAdditionalInfo(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[11], value);
      this.additionalInfo = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'additionalInfo' field has been set */
    public boolean hasAdditionalInfo() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'additionalInfo' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder clearAdditionalInfo() {
      additionalInfo = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'encryptionMeta' field */
    public java.nio.ByteBuffer getEncryptionMeta() {
      return encryptionMeta;
    }
    
    /** Sets the value of the 'encryptionMeta' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder setEncryptionMeta(java.nio.ByteBuffer value) {
      validate(fields()[12], value);
      this.encryptionMeta = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'encryptionMeta' field has been set */
    public boolean hasEncryptionMeta() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'encryptionMeta' field */
    public com.equifax.fabric.commons.dp.domain.ProtectionInfo.Builder clearEncryptionMeta() {
      encryptionMeta = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    public ProtectionInfo build() {
      try {
        ProtectionInfo record = new ProtectionInfo();
        record.unprotected = fieldSetFlags()[0] ? this.unprotected : (java.lang.Boolean) defaultValue(fields()[0]);
        record.protectionTime = fieldSetFlags()[1] ? this.protectionTime : (java.lang.Long) defaultValue(fields()[1]);
        record.keyGenTime = fieldSetFlags()[2] ? this.keyGenTime : (java.lang.Long) defaultValue(fields()[2]);
        record.keyId = fieldSetFlags()[3] ? this.keyId : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.keyBytes = fieldSetFlags()[4] ? this.keyBytes : (java.nio.ByteBuffer) defaultValue(fields()[4]);
        record.keystoreId = fieldSetFlags()[5] ? this.keystoreId : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.keyIndex = fieldSetFlags()[6] ? this.keyIndex : (java.lang.Integer) defaultValue(fields()[6]);
        record.publicKeyType = fieldSetFlags()[7] ? this.publicKeyType : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.asymmetricKeyUrl = fieldSetFlags()[8] ? this.asymmetricKeyUrl : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.asymmetricKeyVersion = fieldSetFlags()[9] ? this.asymmetricKeyVersion : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.asymmetricMd5 = fieldSetFlags()[10] ? this.asymmetricMd5 : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.additionalInfo = fieldSetFlags()[11] ? this.additionalInfo : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[11]);
        record.encryptionMeta = fieldSetFlags()[12] ? this.encryptionMeta : (java.nio.ByteBuffer) defaultValue(fields()[12]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
